------------------------------------------------------------- MIS_APR_FEES -------------------------------------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

----Carga de tablas load
TRUNCATE TABLE IF EXISTS MIS_LOAD_DIF_CAR; 
LOAD DATA INPATH '${var:ruta_fuentes_comisiones}/DIF_CAR.CSV' INTO TABLE MIS_LOAD_DIF_CAR;
TRUNCATE TABLE IF EXISTS MIS_LOAD_COM_INT_TAR; 
LOAD DATA INPATH '${var:ruta_fuentes_comisiones}/COM_INT_TAR.CSV' INTO TABLE MIS_LOAD_COM_INT_TAR;
TRUNCATE TABLE IF EXISTS MIS_LOAD_PCM; 
LOAD DATA INPATH '${var:ruta_fuentes_comisiones}/PCM.CSV' INTO TABLE MIS_LOAD_PCM;
TRUNCATE TABLE IF EXISTS MIS_LOAD_TRADE; 
LOAD DATA INPATH '${var:ruta_fuentes_comisiones}/TRADE.CSV' INTO TABLE MIS_LOAD_TRADE;
TRUNCATE TABLE IF EXISTS MIS_LOAD_TCS; 
LOAD DATA INPATH '${var:ruta_fuentes_comisiones}/TCS.CSV' INTO TABLE MIS_LOAD_TCS;

--- Limpieza de partición ----
ALTER TABLE MIS_APR_FEES_M 
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

----Aprovisionamiento de comisiones por cartera
INSERT INTO MIS_APR_FEES_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'COM' AS COD_CONT, TRIM(a.OPERACION) AS IDF_CTO,
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    '0' AS COD_BLCE_STATUS, 'COM' AS COD_VALUE,
    CASE TRIM(a.MONEDA_OPE) 
        WHEN '20' THEN 'CRC' 
        WHEN '0' THEN 'USD' 
        WHEN '0-COLON' THEN 'CRC'
        WHEN '1-DOLAR' THEN 'USD' 
        END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), TRIM(SPLIT_PART(a.TIPO_OPERACION, '-', 1))) AS COD_PRODUCT, '' AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT,
    CAST(-1 * a.INGRESO_REALIZADO AS decimal(30, 10)) AS PL, 
    'DIF_CAR' AS COD_INFO_SOURCE
FROM MIS_LOAD_DIF_CAR a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.OPERACION);

----Aprovisionamiento de Comisiones por Intercambio de tarjetas
INSERT INTO MIS_APR_FEES_M
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'COM' AS COD_CONT, IFNULL(TRIM(c.TA_ID_OPERACION), TRIM(a.TARJETA)) AS IDF_CTO,
    UPPER(CONCAT("COM_",STRLEFT(TRIM(a.TIPO_TARJETA), 3), "_", 
        STRLEFT(SPLIT_PART(TRIM(a.TIPO_CUENTA), ' ',  1), 3), "_", 
        SPLIT_PART(TRIM(a.TIPO_CUENTA), ' ',  2))) AS COD_GL, 
    UPPER(CONCAT("COM_",STRLEFT(TRIM(a.TIPO_TARJETA), 3), "_", 
        STRLEFT(SPLIT_PART(TRIM(a.TIPO_CUENTA), ' ',  1), 3), "_", 
        SPLIT_PART(TRIM(a.TIPO_CUENTA), ' ',  2))) AS DES_GL, 
    'RI' AS COD_ACCO_CENT, NULL AS COD_OFFI,
    '0' AS COD_BLCE_STATUS, 
    CASE TRIM(a.TIPO_TARJETA) 
        WHEN 'Credito' THEN 'COM_CRE'
        WHEN 'Debito'  THEN 'COM_DEB' END AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '20' THEN 'CRC' 
        WHEN '0' THEN 'USD' 
        END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), UPPER(TRIM(b.NOMBRE_BIN))) AS COD_PRODUCT, UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT,
    CAST(IF(UPPER(a.TIPO_CUENTA) LIKE "%GASTO%", a.MONTO, -1 * a.MONTO) AS decimal(30, 10)) AS PL,
    'COM_INT_TAR' AS COD_INFO_SOURCE
FROM MIS_LOAD_COM_INT_TAR a
LEFT JOIN MIS_LOAD_INFO_TRABAJO b 
ON STRLEFT(TRIM(a.TARJETA), 6) = TRIM(b.BIN)
LEFT JOIN (
    SELECT TMP.TA_NUM_TARJETA_TITULAR, MIN(TMP.TA_ID_OPERACION) TA_ID_OPERACION 
    FROM MIS_LOAD_TCS TMP WHERE TRIM(TMP.TA_INDICA_INTRA_EXTRA) = '' GROUP BY TMP.TA_NUM_TARJETA_TITULAR) c
ON CONCAT(TRIM(a.TARJETA)) = TRIM(c.TA_NUM_TARJETA_TITULAR)  
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(c.TA_ID_OPERACION), TRIM(a.TARJETA)) 
WHERE a.MONTO != 0;

----Aprovisionamiento de Comisiones por Prestación de Servicios
--Los saldos vienen dolarizados, a excepción de la causa 9 y 13 donde los colones vienen expresados en colones 
INSERT INTO MIS_APR_FEES_M
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'COM' AS COD_CONT, 
    CASE WHEN b.IDF_CTO IS NOT NULL THEN b.IDF_CTO
        WHEN TRIM(a.PRODUCTO_VISTA_CUENTA) != '' THEN TRIM(a.PRODUCTO_VISTA_CUENTA)
        ELSE CONCAT('PCM', TRIM(a.MONEDA), '_', TRIM(a.ENTE)) END AS IDF_CTO,
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    '0' AS COD_BLCE_STATUS, 'COM' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '20' THEN 'CRC' 
        WHEN '0' THEN 'USD' 
        WHEN '6' THEN 'EUR'
        END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(TRIM(b.COD_PRODUCT), 'NO_IDENTIFICADO')) AS COD_PRODUCT, TRIM(a.CAUSA) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT,
    CASE WHEN TRIM(a.CAUSA) IN ('9', '13') AND TRIM(a.MONEDA) = '20' THEN CAST(a.COMISION_MO * -1 AS decimal(30, 10))
         WHEN TRIM(a.MONEDA) = '0' THEN CAST(a.COMISION_MO * -1 AS decimal(30, 10))
         WHEN TRIM(a.MONEDA) = '20' THEN CAST(a.COMISION_MO * c.EXCH_RATE * -1 AS decimal(30, 10)) --pasar a colones saldo en dolares
         WHEN TRIM(a.MONEDA) = '6' THEN CAST(-1 * a.COMISION_MO * c.EXCH_RATE / d.EXCH_RATE AS decimal(30, 10)) --pasar a euros saldo en dolares
    END AS PL, --pasar a euros saldo en dolares
    'PCM' AS COD_INFO_SOURCE
FROM MIS_LOAD_PCM a
LEFT JOIN (
    SELECT TMP.IDF_CTO, TMP.COD_PRODUCT 
    FROM MIS_APR_CONTRACT_DT TMP
    WHERE TMP.DATA_DATE = '${var:periodo}' AND TRIM(TMP.IDF_CTO)!=''
    GROUP BY TMP.IDF_CTO, TMP.COD_PRODUCT
) b 
ON REGEXP_REPLACE(TRIM(a.PRODUCTO_VISTA_CUENTA), '^0*', '') = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '')
LEFT JOIN MIS_PAR_EXCH_RATE c
ON c.COD_CONT='TC_FOTO' AND c.DATA_DATE = '${var:periodo}' AND c.COD_CURRENCY = 'USD'
LEFT JOIN MIS_PAR_EXCH_RATE d
ON d.COD_CONT='TC_FOTO' AND d.DATA_DATE = '${var:periodo}' AND d.COD_CURRENCY = 'EUR'
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = CASE WHEN b.IDF_CTO IS NOT NULL THEN b.IDF_CTO
                            WHEN TRIM(a.PRODUCTO_VISTA_CUENTA) != '' THEN TRIM(a.PRODUCTO_VISTA_CUENTA)
                            ELSE CONCAT('PCM', TRIM(a.MONEDA), '_', TRIM(a.ENTE)) END 
WHERE STRLEFT(a.NOMBRE_PRODUCTO, 4) != 'ARP '
;


--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='PCM');

----Aprovisionamiento de Contractos ficticios de comisiones por Prestación de Servicios
INSERT INTO MIS_APR_CONTRACT_DT 
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='PCM') 
SELECT 
    CASE WHEN b.IDF_CTO IS NOT NULL THEN b.IDF_CTO
        WHEN TRIM(a.PRODUCTO_VISTA_CUENTA) != '' THEN TRIM(a.PRODUCTO_VISTA_CUENTA)
        ELSE CONCAT('PCM', TRIM(a.MONEDA), '_', TRIM(a.ENTE)) END AS IDF_CTO,
     '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(TRIM(b.COD_PRODUCT), 'NO_IDENTIFICADO')) AS COD_PRODUCT, MAX(TRIM(a.CAUSA)) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 
    CASE TRIM(a.MONEDA) 
        WHEN '20' THEN 'CRC' 
        WHEN '0' THEN 'USD' 
        WHEN '6' THEN 'EUR'
        END AS COD_CURRENCY,  
    TRIM(a.ENTE) AS IDF_CLI, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    NULL AS COD_BCA_INT, NULL AS COD_AMRT_MET, NULL AS COD_RATE_TYPE,
    NULL AS RATE_INT, NULL AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV, NULL AS EXP_DATE,
    NULL AS FREQ_INT_PAY, NULL AS COD_UNI_FREQ_INT_PAY, 
    NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, NULL AS COD_UNI_AMRT_TRM,   
    NULL AS INI_AM, NULL AS CUO_AM, NULL AS CREDIT_LIM_AM, 
    NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV,
    NULL AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, NULL AS DATE_DISB, NULL AS CARD_NUMBER, 
    NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, NULL AS COD_PROG_CARD, NULL AS DES_PROG_CARD
FROM MIS_LOAD_PCM a
LEFT JOIN (
    SELECT TMP.IDF_CTO, TMP.COD_PRODUCT 
    FROM MIS_APR_CONTRACT_DT TMP
    WHERE TMP.DATA_DATE = '${var:periodo}' AND TRIM(TMP.IDF_CTO)!=''
    GROUP BY TMP.IDF_CTO, TMP.COD_PRODUCT
) b 
ON REGEXP_REPLACE(TRIM(a.PRODUCTO_VISTA_CUENTA), '^0*', '') = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '')
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = CASE WHEN b.IDF_CTO IS NOT NULL THEN b.IDF_CTO
                            WHEN TRIM(a.PRODUCTO_VISTA_CUENTA) != '' THEN TRIM(a.PRODUCTO_VISTA_CUENTA)
                            ELSE CONCAT('PCM', TRIM(a.MONEDA), '_', TRIM(a.ENTE)) END
WHERE b.IDF_CTO IS NULL AND STRLEFT(a.NOMBRE_PRODUCTO, 4) != 'ARP '
GROUP BY TRIM(a.PRODUCTO_VISTA_CUENTA), TRIM(a.ENTE), TRIM(a.MONEDA), --TRIM(a.CAUSA), 
    b.IDF_CTO, COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(TRIM(b.COD_PRODUCT), 'NO_IDENTIFICADO'))
;


----Aprovisionamiento de Comisiones por Cartas de crédito y Garantías
INSERT INTO MIS_APR_FEES_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'COM' AS COD_CONT, TRIM(a.OPERACION) AS IDF_CTO,
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    '0' AS COD_BLCE_STATUS, 'COM' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '20' THEN 'CRC' 
        WHEN '0' THEN 'USD' 
        END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), CASE
        WHEN REGEXP_LIKE(TRIM(a.PRODUCTO), '^Contragarant.as', 'i') THEN 'CONTRA_GARANTIAS' 
        WHEN REGEXP_LIKE(TRIM(a.PRODUCTO), '^Garant.as', 'i') THEN 'GARANTIAS'
        WHEN REGEXP_LIKE(TRIM(a.PRODUCTO), '^Cartas', 'i') THEN 'CARTAS_CREDITO'
    END) AS COD_PRODUCT, 
    NULL AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT,
    CAST(-1 * a.AMORTIZACION_MES AS decimal(30, 10)) AS PL,
    'TRADE' AS COD_INFO_SOURCE
FROM MIS_LOAD_TRADE a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.OPERACION);