--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

TRUNCATE TABLE MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM;

--- Llenado de Tabla de Ajustes Manuales Contables ---
LOAD DATA INPATH '${var:ruta_fuentes_ajustes}/Ajustes_Dimensiones_Dinamicas.csv' INTO TABLE MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM;

---Rechazo de registros ingresados sin alguna de las dimensiones principales
INSERT INTO MIS_VAL_CLOSE_DYNAMIC_DIM
SELECT 'Existen dimensiones vacías', 'AGRUPADOR CONTABLE', COD_CONT
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a
WHERE ISNULL(TRIM(a.COD_GL_GROUP),'') = '' AND COD_CONT LIKE '%CONT%'
UNION ALL
SELECT 'Existen dimensiones vacías', 'LINEA DE NEGOCIO', COD_CONT
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a
WHERE ISNULL(TRIM(a.COD_BUSINESS_LINE),'') = '' AND COD_CONT LIKE '%CONT%'
UNION ALL
SELECT 'Existen dimensiones vacías', 'ENTIDAD', COD_CONT
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a
WHERE ISNULL(TRIM(a.COD_ENTITY),'') = '' AND COD_CONT LIKE '%CONT%'
UNION ALL
SELECT 'Existen dimensiones vacías', 'DIVISA', COD_CONT
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a
WHERE ISNULL(TRIM(a.COD_CURRENCY),'') = '' AND COD_CONT LIKE '%CONT%'
UNION ALL
SELECT 'Existen dimensiones vacías', 'CONTRATO', COD_CONT
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a
WHERE ISNULL(TRIM(a.IDF_CTO),'') = '' AND COD_CONT LIKE '%OPER%'
UNION ALL
SELECT 'Existen dimensiones vacías', 'CLIENTE', COD_CONT
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a
WHERE ISNULL(TRIM(a.IDF_CLI),'') = '' AND COD_CONT LIKE '%OPER%';

-------------------- Verificación de Producto Balance a último Nivel de Jerarquía --------------------
INSERT INTO MIS_VAL_CLOSE_DYNAMIC_DIM (DES_VALIDATION, VALIDATION_FIELD, COD_CONT)
SELECT 'Producto de Balance sin Parametrizar en Jerarquía de Producto a Último Nivel' AS DES_VALIDATION, 
VALIDATION_BLCE_PROD.COD_BLCE_PROD AS VALIDATION_FIELD, COD_CONT
FROM
    (SELECT DISTINCT SALIDA_DM.COD_BLCE_PROD AS COD_BLCE_PROD, SALIDA_DM.COD_CONT AS COD_CONT
    FROM
        (SELECT DM.COD_BLCE_PROD, DM.COD_CONT 
        FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM DM
        ) SALIDA_DM
    LEFT JOIN
        MIS_HIERARCHY_BLCE_PROD PROD
        ON SALIDA_DM.COD_BLCE_PROD = PROD.COD_LEVEL_07
    WHERE PROD.COD_LEVEL_04 IS NULL) AS VALIDATION_BLCE_PROD; 

-------------------- Verificación de Cuenta P&G a último Nivel de Jerarquía --------------------
INSERT INTO MIS_VAL_CLOSE_DYNAMIC_DIM (DES_VALIDATION, VALIDATION_FIELD, COD_CONT)
SELECT 'Cuenta P&G sin Parametrizar en Jerarquía de Cuenta a Último Nivel' AS DES_VALIDATION, 
VALIDATION_PL_ACC.COD_PL_ACC, COD_CONT
FROM
    (SELECT DISTINCT SALIDA_DM.COD_PL_ACC AS COD_PL_ACC, SALIDA_DM.COD_CONT AS COD_CONT
    FROM
        (SELECT DM.* 
        FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM DM
        ) SALIDA_DM
    LEFT JOIN
        MIS_HIERARCHY_PL_ACC ACC
        ON SALIDA_DM.COD_PL_ACC = ACC.COD_LEVEL_08
    WHERE ACC.COD_LEVEL_10 IS NULL) AS VALIDATION_PL_ACC;

---- se crea una temporal para calcular los campos RPT ----
DROP TABLE IF EXISTS MIS_DM_BALANCE_RESULT_M_AUX_DYNAMIC;

CREATE TABLE MIS_DM_BALANCE_RESULT_M_AUX_DYNAMIC AS
SELECT a.COD_CONT, a.COD_CURRENCY, a.COD_ENTITY, IDF_CTO, 
EOPBAL_CAP, AVGBAL_CAP, PL,
IDF_CLI, COD_SEGMENT, DES_SEGMENT, COD_MANAGER, COD_SECTOR_LOCAL, DES_SECTOR_LOCAL, 
COD_SECTOR_REG, DES_SECTOR_REG, IND_CHANNEL,
CAST(CASE WHEN a.COD_CURRENCY = 'CRC' THEN ISNULL(EOPBAL_CAP, 0)
     WHEN ISNULL(CAST(EOPBAL_TOT_RPT AS STRING),'') = '' THEN EOPBAL_CAP * b.EXCH_RATE 
ELSE EOPBAL_TOT_RPT END AS DECIMAL(30,10)) AS EOPBAL_TOT_RPT,
CAST(CASE WHEN a.COD_CURRENCY = 'CRC' THEN ISNULL(AVGBAL_CAP, 0)
     WHEN ISNULL(CAST(AVGBAL_TOT_RPT AS STRING),'') = '' THEN AVGBAL_CAP * b.EXCH_RATE 
ELSE AVGBAL_TOT_RPT END AS DECIMAL(30,10)) AS AVGBAL_TOT_RPT,
CAST(CASE WHEN a.COD_CURRENCY = 'CRC' THEN ISNULL(PL, 0)
     WHEN ISNULL(CAST(PL_RPT AS STRING),'') = '' THEN PL * c.EXCH_RATE 
ELSE PL_RPT END AS DECIMAL(30,10)) AS PL_RPT,
CAST(CASE WHEN a.COD_CURRENCY = 'CRC' THEN ISNULL(PL, 0)
     WHEN ISNULL(CAST(PL_RPT AS STRING),'') = '' THEN PL * c.EXCH_RATE 
ELSE PL_RPT END AS DECIMAL(30,10)) AS PL_TOT_RPT,
EOPBAL_TOT_USD, EOPBAL_TOT_REG, AVGBAL_TOT_USD, AVGBAL_TOT_REG, PL_TOT_USD, PL_TOT_REG,
COD_GL_GROUP, COD_PL_ACC, COD_BLCE_PROD, COD_BUSINESS_LINE,
COD_SUBSEGMENT, DES_SUBSEGMENT, COU_CAR_OFF, COD_CONV, ID_ECO_GRO, DES_ECO_GRO, 
ID_ECO_GRO_REG, DES_ECO_GRO_REG, IND_MUL_LAT, DES_MUL_LAT,
a.DATA_DATE, 'ADJ_DYNAMIC' AS COD_INFO_SOURCE
FROM MIS_DWH_MANUAL_ADJ_DYNAMIC_DIM a 
LEFT JOIN MIS_PAR_EXCH_RATE b
ON a.DATA_DATE=b.DATA_DATE AND b.COD_CONT = 'TC_FOTO' AND a.COD_CURRENCY=b.COD_CURRENCY
AND IF(ISNULL(TRIM(b.COD_ENTITY),'') = '' ,'1',a.COD_ENTITY) = IF(ISNULL(TRIM(b.COD_ENTITY),'') = '','1',b.COD_ENTITY)
LEFT JOIN MIS_PAR_EXCH_RATE c
ON a.DATA_DATE=c.DATA_DATE AND c.COD_CONT = 'TC_PROMEDIO' AND a.COD_CURRENCY=c.COD_CURRENCY
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'1',a.COD_ENTITY) = IF(ISNULL(TRIM(c.COD_ENTITY),'') = '','1',c.COD_ENTITY);
;

DROP TABLE IF EXISTS MIS_TMP_BALANCE_DYNAMIC;

CREATE TABLE MIS_TMP_BALANCE_DYNAMIC AS
SELECT * 
FROM MIS_DM_BALANCE_RESULT_M
WHERE COD_INFO_SOURCE = 'ADJ_DYNAMIC' AND DATA_DATE NOT IN (SELECT DISTINCT DATA_DATE FROM MIS_DM_BALANCE_RESULT_M_AUX_DYNAMIC);

ALTER TABLE MIS_DM_BALANCE_RESULT_M
DROP IF EXISTS PARTITION (COD_INFO_SOURCE = 'ADJ_DYNAMIC');

INSERT INTO MIS_DM_BALANCE_RESULT_M
PARTITION (DATA_DATE, COD_INFO_SOURCE)
SELECT * 
FROM MIS_TMP_BALANCE_DYNAMIC;

--- Insercion de registros de dimensiones dinamicas a la tabla de atributos para todas las fechas ---
INSERT INTO MIS_DM_BALANCE_RESULT_M
(COD_CONT, COD_CURRENCY, COD_ENTITY, IDF_CTO,
EOPBAL_CAP, AVGBAL_CAP, PL,
IDF_CLI, COD_SEGMENT, DES_SEGMENT, COD_MANAGER, COD_SECTOR_LOCAL, DES_SECTOR_LOCAL, 
COD_SECTOR_REG, DES_SECTOR_REG, IND_CHANNEL,
EOPBAL_TOT_RPT, AVGBAL_TOT_RPT, PL_RPT, PL_TOT_RPT, EOPBAL_TOT_USD, EOPBAL_TOT_REG,
AVGBAL_TOT_USD, AVGBAL_TOT_REG, PL_TOT_USD, PL_TOT_REG,
COD_GL_GROUP, COD_PL_ACC, COD_BLCE_PROD, COD_BUSINESS_LINE,
COD_SUBSEGMENT, DES_SUBSEGMENT, COU_CAR_OFF, COD_CONV, ID_ECO_GRO, DES_ECO_GRO,
ID_ECO_GRO_REG, DES_ECO_GRO_REG, IND_MUL_LAT, DES_MUL_LAT)
PARTITION (DATA_DATE, COD_INFO_SOURCE)
SELECT a.COD_CONT, a.COD_CURRENCY, a.COD_ENTITY, IDF_CTO,
EOPBAL_CAP, AVGBAL_CAP, PL,
IDF_CLI, COD_SEGMENT, DES_SEGMENT, COD_MANAGER, COD_SECTOR_LOCAL, DES_SECTOR_LOCAL, 
COD_SECTOR_REG, DES_SECTOR_REG, IND_CHANNEL,
EOPBAL_TOT_RPT, AVGBAL_TOT_RPT, PL_RPT, PL_TOT_RPT, 
CAST(CASE WHEN ISNULL(EOPBAL_TOT_USD,0) = 0 THEN ISNULL(EOPBAL_TOT_RPT / b.EXCH_RATE, 0) 
ELSE EOPBAL_TOT_USD END AS DECIMAL(30,10)) AS EOPBAL_TOT_USD,
CAST(CASE WHEN ISNULL(EOPBAL_TOT_REG,0) = 0 THEN ISNULL(EOPBAL_TOT_RPT / c.EXCH_RATE, 0) 
ELSE EOPBAL_TOT_REG END AS DECIMAL(30,10)) AS EOPBAL_TOT_REG,
CAST(CASE WHEN ISNULL(AVGBAL_TOT_USD,0) = 0 THEN ISNULL(AVGBAL_TOT_RPT / b.EXCH_RATE, 0) 
ELSE AVGBAL_TOT_USD END AS DECIMAL(30,10)) AS AVGBAL_TOT_USD,
CAST(CASE WHEN ISNULL(AVGBAL_TOT_REG,0) = 0 THEN ISNULL(AVGBAL_TOT_RPT / c.EXCH_RATE, 0) 
ELSE AVGBAL_TOT_REG END AS DECIMAL(30,10)) AS AVGBAL_TOT_REG,
CAST(CASE WHEN ISNULL(PL_TOT_USD,0) = 0 THEN ISNULL(PL_TOT_RPT / d.EXCH_RATE, 0) 
ELSE PL_TOT_USD END AS DECIMAL(30,10)) AS PL_TOT_USD,
CAST(CASE WHEN ISNULL(PL_TOT_REG,0) = 0 THEN ISNULL(PL_TOT_RPT / e.EXCH_RATE, 0) 
ELSE PL_TOT_REG END AS DECIMAL(30,10)) AS PL_TOT_REG,
COD_GL_GROUP, COD_PL_ACC, COD_BLCE_PROD, COD_BUSINESS_LINE,
COD_SUBSEGMENT, DES_SUBSEGMENT, COU_CAR_OFF, COD_CONV, ID_ECO_GRO, DES_ECO_GRO,
ID_ECO_GRO_REG, DES_ECO_GRO_REG, IND_MUL_LAT, DES_MUL_LAT,
a.DATA_DATE, 'ADJ_DYNAMIC' AS COD_INFO_SOURCE
FROM MIS_DM_BALANCE_RESULT_M_AUX_DYNAMIC a 
LEFT JOIN MIS_PAR_EXCH_RATE b
ON a.DATA_DATE=b.DATA_DATE AND b.COD_CONT = 'TC_FOTO' AND b.COD_CURRENCY = 'USD' 
AND IF(ISNULL(TRIM(b.COD_ENTITY),'') = '' ,'1',A.COD_ENTITY) = IF(ISNULL(TRIM(b.COD_ENTITY),'') = '','1',b.COD_ENTITY)
LEFT JOIN MIS_PAR_EXCH_RATE c
ON a.DATA_DATE=c.DATA_DATE AND c.COD_CONT = 'REG_FOTO' AND c.COD_CURRENCY = 'USD'
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'1',A.COD_ENTITY) = IF(ISNULL(TRIM(c.COD_ENTITY),'') = '','1',c.COD_ENTITY)
LEFT JOIN MIS_PAR_EXCH_RATE d
ON a.DATA_DATE=d.DATA_DATE AND d.COD_CONT = 'TC_PROMEDIO' AND 'USD' = d.COD_CURRENCY
AND IF(ISNULL(TRIM(d.COD_ENTITY),'') = '' ,'1',A.COD_ENTITY) = IF(ISNULL(TRIM(d.COD_ENTITY),'') = '','1',d.COD_ENTITY)
LEFT JOIN MIS_PAR_EXCH_RATE e
ON a.DATA_DATE=e.DATA_DATE AND e.COD_CONT = 'REG_PROMEDIO' AND 'USD'= e.COD_CURRENCY
AND IF(ISNULL(TRIM(e.COD_ENTITY),'') = '' ,'1',A.COD_ENTITY) = IF(ISNULL(TRIM(e.COD_ENTITY),'') = '','1',e.COD_ENTITY)
;