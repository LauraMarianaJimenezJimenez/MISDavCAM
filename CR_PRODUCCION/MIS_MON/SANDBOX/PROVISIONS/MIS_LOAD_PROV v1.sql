------------------------------------------------------------- MIS_APR_PROVISIONS_M -------------------------------------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};

----Carga de tablas load
TRUNCATE TABLE IF EXISTS MIS_LOAD_BASE_RESERVAS; 
LOAD DATA INPATH '${var:ruta_fuentes_provisiones}/BASE_RESERVAS.CSV' INTO TABLE MIS_LOAD_BASE_RESERVAS;

--- Limpieza de partici√≥n ----
ALTER TABLE MIS_APR_PROVISIONS_M
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

----Aprovisionamiento de Reservas Genericas
INSERT INTO MIS_APR_PROVISIONS_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PROV' AS COD_CONT, IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, '0' AS COD_BLCE_STATUS, 'PROV_GEN_BAL' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(b.COD_PRODUCT, TRIM(a.OP_PRODUCTO))) AS COD_PRODUCT, 
    IFNULL(b.COD_SUBPRODUCT, UPPER(TRIM(a.IND_CONTABLE))) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CAST(-1 * (a.RSV_GENERICA + a.RSV_DETERIORO) / IFNULL(c.EXCH_RATE, 1) AS decimal(30, 10)) AS EOPBAL_CAP, NULL AS EOPBAL_INT, 
    NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'BASE_RESERVAS' AS COD_INFO_SOURCE
FROM MIS_LOAD_BASE_RESERVAS a
LEFT JOIN MIS_APR_CONTRACT_DT b
ON b.DATA_DATE = '${var:periodo}' AND 
    IF(TRIM(a.OP_PRODUCTO)='PBE', SPLIT_PART(a.NO_OPERACION, '-',  1), REGEXP_REPLACE(TRIM(a.NO_OPERACION), '^0*', '')) = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '') 
LEFT JOIN MIS_PAR_EXCH_RATE c
ON c.COD_CONT='TC_FOTO' AND c.DATA_DATE = '${var:periodo}' AND c.COD_CURRENCY = CASE TRIM(a.MONEDA) WHEN '1' THEN 'CRC' WHEN '2' THEN 'USD' END 
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'4',a.COD_ENTITY) = '4'
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION))
WHERE a.RSV_GENERICA != 0 
OR a.RSV_DETERIORO != 0;

----Aprovisionamiento de Reservas Deterioro 
/*INSERT INTO MIS_APR_PROVISIONS_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PROV' AS COD_CONT, IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, '0' AS COD_BLCE_STATUS, 'PROV_DET_BAL' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(b.COD_PRODUCT, TRIM(a.OP_PRODUCTO))) AS COD_PRODUCT, 
    IFNULL(b.COD_SUBPRODUCT, UPPER(TRIM(a.IND_CONTABLE))) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CAST(-1 * a.RSV_DETERIORO / IFNULL(c.EXCH_RATE, 1) AS decimal(30, 10)) AS EOPBAL_CAP, NULL AS EOPBAL_INT, 
    NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'BASE_RESERVAS' AS COD_INFO_SOURCE
FROM MIS_LOAD_BASE_RESERVAS a
LEFT JOIN MIS_APR_CONTRACT_DT b
ON b.DATA_DATE = '${var:periodo}' AND 
    IF(TRIM(a.OP_PRODUCTO)='PBE', SPLIT_PART(a.NO_OPERACION, '-',  1), REGEXP_REPLACE(TRIM(a.NO_OPERACION), '^0*', '')) = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '') 
LEFT JOIN MIS_PAR_EXCH_RATE c
ON c.COD_CONT='TC_FOTO' AND c.DATA_DATE = '${var:periodo}' AND c.COD_CURRENCY = CASE TRIM(a.MONEDA) WHEN '1' THEN 'CRC' WHEN '2' THEN 'USD' END
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'4',a.COD_ENTITY) = '4'
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) 
WHERE a.RSV_DETERIORO != 0;*/

----Aprovisionamiento de Reservas No Generador 
INSERT INTO MIS_APR_PROVISIONS_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PROV' AS COD_CONT, IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, '0' AS COD_BLCE_STATUS, 'PROV_NOG_BAL' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(b.COD_PRODUCT, TRIM(a.OP_PRODUCTO))) AS COD_PRODUCT, 
    IFNULL(b.COD_SUBPRODUCT, UPPER(TRIM(a.IND_CONTABLE))) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CAST(-1 * a.RSV_NO_GENERADOR / IFNULL(c.EXCH_RATE, 1) AS decimal(30, 10)) AS EOPBAL_CAP, NULL AS EOPBAL_INT, 
    NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'BASE_RESERVAS' AS COD_INFO_SOURCE
FROM MIS_LOAD_BASE_RESERVAS a
LEFT JOIN MIS_APR_CONTRACT_DT b
ON b.DATA_DATE = '${var:periodo}' AND 
    IF(TRIM(a.OP_PRODUCTO)='PBE', SPLIT_PART(a.NO_OPERACION, '-',  1), REGEXP_REPLACE(TRIM(a.NO_OPERACION), '^0*', '')) = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '') 
LEFT JOIN MIS_PAR_EXCH_RATE c
ON c.COD_CONT='TC_FOTO' AND c.DATA_DATE = '${var:periodo}' AND c.COD_CURRENCY = CASE TRIM(a.MONEDA) WHEN '1' THEN 'CRC' WHEN '2' THEN 'USD' END 
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'4',a.COD_ENTITY) = '4'
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION))
WHERE a.RSV_NO_GENERADOR != 0;

----Aprovisionamiento de Reservas CSD
INSERT INTO MIS_APR_PROVISIONS_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PROV' AS COD_CONT, IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, '0' AS COD_BLCE_STATUS, 'PROV_CSD_BAL' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(b.COD_PRODUCT, TRIM(a.OP_PRODUCTO))) AS COD_PRODUCT, 
    IFNULL(b.COD_SUBPRODUCT, UPPER(TRIM(a.IND_CONTABLE))) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CAST(-1 * a.RSV_CSD / IFNULL(c.EXCH_RATE, 1) AS decimal(30, 10)) AS EOPBAL_CAP, NULL AS EOPBAL_INT, 
    NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'BASE_RESERVAS' AS COD_INFO_SOURCE
FROM MIS_LOAD_BASE_RESERVAS a
LEFT JOIN MIS_APR_CONTRACT_DT b
ON b.DATA_DATE = '${var:periodo}' AND 
    IF(TRIM(a.OP_PRODUCTO)='PBE', SPLIT_PART(a.NO_OPERACION, '-',  1), REGEXP_REPLACE(TRIM(a.NO_OPERACION), '^0*', '')) = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '') 
LEFT JOIN MIS_PAR_EXCH_RATE c
ON c.COD_CONT='TC_FOTO' AND c.DATA_DATE = '${var:periodo}' AND c.COD_CURRENCY = CASE TRIM(a.MONEDA) WHEN '1' THEN 'CRC' WHEN '2' THEN 'USD' END 
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'4',a.COD_ENTITY) = '4'
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION))
WHERE a.RSV_CSD != 0;

----Aprovisionamiento de Reservas Contraciclicas
INSERT INTO MIS_APR_PROVISIONS_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PROV' AS COD_CONT, IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, '0' AS COD_BLCE_STATUS, 'PROV_CON_BAL' AS COD_VALUE,
    CASE TRIM(a.MONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' END AS COD_CURRENCY, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), IFNULL(b.COD_PRODUCT, TRIM(a.OP_PRODUCTO))) AS COD_PRODUCT, 
    IFNULL(b.COD_SUBPRODUCT, UPPER(TRIM(a.IND_CONTABLE))) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CAST(-1 * a.RSV_CONTRACICLICA / IFNULL(c.EXCH_RATE, 1) AS decimal(30, 10)) AS EOPBAL_CAP, NULL AS EOPBAL_INT, 
    NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'BASE_RESERVAS' AS COD_INFO_SOURCE
FROM MIS_LOAD_BASE_RESERVAS a
LEFT JOIN MIS_APR_CONTRACT_DT b
ON b.DATA_DATE = '${var:periodo}' AND 
    IF(TRIM(a.OP_PRODUCTO)='PBE', SPLIT_PART(a.NO_OPERACION, '-',  1), REGEXP_REPLACE(TRIM(a.NO_OPERACION), '^0*', '')) = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '') 
LEFT JOIN MIS_PAR_EXCH_RATE c
ON c.COD_CONT='TC_FOTO' AND c.DATA_DATE = '${var:periodo}' AND c.COD_CURRENCY = CASE TRIM(a.MONEDA) WHEN '1' THEN 'CRC' WHEN '2' THEN 'USD' END 
AND IF(ISNULL(TRIM(c.COD_ENTITY),'') = '' ,'4',a.COD_ENTITY) = '4'
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(b.IDF_CTO), TRIM(a.NO_OPERACION)) 
WHERE a.RSV_CONTRACICLICA != 0;

----Aprovisionamiento de Provisiones Resultados
INSERT INTO MIS_APR_PROVISIONS_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PROV' AS COD_CONT, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.IDF_CTO
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.IDF_CTO 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.IDF_CTO END AS IDF_CTO,  
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_GL
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_GL 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_GL END AS COD_GL, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.DES_GL
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.DES_GL 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.DES_GL END AS DES_GL, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_ACCO_CENT
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_ACCO_CENT 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_ACCO_CENT END AS COD_ACCO_CENT, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_OFFI
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_OFFI 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_OFFI END AS COD_OFFI,
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_BLCE_STATUS
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_BLCE_STATUS 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_BLCE_STATUS END AS COD_BLCE_STATUS,
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN REGEXP_REPLACE(ACT.COD_VALUE, 'BAL$', 'PYG')
         WHEN ACT.IDF_CTO IS NOT NULL THEN REGEXP_REPLACE(ACT.COD_VALUE, 'BAL$', 'PYG')
         WHEN PREV.IDF_CTO IS NOT NULL THEN REGEXP_REPLACE(PREV.COD_VALUE, 'BAL$', 'PYG') END AS COD_VALUE,
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_CURRENCY
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_CURRENCY 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_CURRENCY END AS COD_CURRENCY, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_ENTITY
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_ENTITY 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_ENTITY END AS COD_ENTITY, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_PRODUCT
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_PRODUCT 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_PRODUCT END AS COD_PRODUCT, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_SUBPRODUCT
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_SUBPRODUCT 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_SUBPRODUCT END AS COD_SUBPRODUCT,
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_ACT_TYPE
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_ACT_TYPE 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_ACT_TYPE END AS COD_ACT_TYPE, 
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL 
         THEN CAST(ACT.EOPBAL_CAP - PREV.EOPBAL_CAP AS decimal(30, 10))
         WHEN ACT.IDF_CTO IS NOT NULL THEN CAST(ACT.EOPBAL_CAP AS decimal(30, 10))
         WHEN PREV.IDF_CTO IS NOT NULL THEN CAST(-1 * PREV.EOPBAL_CAP AS decimal(30, 10)) END AS PL, 
    CASE WHEN PREV.IDF_CTO IS NOT NULL AND ACT.IDF_CTO IS NOT NULL THEN ACT.COD_INFO_SOURCE
         WHEN ACT.IDF_CTO IS NOT NULL THEN ACT.COD_INFO_SOURCE 
         WHEN PREV.IDF_CTO IS NOT NULL THEN PREV.COD_INFO_SOURCE END AS COD_INFO_SOURCE  --PL=CAP_ACTUAL-CAP_ANTERIOR
FROM (
    SELECT TMP.*
    FROM MIS_APR_PROVISIONS_M TMP
    WHERE TMP.DATA_DATE = '${var:periodo}' AND STRRIGHT(TMP.COD_VALUE, 3) != 'PYG') ACT 
FULL JOIN (
    SELECT TMP.*
    FROM MIS_APR_PROVISIONS_M TMP
    WHERE STRRIGHT(TMP.COD_VALUE, 3) != 'PYG' AND 
        TO_TIMESTAMP(TMP.DATA_DATE, 'yyyyMMdd') = DATE_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'),'MM'), 1)) PREV
ON ACT.COD_VALUE = PREV.COD_VALUE AND ACT.IDF_CTO = PREV.IDF_CTO AND ACT.COD_ENTITY = PREV.COD_ENTITY AND ACT.COD_CURRENCY = PREV.COD_CURRENCY
;


--- Limpieza de partici√≥n ----
ALTER TABLE MIS_APR_CONTRACT_DT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='MES_ANTERIOR');

----Aprovisionamiento de Contratos del mes anterior no insertados en el mes actual
INSERT INTO MIS_APR_CONTRACT_DT
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='MES_ANTERIOR') 
SELECT MES_ANT.IDF_CTO, MES_ANT.COD_ENTITY, MES_ANT.COD_PRODUCT, MES_ANT.COD_SUBPRODUCT, 
    MES_ANT.COD_ACT_TYPE, MES_ANT.COD_CURRENCY, MES_ANT.IDF_CLI, MES_ANT.COD_ACCO_CENT, MES_ANT.COD_OFFI, 
    MES_ANT.COD_BCA_INT, MES_ANT.COD_AMRT_MET, MES_ANT.COD_RATE_TYPE, MES_ANT.RATE_INT, 
    MES_ANT.DATE_ORIGIN, MES_ANT.DATE_LAST_REV, MES_ANT.DATE_PRX_REV, MES_ANT.EXP_DATE, 
    MES_ANT.FREQ_INT_PAY, MES_ANT.COD_UNI_FREQ_INT_PAY, MES_ANT.FRE_REV_INT, MES_ANT.COD_UNI_FRE_REV_INT, 
    MES_ANT.AMRT_TRM, MES_ANT.COD_UNI_AMRT_TRM, MES_ANT.INI_AM, MES_ANT.CUO_AM, MES_ANT.CREDIT_LIM_AM, 
    MES_ANT.PREDEF_RATE_IND, MES_ANT.PREDEF_RATE, MES_ANT.IND_CHANNEL, MES_ANT.COD_TYP_LIC, 
    MES_ANT.COU_CAR_OFF, MES_ANT.COD_CONV, MES_ANT.COD_EXEC_CTO, MES_ANT.COD_COVID_PORT, MES_ANT.DATE_DISB,
    MES_ANT.CARD_NUMBER, MES_ANT.FIELD1_CTO, MES_ANT.FIELD2_CTO, MES_ANT.FIELD3_CTO, MES_ANT.FIELD4_CTO, 
    MES_ANT.FIELD5_CTO, MES_ANT.FIELD6_CTO, MES_ANT.FIELD7_CTO, MES_ANT.FIELD8_CTO, 
    MES_ANT.FIELD9_CTO, MES_ANT.FIELD10_CTO 
FROM (
    SELECT TMP.*
    FROM MIS_APR_CONTRACT_DT TMP
    WHERE TO_TIMESTAMP(TMP.DATA_DATE, 'yyyyMMdd') = DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'),'MM'), 1)
) MES_ANT
LEFT JOIN (
    SELECT TMP.COD_ENTITY, TMP.IDF_CTO
    FROM MIS_APR_CONTRACT_DT TMP
    WHERE TMP.DATA_DATE = '${var:periodo}'
) MES_ACT
ON MES_ANT.IDF_CTO = MES_ACT.IDF_CTO AND MES_ANT.COD_ENTITY = MES_ACT.COD_ENTITY
WHERE MES_ACT.IDF_CTO IS NULL;