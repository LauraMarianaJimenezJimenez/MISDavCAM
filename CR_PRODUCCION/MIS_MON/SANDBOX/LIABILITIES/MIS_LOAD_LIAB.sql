------------------------------------------------------------- MIS_APR_LIABILITIES -------------------------------------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

----Carga de tablas load
TRUNCATE TABLE IF EXISTS MIS_LOAD_INT_CTE; 
LOAD DATA INPATH '${var:ruta_fuentes_pasivos}/INT_CTE.CSV' INTO TABLE MIS_LOAD_INT_CTE;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INT_AHO; 
LOAD DATA INPATH '${var:ruta_fuentes_pasivos}/INT_AHO.CSV' INTO TABLE MIS_LOAD_INT_AHO;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INT_MAN; 
LOAD DATA INPATH '${var:ruta_fuentes_pasivos}/INT_MAN.CSV' INTO TABLE MIS_LOAD_INT_MAN;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INT_PREF; 
LOAD DATA INPATH '${var:ruta_fuentes_pasivos}/INT_PREF.CSV' INTO TABLE MIS_LOAD_INT_PREF;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INT_PLAZO; 
LOAD DATA INPATH '${var:ruta_fuentes_pasivos}/INT_PLAZO.CSV' INTO TABLE MIS_LOAD_INT_PLAZO;


--- Limpieza de partici√≥n ----
ALTER TABLE MIS_APR_LIABILITIES_M 
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

----Aprovisionamiento de Devengo de Intereses para Cuentas Ahorro (Pasivos)
INSERT INTO MIS_APR_LIABILITIES_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'CTA' AS COD_CONT, IFNULL(b.IDF_CTO, TRIM(a.CUENTA)) AS IDF_CTO, NULL AS COD_GL, NULL AS DES_GL, 
    NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE, 
    CASE TRIM(a.MONEDA)
        WHEN '20' THEN 'CRC'
        WHEN '0' THEN 'USD' 
        WHEN '6' THEN 'EUR' 
        END AS COD_CURRENCY, '4' AS COD_ENTITY,
    COALESCE(TRIM(SPE.COD_PRODUCT), b.COD_PRODUCT) AS COD_PRODUCT, b.COD_SUBPRODUCT AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT,
    CAST(SUM(a.VALOR) AS decimal(30, 10)) AS PL, 'INT_AUTOMATICO' AS COD_INFO_SOURCE
FROM (
    SELECT TMP.CC_CTA_BANCO AS CUENTA, TMP.HM_MONEDA AS MONEDA, SUM(TMP.HM_VALOR) AS VALOR 
    FROM MIS_LOAD_INT_CTE TMP 
    GROUP BY TMP.CC_CTA_BANCO, TMP.HM_MONEDA
    UNION ALL 
    SELECT TMP.AH_CTA_BANCO AS CUENTA, TMP.HM_MONEDA AS MONEDA, SUM(TMP.HM_VALOR) AS VALOR 
    FROM MIS_LOAD_INT_AHO TMP 
    GROUP BY TMP.AH_CTA_BANCO, TMP.HM_MONEDA
    UNION ALL 
    SELECT TMP.CUENTA AS CUENTA, TMP.MONEDA AS MONEDA, SUM(TMP.INTERESES_BRUTO_MO) AS VALOR 
    FROM MIS_LOAD_INT_MAN TMP 
    GROUP BY TMP.CUENTA, TMP.MONEDA
    UNION ALL 
    SELECT TMP.CUENTA_COLONES AS CUENTA, '20' AS MONEDA, SUM(TMP.INTERESES_BRUTO_COLONES) AS VALOR 
    FROM MIS_LOAD_INT_PREF TMP 
    GROUP BY TMP.CUENTA_COLONES
    UNION ALL
    SELECT TMP.CUENTA_DOLARES AS CUENTA, '0' AS MONEDA, SUM(TMP.INTERESES_BRUTO_DOLARES) AS VALOR 
    FROM MIS_LOAD_INT_PREF TMP 
    GROUP BY TMP.CUENTA_DOLARES
) a 
LEFT JOIN (
    SELECT TMP.IDF_CTO, TMP.COD_PRODUCT, TMP.COD_SUBPRODUCT 
    FROM MIS_APR_CONTRACT_DT TMP
    WHERE TMP.DATA_DATE = '${var:periodo}'
    GROUP BY TMP.IDF_CTO, TMP.COD_PRODUCT, TMP.COD_SUBPRODUCT 
) b 
ON REGEXP_REPLACE(TRIM(a.CUENTA), '^0*', '') = REGEXP_REPLACE(TRIM(b.IDF_CTO), '^0*', '')
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = IFNULL(b.IDF_CTO, TRIM(a.CUENTA)) 
GROUP BY TRIM(a.CUENTA), TRIM(a.MONEDA), COALESCE(TRIM(SPE.COD_PRODUCT), b.COD_PRODUCT), b.COD_SUBPRODUCT, b.IDF_CTO;


----Aprovisionamiento de pasivos plazo - PyG
INSERT INTO MIS_APR_LIABILITIES_M 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PLZ' AS COD_CONT, TRIM(a.NRO_DEPOSITO) AS IDF_CTO,
    NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    '0' COD_BLCE_STATUS, 'RSL' AS COD_VALUE,
    CASE 
        WHEN TRIM(a.MONEDA) = 'COLONES' THEN 'CRC'
        ELSE 'USD' 
    END AS COD_CURRENCY,
    '4' AS COD_ENTITY,
    COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(TRIM(a.TIPO_CDI), IF(TRIM(a.PIG) = 'S', '_G', ''))) AS COD_PRODUCT, 
    '' AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, 
    NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, CAST(a.INTDIARIOMO AS decimal(30, 10)) AS PL, 
    'INT_PLAZO' AS COD_INFO_SOURCE
FROM MIS_LOAD_INT_PLAZO a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.NRO_DEPOSITO);