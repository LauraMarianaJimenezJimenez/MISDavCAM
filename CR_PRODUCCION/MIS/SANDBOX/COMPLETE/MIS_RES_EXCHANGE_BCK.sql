---------------------------------------------------------- CONTRAVALORACIÓN Y CARGA FINAL -------------------------------------------------------

--- Comando que dirige las consultas a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

---- Consolidación y preparación de registros que serán agregados a la tabla final 
TRUNCATE TABLE IF EXISTS MIS_DM_BALANCE_RESULT_AUX;

INSERT INTO MIS_DM_BALANCE_RESULT_AUX 
    (COD_CONT, COD_ACCO_CENT, COD_BLCE_STATUS, COD_CURRENCY, COD_ENTITY, EXP_TYPE, EXP_FAMILY,  
    EOPBAL_CAP, EOPBAL_INT, AVGBAL_CAP, AVGBAL_INT, PL, COD_INFO_SOURCE, COD_GL_GROUP, DES_GL_GROUP, ACCOUNT_CONCEPT, 
    COD_PL_ACC, DES_PL_ACC, COD_BLCE_PROD, DES_BLCE_PROD, COD_BUSINESS_LINE, DES_BUSINESS_LINE, FTP, FTP_RESULT, IND_POOL, EOPBAL_TOT, AVGBAL_TOT, PL_TOT, 
    COD_SEGMENT, DES_SEGMENT)
PARTITION (DATA_DATE)
SELECT 
    a.COD_CONT, a.COD_ACCO_CENT,  a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.EXP_TYPE, a.EXP_FAMILY, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, a.FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10)) AS PL_TOT, a.COD_SEGMENT, a.DES_SEGMENT, 
    a.DATA_DATE
FROM MIS_DWH_RECONCILIATION a
WHERE a.DATA_DATE='${var:periodo}';

INSERT INTO MIS_DM_BALANCE_RESULT_AUX 
    (COD_CONT, COD_ACCO_CENT, COD_EXPENSE, COD_BLCE_STATUS, COD_CURRENCY, COD_ENTITY, 
    EOPBAL_CAP, EOPBAL_INT, AVGBAL_CAP, AVGBAL_INT, PL, COD_INFO_SOURCE, COD_GL_GROUP, DES_GL_GROUP, ACCOUNT_CONCEPT, 
    COD_PL_ACC, DES_PL_ACC, COD_BLCE_PROD, DES_BLCE_PROD, COD_BUSINESS_LINE, DES_BUSINESS_LINE, FTP, FTP_RESULT, IND_POOL, EOPBAL_TOT, AVGBAL_TOT, PL_TOT,
    COD_SEGMENT, DES_SEGMENT, EXP_TYPE, EXP_FAMILY)
PARTITION (DATA_DATE)
SELECT 
    a.COD_CONT, a.COD_ACCO_CENT, a.COD_EXPENSE, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, a.FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10)) AS PL_TOT, a.COD_SEGMENT, a.DES_SEGMENT, a.EXP_TYPE, a.EXP_FAMILY, 
    a.DATA_DATE
FROM MIS_DWH_EXPENSES a
WHERE a.DATA_DATE='${var:periodo}';

INSERT INTO MIS_DM_BALANCE_RESULT_AUX 
    (COD_CONT, IDF_CTO, COD_VALUE, COD_ACCO_CENT, COD_BLCE_STATUS, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT,
    EOPBAL_CAP, EOPBAL_INT, AVGBAL_CAP, AVGBAL_INT, PL, COD_INFO_SOURCE, COD_GL_GROUP, DES_GL_GROUP, ACCOUNT_CONCEPT, 
    COD_PL_ACC, DES_PL_ACC, COD_BLCE_PROD, DES_BLCE_PROD, COD_BUSINESS_LINE, DES_BUSINESS_LINE, 
    FTP, FTP_RESULT, IND_POOL, EOPBAL_TOT, AVGBAL_TOT, PL_TOT)
PARTITION (DATA_DATE)
SELECT 
    a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, 
    CAST(IFNULL(a.FTP1, 0) + IFNULL(a.FTP2, 0) AS decimal(30, 10)) AS FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10))  AS PL_TOT, 
    a.DATA_DATE
FROM MIS_DWH_ASSETS a
WHERE a.DATA_DATE='${var:periodo}'
UNION ALL
SELECT 
    a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, 
    CAST(IFNULL(a.FTP1, 0) + IFNULL(a.FTP2, 0) AS decimal(30, 10)) AS FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10))  AS PL_TOT, 
    a.DATA_DATE
FROM MIS_DWH_LIABILITIES a
WHERE a.DATA_DATE='${var:periodo}'
UNION ALL
SELECT 
    a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, 
    CAST(IFNULL(a.FTP1, 0) + IFNULL(a.FTP2, 0) AS decimal(30, 10)) AS FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10))  AS PL_TOT, 
    a.DATA_DATE
FROM MIS_DWH_PROVISIONS a
WHERE a.DATA_DATE='${var:periodo}'
UNION ALL
SELECT 
    a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, 
    CAST(IFNULL(a.FTP1, 0) + IFNULL(a.FTP2, 0) AS decimal(30, 10)) AS FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10))  AS PL_TOT, 
    a.DATA_DATE
FROM MIS_DWH_FEES a
WHERE a.DATA_DATE='${var:periodo}'
UNION ALL
SELECT 
    a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, 
    CAST(IFNULL(a.FTP1, 0) + IFNULL(a.FTP2, 0) AS decimal(30, 10)) AS FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10))  AS PL_TOT, 
    a.DATA_DATE
FROM MIS_DWH_GFT a
WHERE a.DATA_DATE='${var:periodo}'
UNION ALL
SELECT 
    a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_BLCE_STATUS, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, 
    a.EOPBAL_CAP, a.EOPBAL_INT, a.AVGBAL_CAP, a.AVGBAL_INT, a.PL, a.COD_INFO_SOURCE, a.COD_GL_GROUP, a.DES_GL_GROUP, a.ACCOUNT_CONCEPT, 
    a.COD_PL_ACC, a.DES_PL_ACC, a.COD_BLCE_PROD, a.DES_BLCE_PROD, a.COD_BUSINESS_LINE, a.DES_BUSINESS_LINE, 
    CAST(IFNULL(a.FTP1, 0) + IFNULL(a.FTP2, 0) AS decimal(30, 10)) AS FTP, a.FTP_RESULT, a.IND_POOL,
    CAST(IFNULL(a.EOPBAL_CAP, 0) + IFNULL(a.EOPBAL_INT, 0) AS decimal(30, 10)) AS EOPBAL_TOT, 
    CAST(IFNULL(a.AVGBAL_CAP, 0) + IFNULL(a.AVGBAL_INT, 0) AS decimal(30, 10)) AS AVGBAL_TOT, 
    CAST(IFNULL(a.PL, 0) + IFNULL(a.FTP_RESULT, 0) AS decimal(30, 10))  AS PL_TOT, 
    a.DATA_DATE
FROM MIS_DWH_OFF_BALANCE a
WHERE a.DATA_DATE='${var:periodo}'
; 

--COMPUTE INCREMENTAL STATS MIS_DM_BALANCE_RESULT_AUX;

----Asignación de información de detalle contrato y cliente
TRUNCATE TABLE IF EXISTS MIS_TMP_DM_BALANCE_DT;
DROP TABLE IF EXISTS MIS_TMP_DM_BALANCE_DT;
CREATE TABLE MIS_TMP_DM_BALANCE_DT AS 
SELECT a.COD_CONT,a.IDF_CTO,a.COD_VALUE,a.COD_ACCO_CENT,a.COD_EXPENSE,a.COD_BLCE_STATUS,a.COD_CURRENCY,a.COD_ENTITY,a.EXP_TYPE,a.EXP_FAMILY,a.COD_PRODUCT,
    a.COD_SUBPRODUCT,a.EOPBAL_TOT,a.EOPBAL_CAP,a.EOPBAL_INT,a.AVGBAL_TOT,a.AVGBAL_CAP,a.AVGBAL_INT,a.PL,a.COD_INFO_SOURCE,a.COD_TYP_FEE,
    c.IDF_CLI,c.TYP_DOC_ID,c.NUM_DOC_ID,c.NOM_NAME,c.NOM_LASTN,c.COD_RES_COUNT,c.COD_TYP_CLNT,c.COD_COND_CLNT, 
    c.COD_ENG,c.VAL_SEX, 
    ISNULL(c.COD_SEGMENT, a.COD_SEGMENT) AS COD_SEGMENT, 
    ISNULL(c.DES_SEGMENT, a.DES_SEGMENT) AS DES_SEGMENT, 
    c.COD_SUBSEGMENT,c.IND_EMPL_GRUP,c.DATE_CLNT_REG,c.DATE_CLNT_WITHDRAW,
    c.COD_MANAGER,c.COD_SECTOR, c.DES_SECTOR, c.RATING_CLI, c.COD_GROUP_EC,
    b.COD_BCA_INT,b.COD_AMRT_MET,b.COD_RATE_TYPE,b.RATE_INT,b.DATE_ORIGIN,b.DATE_LAST_REV,
    b.DATE_PRX_REV,b.EXP_DATE,b.FREQ_INT_PAY,b.COD_UNI_FREQ_INT_PAY,b.FRE_REV_INT,b.COD_UNI_FRE_REV_INT,b.AMRT_TRM,b.COD_UNI_AMRT_TRM,
    CASE WHEN m.COD_INFO_SOURCE LIKE '%_M'THEN 0 ELSE b.INI_AM END AS INI_AM,b.CUO_AM,b.CREDIT_LIM_AM,b.PREDEF_RATE_IND,b.PREDEF_RATE,b.IND_CHANNEL,b.COD_OFFI,i.DES_OFFI, 
    a.PL_TOT,a.AVGBAL_TOT_YTD,a.PL_YTD,a.FTP_RESULT_YTD,a.PL_TOT_YTD,
    a.EOPBAL_TOT_RPT,a.AVGBAL_TOT_RPT,a.PL_TOT_RPT,a.PL_RPT,a.FTP_RESULT_RPT,
    a.AVGBAL_TOT_YTD_RPT,a.PL_YTD_RPT,a.FTP_RESULT_YTD_RPT,a.PL_TOT_YTD_RPT,
    a.COD_GL_GROUP,a.DES_GL_GROUP,a.ACCOUNT_CONCEPT,a.COD_PL_ACC,
    a.DES_PL_ACC,a.COD_BLCE_PROD,a.DES_BLCE_PROD,a.COD_BUSINESS_LINE,a.DES_BUSINESS_LINE,a.FTP,a.FTP_RESULT,a.IND_POOL,
    CASE WHEN b.COU_CAR_OFF IS NOT NULL THEN b.COU_CAR_OFF ELSE d.COU_CAR_OFF END AS COU_CAR_OFF, 
    CASE WHEN b.COD_CONV IS NOT NULL THEN b.COD_CONV ELSE d.COD_CONV END AS COD_CONV, g.DES_CONV, 
    CASE WHEN c.ID_ECO_GRO IS NOT NULL THEN c.ID_ECO_GRO ELSE e.ID_ECO_GRO END AS ID_ECO_GRO, 
    CASE WHEN c.COU_ECO_GRO IS NOT NULL THEN c.COU_ECO_GRO ELSE e.COU_ECO_GRO END AS COU_ECO_GRO, f.DES_ECO_GRO, 
    CASE WHEN c.IND_MUL_LAT IS NOT NULL THEN c.IND_MUL_LAT ELSE e.IND_MUL_LAT END AS IND_MUL_LAT, 
    h.DES_MUL_LAT, b.COD_EXEC_CTO, b.COD_COVID_PORT, b.DATE_DISB, b.CARD_NUMBER, 
    b.FIELD1_CTO, b.FIELD2_CTO, b.FIELD3_CTO, b.FIELD4_CTO, b.FIELD5_CTO, b.FIELD6_CTO, b.FIELD7_CTO, b.FIELD8_CTO, b.FIELD9_CTO, b.FIELD10_CTO, 
    c.FIELD1_CLI, c.FIELD2_CLI, c.FIELD3_CLI, c.FIELD4_CLI, c.FIELD5_CLI, c.FIELD6_CLI, c.FIELD7_CLI, c.FIELD8_CLI, c.FIELD9_CLI, c.FIELD10_CLI, 
    a.DATA_DATE
FROM MIS_DM_BALANCE_RESULT_AUX a 
LEFT JOIN (SELECT DISTINCT IDF_CTO, COD_INFO_SOURCE FROM MIS_DM_BALANCE_RESULT_AUX WHERE IND_POOL IS NULL AND COD_VALUE = 'CAP' AND COD_CONT IN ('PREST','CTA','PLZ') AND IDF_CTO IN(
SELECT IDF_CTO FROM MIS_DM_BALANCE_RESULT_AUX 
WHERE IND_POOL IS NULL AND COD_VALUE = 'CAP' AND COD_CONT IN ('PREST','CTA','PLZ') GROUP BY IDF_CTO HAVING COUNT(*)>1)) m
ON a.IDF_CTO = m.IDF_CTO and a.COD_INFO_SOURCE = m.COD_INFO_SOURCE
LEFT JOIN (SELECT * FROM MIS_APR_CONTRACT_DT WHERE DATA_DATE='${var:periodo}') b
ON a.DATA_DATE = b.DATA_DATE AND a.IDF_CTO = b.IDF_CTO AND a.COD_ENTITY = b.COD_ENTITY 
LEFT JOIN (SELECT * FROM MIS_APR_CLIENT_DT WHERE DATA_DATE='${var:periodo}') c
ON b.DATA_DATE = c.DATA_DATE AND b.IDF_CLI = c.IDF_CLI
LEFT JOIN MIS_PAR_REL_REG_DIMENSIONS d
ON a.IDF_CTO = d.IDF_CTO
LEFT JOIN MIS_PAR_REL_REG_DIMENSIONS e
ON b.IDF_CLI = e.IDF_CLI
LEFT JOIN MIS_PAR_CAT_ECO_GRO f
ON e.ID_ECO_GRO = f.ID_ECO_GRO AND e.COU_ECO_GRO = f.COU_ECO_GRO
LEFT JOIN MIS_PAR_CAT_CONV g 
ON d.COD_CONV = g.COD_CONV 
LEFT JOIN MIS_PAR_CAT_MUL_LAT h 
ON e.IND_MUL_LAT = h.IND_MUL_LAT
LEFT JOIN MIS_PAR_CAT_OFFI i 
ON b.COD_OFFI = TRIM(i.COD_OFFI) 
;

--COMPUTE INCREMENTAL STATS MIS_TMP_DM_BALANCE_DT;

----Conversión de saldos a Moneda local
TRUNCATE TABLE IF EXISTS MIS_TMP_DM_BALANCE_RESULT;
DROP TABLE IF EXISTS MIS_TMP_DM_BALANCE_RESULT;
CREATE TABLE MIS_TMP_DM_BALANCE_RESULT AS 
SELECT a.COD_CONT,a.IDF_CTO,a.COD_VALUE,a.COD_ACCO_CENT,a.COD_EXPENSE,a.COD_BLCE_STATUS,a.COD_CURRENCY,a.COD_ENTITY,a.EXP_TYPE,a.EXP_FAMILY,a.COD_PRODUCT,
    a.COD_SUBPRODUCT,a.EOPBAL_TOT,a.EOPBAL_CAP,a.EOPBAL_INT,a.AVGBAL_TOT,a.AVGBAL_CAP,a.AVGBAL_INT,a.PL,a.COD_INFO_SOURCE,a.COD_TYP_FEE,
    a.IDF_CLI,a.TYP_DOC_ID,a.NUM_DOC_ID,a.NOM_NAME,a.NOM_LASTN,a.COD_RES_COUNT,a.COD_TYP_CLNT,a.COD_COND_CLNT,
    a.COD_ENG,a.VAL_SEX,a.COD_SEGMENT,a.DES_SEGMENT,a.COD_SUBSEGMENT,a.IND_EMPL_GRUP,a.DATE_CLNT_REG,a.DATE_CLNT_WITHDRAW,
    a.COD_MANAGER,a.COD_SECTOR,a.DES_SECTOR,a.RATING_CLI,a.COD_GROUP_EC,
    a.COD_BCA_INT,a.COD_AMRT_MET,a.COD_RATE_TYPE,a.RATE_INT,a.DATE_ORIGIN,a.DATE_LAST_REV,
    a.DATE_PRX_REV,a.EXP_DATE,a.FREQ_INT_PAY,a.COD_UNI_FREQ_INT_PAY,a.FRE_REV_INT,a.COD_UNI_FRE_REV_INT,a.AMRT_TRM,a.COD_UNI_AMRT_TRM,
    a.INI_AM,a.CUO_AM,a.CREDIT_LIM_AM,a.PREDEF_RATE_IND,a.PREDEF_RATE,a.IND_CHANNEL,a.COD_OFFI,a.DES_OFFI,
    a.PL_TOT,a.AVGBAL_TOT_YTD,a.PL_YTD,a.FTP_RESULT_YTD,a.PL_TOT_YTD,
    CASE 
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.EOPBAL_TOT, 0) 
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.EOPBAL_TOT / b.EXCH_RATE, 0) 
        ELSE IFNULL(a.EOPBAL_TOT * b.EXCH_RATE, 0) END AS EOPBAL_TOT_RPT,
    CASE 
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.AVGBAL_TOT, 0)  
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.AVGBAL_TOT / b.EXCH_RATE, 0) 
        ELSE IFNULL(a.AVGBAL_TOT * b.EXCH_RATE,0) END AS AVGBAL_TOT_RPT,
    CASE 
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.PL_TOT, 0)
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.PL_TOT  / c.EXCH_RATE,0) 
        ELSE IFNULL(a.PL_TOT  * c.EXCH_RATE,0) END AS PL_TOT_RPT,
    CASE 
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.PL, 0)
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.PL  / c.EXCH_RATE,0) 
        ELSE IFNULL(a.PL  * c.EXCH_RATE,0) END AS PL_RPT,
    CASE
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.FTP_RESULT, 0)
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.FTP_RESULT  / b.EXCH_RATE,0) 
        ELSE IFNULL(a.FTP_RESULT  * b.EXCH_RATE,0) END AS FTP_RESULT_RPT,
    CASE
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.AVGBAL_TOT_YTD, 0)
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.AVGBAL_TOT_YTD / b.EXCH_RATE,0) 
        ELSE IFNULL(a.AVGBAL_TOT_YTD * b.EXCH_RATE,0) END AS AVGBAL_TOT_YTD_RPT,
    CASE
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.PL_YTD, 0) 
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.PL_YTD  / c.EXCH_RATE,0) 
        ELSE IFNULL(a.PL_YTD  * c.EXCH_RATE,0) END AS PL_YTD_RPT,
    CASE
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.FTP_RESULT_YTD, 0) 
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.FTP_RESULT_YTD  / b.EXCH_RATE,0) 
        ELSE IFNULL(a.FTP_RESULT_YTD  * b.EXCH_RATE,0) END AS FTP_RESULT_YTD_RPT,
    CASE
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.PL_TOT_YTD, 0)
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.PL_TOT_YTD  / c.EXCH_RATE,0) 
        ELSE IFNULL(a.PL_TOT_YTD  * c.EXCH_RATE,0) END AS PL_TOT_YTD_RPT,
    CASE
        WHEN a.COD_CURRENCY='CRC' THEN IFNULL(a.INI_AM, 0)
        WHEN a.COD_CURRENCY='COP' THEN IFNULL(a.INI_AM  / b.EXCH_RATE,0) 
        ELSE IFNULL(a.INI_AM  * b.EXCH_RATE,0) END AS INI_AM_RPT, 
    a.COD_GL_GROUP,a.DES_GL_GROUP,a.ACCOUNT_CONCEPT,a.COD_PL_ACC,
    a.DES_PL_ACC,a.COD_BLCE_PROD,a.DES_BLCE_PROD,a.COD_BUSINESS_LINE,a.DES_BUSINESS_LINE,a.FTP,a.FTP_RESULT,a.IND_POOL,
    a.COU_CAR_OFF,a.COD_CONV,a.DES_CONV,a.ID_ECO_GRO,a.COU_ECO_GRO,a.DES_ECO_GRO,a.IND_MUL_LAT,
    a.DES_MUL_LAT, a.COD_EXEC_CTO, a.COD_COVID_PORT, a.DATE_DISB, a.CARD_NUMBER, 
    a.FIELD1_CTO, a.FIELD2_CTO, a.FIELD3_CTO, a.FIELD4_CTO, a.FIELD5_CTO, a.FIELD6_CTO, a.FIELD7_CTO, a.FIELD8_CTO, a.FIELD9_CTO, a.FIELD10_CTO, 
    a.FIELD1_CLI, a.FIELD2_CLI, a.FIELD3_CLI, a.FIELD4_CLI, a.FIELD5_CLI, a.FIELD6_CLI, a.FIELD7_CLI, a.FIELD8_CLI, a.FIELD9_CLI, a.FIELD10_CLI, 
    a.DATA_DATE
FROM MIS_TMP_DM_BALANCE_DT a 
LEFT JOIN MIS_PAR_EXCH_RATE b   
ON a.DATA_DATE=b.DATA_DATE AND b.COD_CONT = 'TC_FOTO' --a.COD_ENTITY=b.COD_ENTITY 
   AND a.COD_CURRENCY=b.COD_CURRENCY
LEFT JOIN MIS_PAR_EXCH_RATE c   
ON a.DATA_DATE=c.DATA_DATE AND c.COD_CONT = 'TC_PROMEDIO' --a.COD_ENTITY=c.COD_ENTITY 
   AND a.COD_CURRENCY=c.COD_CURRENCY;



ALTER TABLE MIS_DM_BALANCE_RESULT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

----Carga de contratos y resultados en tabla final
INSERT INTO MIS_DM_BALANCE_RESULT
(COD_CONT,IDF_CTO,COD_VALUE,COD_ACCO_CENT,COD_EXPENSE,COD_BLCE_STATUS,COD_CURRENCY,COD_ENTITY,COD_PRODUCT,COD_SUBPRODUCT,
COD_INFO_SOURCE,COD_TYP_FEE,IDF_CLI,TYP_DOC_ID,NUM_DOC_ID,NOM_NAME,NOM_LASTN,COD_RES_COUNT,COD_TYP_CLNT,COD_COND_CLNT,COD_ENG,VAL_SEX,COD_SEGMENT,DES_SEGMENT,COD_SUBSEGMENT,IND_EMPL_GRUP,
DATE_CLNT_REG,DATE_CLNT_WITHDRAW,COD_MANAGER,COD_SECTOR,DES_SECTOR,RATING_CLI,COD_GROUP_EC,COD_BCA_INT,COD_AMRT_MET,COD_RATE_TYPE,RATE_INT,DATE_ORIGIN,
DATE_LAST_REV,DATE_PRX_REV,EXP_DATE,FREQ_INT_PAY,COD_UNI_FREQ_INT_PAY,FRE_REV_INT,COD_UNI_FRE_REV_INT,AMRT_TRM,COD_UNI_AMRT_TRM,INI_AM,CUO_AM,CREDIT_LIM_AM,PREDEF_RATE_IND,PREDEF_RATE,IND_CHANNEL,COD_OFFI,DES_OFFI,
COD_GL_GROUP,DES_GL_GROUP,ACCOUNT_CONCEPT,COD_PL_ACC,DES_PL_ACC,COD_BLCE_PROD,DES_BLCE_PROD,COD_BUSINESS_LINE,DES_BUSINESS_LINE,IND_POOL,
EOPBAL_TOT,EOPBAL_CAP,EOPBAL_INT,AVGBAL_TOT,AVGBAL_CAP,AVGBAL_INT,PL,FTP,FTP_RESULT,
PL_TOT,EOPBAL_TOT_RPT,AVGBAL_TOT_RPT,PL_TOT_RPT,PL_RPT,FTP_RESULT_RPT,AVGBAL_TOT_YTD,PL_YTD,FTP_RESULT_YTD,PL_TOT_YTD,AVGBAL_TOT_YTD_RPT,PL_YTD_RPT,FTP_RESULT_YTD_RPT,PL_TOT_YTD_RPT,EXP_TYPE,EXP_FAMILY,
COU_CAR_OFF,COD_CONV,DES_CONV,ID_ECO_GRO,COU_ECO_GRO,DES_ECO_GRO,IND_MUL_LAT,INI_AM_RPT,DES_MUL_LAT,COD_EXEC_CTO,COD_COVID_PORT,DATE_DISB,CARD_NUMBER, 
FIELD1_CTO, FIELD2_CTO, FIELD3_CTO, FIELD4_CTO, FIELD5_CTO, FIELD6_CTO, FIELD7_CTO, FIELD8_CTO, FIELD9_CTO, FIELD10_CTO,
FIELD1_CLI, FIELD2_CLI, FIELD3_CLI, FIELD4_CLI, FIELD5_CLI, FIELD6_CLI, FIELD7_CLI, FIELD8_CLI, FIELD9_CLI, FIELD10_CLI
)
PARTITION (DATA_DATE)  
SELECT 
    X.COD_CONT, X.IDF_CTO, X.COD_VALUE, X.COD_ACCO_CENT, X.COD_EXPENSE, X.COD_BLCE_STATUS, X.COD_CURRENCY, X.COD_ENTITY, 
    X.COD_PRODUCT, X.COD_SUBPRODUCT, X.COD_INFO_SOURCE, X.COD_TYP_FEE, X.IDF_CLI, X.TYP_DOC_ID, 
    X.NUM_DOC_ID, X.NOM_NAME, X.NOM_LASTN, X.COD_RES_COUNT, X.COD_TYP_CLNT, X.COD_COND_CLNT, X.COD_ENG, 
    X.VAL_SEX, X.COD_SEGMENT, X.DES_SEGMENT, X.COD_SUBSEGMENT, X.IND_EMPL_GRUP, X.DATE_CLNT_REG, X.DATE_CLNT_WITHDRAW, 
    X.COD_MANAGER, X.COD_SECTOR, X.DES_SECTOR, X.RATING_CLI, X.COD_GROUP_EC, 
    X.COD_BCA_INT, X.COD_AMRT_MET, X.COD_RATE_TYPE, 
    CAST(ROUND(X.RATE_INT, 6) AS decimal(30, 6)) AS RATE_INT, X.DATE_ORIGIN, X.DATE_LAST_REV, X.DATE_PRX_REV, X.EXP_DATE, 
    CAST(ROUND(X.FREQ_INT_PAY, 2) AS smallint) AS FREQ_INT_PAY, X.COD_UNI_FREQ_INT_PAY, CAST(ROUND(X.FRE_REV_INT, 2) AS smallint) AS FRE_REV_INT, X.COD_UNI_FRE_REV_INT, 
    CAST(ROUND(X.AMRT_TRM, 2) AS smallint) AS AMRT_TRM, X.COD_UNI_AMRT_TRM, CAST(ROUND(X.INI_AM, 2) AS decimal(30, 2)) AS INI_AM, CAST(ROUND(X.CUO_AM, 2) AS decimal(30, 2)) AS CUO_AM, 
    CAST(ROUND(X.CREDIT_LIM_AM, 2) AS decimal(30, 2)) AS CREDIT_LIM_AM, X.PREDEF_RATE_IND, CAST(ROUND(X.PREDEF_RATE, 2) AS decimal(30, 2)) AS PREDEF_RATE, X.IND_CHANNEL, X.COD_OFFI, X.DES_OFFI, X.COD_GL_GROUP, 
    X.DES_GL_GROUP, X.ACCOUNT_CONCEPT, X.COD_PL_ACC, X.DES_PL_ACC, X.COD_BLCE_PROD, X.DES_BLCE_PROD, 
    X.COD_BUSINESS_LINE, X.DES_BUSINESS_LINE, X.IND_POOL, CAST(ROUND(SUM(X.EOPBAL_TOT), 2) AS decimal(30, 2)) AS EOPBAL_TOT, 
    CAST(ROUND(SUM(X.EOPBAL_CAP), 2) AS decimal(30, 2)) AS EOPBAL_CAP, CAST(ROUND(SUM(X.EOPBAL_INT), 2) AS decimal(30, 2)) AS EOPBAL_INT, CAST(ROUND(SUM(X.AVGBAL_TOT), 2) AS decimal(30, 2)) AS AVGBAL_TOT, 
    CAST(ROUND(SUM(X.AVGBAL_CAP), 2) AS decimal(30, 2)) AS AVGBAL_CAP, CAST(ROUND(SUM(X.AVGBAL_INT), 2) AS decimal(30, 2)) AS AVGBAL_INT, CAST(ROUND(SUM(X.PL), 2) AS decimal(30, 2)) AS PL, 
    CAST(ROUND(SUM(X.FTP), 6) AS decimal(30, 6)) AS FTP, CAST(ROUND(SUM(X.FTP_RESULT), 2) AS decimal(30, 2)) AS FTP_RESULT, CAST(ROUND(SUM(X.PL_TOT), 2) AS decimal(30, 2)) AS PL_TOT, 
    CAST(ROUND(SUM(X.EOPBAL_TOT_RPT), 2) AS decimal(30, 2)) AS EOPBAL_TOT_RPT, CAST(ROUND(SUM(X.AVGBAL_TOT_RPT), 2) AS decimal(30, 2)) AS AVGBAL_TOT_RPT, 
    CAST(ROUND(SUM(X.PL_TOT_RPT), 2) AS decimal(30, 2)) AS PL_TOT_RPT, CAST(ROUND(SUM(X.PL_RPT), 2) AS decimal(30, 2)) AS PL_RPT, CAST(ROUND(SUM(X.FTP_RESULT_RPT), 2) AS decimal(30, 2)) AS FTP_RESULT_RPT, 
    CASE 
    WHEN MONTH(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd')) = 1 AND DAY(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd')) = 1 THEN CAST(ROUND(SUM(X.AVGBAL_TOT_YTD), 2) AS decimal(30, 2))
    ELSE CAST(ROUND((SUM(X.AVGBAL_TOT_YTD) / (DATEDIFF(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd'), TRUNC(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd'),'YY')) + DAY(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd')))), 2) AS decimal(30, 2))
    END AS AVGBAL_TOT_YTD, 
    CAST(ROUND(SUM(X.PL_YTD), 2) AS decimal(30, 2)) AS PL_YTD,
    CAST(ROUND(SUM(X.FTP_RESULT_YTD), 2) AS decimal(30, 2)) AS FTP_RESULT_YTD,
    CAST(ROUND(SUM(X.PL_TOT_YTD), 2) AS decimal(30, 2)) AS PL_TOT_YTD, 
    CASE
    WHEN MONTH(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd')) = 1 AND DAY(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd')) = 1 THEN CAST(ROUND(SUM(X.AVGBAL_TOT_YTD_RPT), 2) AS decimal(30, 2)) 
    ELSE CAST(ROUND((SUM(X.AVGBAL_TOT_YTD_RPT) / (DATEDIFF(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd'), TRUNC(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd'),'YY')) + DAY(TO_TIMESTAMP(X.DATA_DATE, 'yyyyMMdd')))), 2) AS decimal(30, 2))  
    END AS AVGBAL_TOT_YTD_RPT, 
    CAST(ROUND(SUM(X.PL_YTD_RPT), 2) AS decimal(30, 2)) AS PL_YTD_RPT, 
    CAST(ROUND(SUM(X.FTP_RESULT_YTD_RPT), 2) AS decimal(30, 2)) AS FTP_RESULT_YTD_RPT,
    CAST(ROUND(SUM(X.PL_TOT_YTD_RPT), 2) AS decimal(30, 2)) AS PL_TOT_YTD_RPT, 
    X.EXP_TYPE, X.EXP_FAMILY,
    X.COU_CAR_OFF, X.COD_CONV, X.DES_CONV, X.ID_ECO_GRO, X.COU_ECO_GRO, X.DES_ECO_GRO, X.IND_MUL_LAT, CAST(ROUND(SUM(X.INI_AM_RPT), 2) AS decimal(30, 2)) AS INI_AM_RPT, 
    X.DES_MUL_LAT, X.COD_EXEC_CTO, X.COD_COVID_PORT, X.DATE_DISB, X.CARD_NUMBER, 
    X.FIELD1_CTO, X.FIELD2_CTO, X.FIELD3_CTO, X.FIELD4_CTO, X.FIELD5_CTO, X.FIELD6_CTO, X.FIELD7_CTO, X.FIELD8_CTO, X.FIELD9_CTO, X.FIELD10_CTO, 
    X.FIELD1_CLI, X.FIELD2_CLI, X.FIELD3_CLI, X.FIELD4_CLI, X.FIELD5_CLI, X.FIELD6_CLI, X.FIELD7_CLI, X.FIELD8_CLI, X.FIELD9_CLI, X.FIELD10_CLI,  
    X.DATA_DATE 
FROM
    (SELECT 
        a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_EXPENSE, a.COD_BLCE_STATUS, A.COD_CURRENCY, A.COD_ENTITY, 
        A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_INFO_SOURCE, A.COD_TYP_FEE, A.IDF_CLI, A.TYP_DOC_ID, 
        A.NUM_DOC_ID, A.NOM_NAME, A.NOM_LASTN, A.COD_RES_COUNT, A.COD_TYP_CLNT, A.COD_COND_CLNT, A.COD_ENG,
        A.VAL_SEX, A.COD_SEGMENT, A.DES_SEGMENT, A.COD_SUBSEGMENT, A.IND_EMPL_GRUP, A.DATE_CLNT_REG, A.DATE_CLNT_WITHDRAW,
        A.COD_MANAGER, A.COD_SECTOR, A.DES_SECTOR, A.RATING_CLI, A.COD_GROUP_EC,
        A.COD_BCA_INT, A.COD_AMRT_MET, A.COD_RATE_TYPE, A.RATE_INT, A.DATE_ORIGIN, 
        A.DATE_LAST_REV, A.DATE_PRX_REV, A.EXP_DATE, A.FREQ_INT_PAY, A.COD_UNI_FREQ_INT_PAY, A.FRE_REV_INT,
        A.COD_UNI_FRE_REV_INT, A.AMRT_TRM, A.COD_UNI_AMRT_TRM, A.INI_AM, A.CUO_AM, A.CREDIT_LIM_AM, 
        A.PREDEF_RATE_IND, A.PREDEF_RATE, A.IND_CHANNEL, A.COD_OFFI, A.DES_OFFI, A.COD_GL_GROUP, A.DES_GL_GROUP, A.ACCOUNT_CONCEPT, 
        A.COD_PL_ACC, A.DES_PL_ACC, A.COD_BLCE_PROD, A.DES_BLCE_PROD, A.COD_BUSINESS_LINE, A.DES_BUSINESS_LINE,
        A.IND_POOL, SUM(A.EOPBAL_TOT) AS EOPBAL_TOT, SUM(A.EOPBAL_CAP) AS EOPBAL_CAP, SUM(A.EOPBAL_INT) AS EOPBAL_INT, SUM(A.AVGBAL_TOT) AS AVGBAL_TOT, 
        SUM(A.AVGBAL_CAP) AS AVGBAL_CAP, SUM(A.AVGBAL_INT) AS AVGBAL_INT, SUM(A.PL) AS PL, SUM(A.FTP) AS FTP, SUM(A.FTP_RESULT) AS FTP_RESULT, SUM(A.PL_TOT) AS PL_TOT, 
        SUM(A.EOPBAL_TOT_RPT) AS EOPBAL_TOT_RPT, SUM(A.AVGBAL_TOT_RPT) AS AVGBAL_TOT_RPT, SUM(A.PL_TOT_RPT) AS PL_TOT_RPT, SUM(A.PL_RPT) AS PL_RPT, SUM(A.FTP_RESULT_RPT) AS FTP_RESULT_RPT,
        CASE 
        WHEN MONTH(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')) = 1 AND DAY(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')) = 1 THEN SUM(A.AVGBAL_TOT)
        ELSE SUM(A.AVGBAL_TOT * DAY(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')))
        END AS AVGBAL_TOT_YTD,
        SUM(A.PL) AS PL_YTD, 
        CASE 
        WHEN MONTH(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')) = 1 AND DAY(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')) = 1 THEN SUM(A.FTP_RESULT) 
        ELSE SUM(A.FTP_RESULT_YTD) 
        END AS FTP_RESULT_YTD, 
        SUM(A.PL_TOT) AS PL_TOT_YTD, 
        CASE 
        WHEN MONTH(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')) = 1 AND DAY(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')) = 1 THEN SUM(A.AVGBAL_TOT_RPT) 
        ELSE SUM(A.AVGBAL_TOT_RPT * DAY(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')))  
        END AS AVGBAL_TOT_YTD_RPT, 
        SUM(A.PL_RPT) AS PL_YTD_RPT,
        SUM(A.FTP_RESULT_RPT)  AS FTP_RESULT_YTD_RPT, 
        SUM(A.PL_TOT_RPT) AS PL_TOT_YTD_RPT, 
        A.EXP_TYPE, A.EXP_FAMILY,
        A.COU_CAR_OFF, A.COD_CONV, A.DES_CONV, A.ID_ECO_GRO, A.COU_ECO_GRO, A.DES_ECO_GRO, A.IND_MUL_LAT, SUM(A.INI_AM_RPT) AS INI_AM_RPT, 
        A.DES_MUL_LAT, A.COD_EXEC_CTO, A.COD_COVID_PORT, A.DATE_DISB, A.CARD_NUMBER, 
        A.FIELD1_CTO, A.FIELD2_CTO, A.FIELD3_CTO, A.FIELD4_CTO, A.FIELD5_CTO, A.FIELD6_CTO, A.FIELD7_CTO, A.FIELD8_CTO, A.FIELD9_CTO, A.FIELD10_CTO, 
        A.FIELD1_CLI, A.FIELD2_CLI, A.FIELD3_CLI, A.FIELD4_CLI, A.FIELD5_CLI, A.FIELD6_CLI, A.FIELD7_CLI, A.FIELD8_CLI, A.FIELD9_CLI, A.FIELD10_CLI, 
        A.DATA_DATE
    FROM MIS_TMP_DM_BALANCE_RESULT AS A 
    GROUP BY A.DATA_DATE, a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_EXPENSE, a.COD_BLCE_STATUS, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_INFO_SOURCE, A.COD_TYP_FEE, A.IDF_CLI,
    A.TYP_DOC_ID, A.NUM_DOC_ID, A.NOM_NAME, A.NOM_LASTN, A.COD_RES_COUNT, A.COD_TYP_CLNT, A.COD_COND_CLNT, A.COD_ENG, A.VAL_SEX, A.COD_SEGMENT, A.DES_SEGMENT, A.COD_SUBSEGMENT, A.IND_EMPL_GRUP, A.DATE_CLNT_REG, A.DATE_CLNT_WITHDRAW, 
    A.COD_MANAGER, A.COD_SECTOR, A.DES_SECTOR, A.RATING_CLI, A.COD_GROUP_EC, A.COD_BCA_INT, A.COD_AMRT_MET, A.COD_RATE_TYPE, A.RATE_INT, A.DATE_ORIGIN, A.DATE_LAST_REV, 
    A.DATE_PRX_REV, A.EXP_DATE, A.FREQ_INT_PAY, A.COD_UNI_FREQ_INT_PAY, A.FRE_REV_INT, A.COD_UNI_FRE_REV_INT, A.AMRT_TRM, A.COD_UNI_AMRT_TRM, A.INI_AM, A.CUO_AM, A.CREDIT_LIM_AM, A.PREDEF_RATE_IND, A.PREDEF_RATE, 
    A.IND_CHANNEL, A.COD_OFFI, A.DES_OFFI, A.COD_GL_GROUP, A.DES_GL_GROUP, A.ACCOUNT_CONCEPT, A.COD_PL_ACC, A.DES_PL_ACC, A.COD_BLCE_PROD, A.DES_BLCE_PROD, A.COD_BUSINESS_LINE, A.DES_BUSINESS_LINE, A.IND_POOL, A.EXP_TYPE, A.EXP_FAMILY,
    A.COU_CAR_OFF, A.COD_CONV, A.DES_CONV, A.ID_ECO_GRO, A.COU_ECO_GRO, A.DES_ECO_GRO, A.IND_MUL_LAT, A.DES_MUL_LAT, A.COD_EXEC_CTO, A.COD_COVID_PORT, A.DATE_DISB, A.CARD_NUMBER, 
    A.FIELD1_CTO, A.FIELD2_CTO, A.FIELD3_CTO, A.FIELD4_CTO, A.FIELD5_CTO, A.FIELD6_CTO, A.FIELD7_CTO, A.FIELD8_CTO, A.FIELD9_CTO, A.FIELD10_CTO, 
    A.FIELD1_CLI, A.FIELD2_CLI, A.FIELD3_CLI, A.FIELD4_CLI, A.FIELD5_CLI, A.FIELD6_CLI, A.FIELD7_CLI, A.FIELD8_CLI, A.FIELD9_CLI, A.FIELD10_CLI  

/*UNION ALL 

    SELECT 
        a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_EXPENSE, a.COD_BLCE_STATUS, A.COD_CURRENCY, A.COD_ENTITY,
        A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_INFO_SOURCE, A.COD_TYP_FEE, A.IDF_CLI, A.TYP_DOC_ID, A.NUM_DOC_ID,
        A.NOM_NAME, A.NOM_LASTN, A.COD_RES_COUNT, A.COD_TYP_CLNT, A.COD_COND_CLNT, A.COD_ENG, A.VAL_SEX, 
        COALESCE(CLI.COD_SEGMENT, A.COD_SEGMENT) AS COD_SEGMENT, COALESCE(CLI.DES_SEGMENT, A.DES_SEGMENT) AS DES_SEGMENT, A.COD_SUBSEGMENT, A.IND_EMPL_GRUP, A.DATE_CLNT_REG, A.DATE_CLNT_WITHDRAW,
        A.COD_MANAGER, A.COD_SECTOR, A.DES_SECTOR, A.RATING_CLI, A.COD_GROUP_EC,
        A.COD_BCA_INT, A.COD_AMRT_MET, A.COD_RATE_TYPE, A.RATE_INT, A.DATE_ORIGIN, 
        A.DATE_LAST_REV, A.DATE_PRX_REV, A.EXP_DATE, A.FREQ_INT_PAY, A.COD_UNI_FREQ_INT_PAY, A.FRE_REV_INT, 
        A.COD_UNI_FRE_REV_INT, A.AMRT_TRM, A.COD_UNI_AMRT_TRM, A.INI_AM, A.CUO_AM, A.CREDIT_LIM_AM, 
        A.PREDEF_RATE_IND, A.PREDEF_RATE, A.IND_CHANNEL, A.COD_OFFI, A.DES_OFFI, A.COD_GL_GROUP, A.DES_GL_GROUP, A.ACCOUNT_CONCEPT, 
        A.COD_PL_ACC, A.DES_PL_ACC, A.COD_BLCE_PROD, A.DES_BLCE_PROD, A.COD_BUSINESS_LINE, A.DES_BUSINESS_LINE, 
        A.IND_POOL, 0 AS EOPBAL_TOT, 0 AS EOPBAL_CAP, 0 AS EOPBAL_INT, 0 AS AVGBAL_TOT, 0 AS AVGBAL_CAP, 0 AS AVGBAL_INT, 0 AS PL, 0 AS FTP, 0 AS FTP_RESULT, 0 AS PL_TOT, 0 AS EOPBAL_TOT_RPT, 
        0 AS AVGBAL_TOT_RPT, 0 AS PL_TOT_RPT, 0 AS PL_RPT, 0 AS FTP_RESULT_RPT, 
        SUM(A.AVGBAL_TOT_YTD * DATEDIFF(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd'), TRUNC(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd'),'YY'))) AS AVGBAL_TOT_YTD, 
        SUM(A.PL_YTD) AS PL_YTD,
        SUM(A.FTP_RESULT_YTD) AS FTP_RESULT_YTD, 
        SUM(A.PL_TOT_YTD) AS PL_TOT_YTD, 
        SUM(A.AVGBAL_TOT_YTD_RPT * DATEDIFF(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd'), TRUNC(TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd'),'YY'))) AS AVGBAL_TOT_YTD_RPT, 
        SUM(A.PL_YTD_RPT) AS PL_YTD_RPT, 
        SUM(A.FTP_RESULT_YTD_RPT) AS FTP_RESULT_YTD_RPT, 
        SUM(A.PL_TOT_YTD_RPT) AS PL_TOT_YTD_RPT, 
        A.EXP_TYPE, A.EXP_FAMILY, 
        A.COU_CAR_OFF, A.COD_CONV, A.DES_CONV, A.ID_ECO_GRO, A.COU_ECO_GRO, A.DES_ECO_GRO, A.IND_MUL_LAT, SUM(A.INI_AM_RPT) AS INI_AM_RPT, 
        A.DES_MUL_LAT, A.COD_EXEC_CTO, A.COD_COVID_PORT, A.DATE_DISB, A.CARD_NUMBER, 
        A.FIELD1_CTO, A.FIELD2_CTO, A.FIELD3_CTO, A.FIELD4_CTO, A.FIELD5_CTO, A.FIELD6_CTO, A.FIELD7_CTO, A.FIELD8_CTO, A.FIELD9_CTO, A.FIELD10_CTO, 
        A.FIELD1_CLI, A.FIELD2_CLI, A.FIELD3_CLI, A.FIELD4_CLI, A.FIELD5_CLI, A.FIELD6_CLI, A.FIELD7_CLI, A.FIELD8_CLI, A.FIELD9_CLI, A.FIELD10_CLI, 
        '${var:periodo}' AS DATA_DATE 
    FROM MIS_DM_BALANCE_RESULT AS A 
    LEFT JOIN MIS_APR_CLIENT_DT AS CLI 
    ON A.DATA_DATE = CLI.DATA_DATE AND A.IDF_CLI = CLI.IDF_CLI 
    WHERE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))>1 AND DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))>1 AND TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd')=DAYS_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1)  
    GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_VALUE, a.COD_ACCO_CENT, a.COD_EXPENSE, a.COD_BLCE_STATUS, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_INFO_SOURCE, A.COD_TYP_FEE, A.IDF_CLI, A.TYP_DOC_ID,
    A.NUM_DOC_ID, A.NOM_NAME, A.NOM_LASTN, A.COD_RES_COUNT, A.COD_TYP_CLNT, A.COD_COND_CLNT, A.COD_ENG, A.VAL_SEX, COALESCE(CLI.COD_SEGMENT, A.COD_SEGMENT), COALESCE(CLI.DES_SEGMENT, A.DES_SEGMENT), A.COD_SUBSEGMENT, 
    A.IND_EMPL_GRUP, A.DATE_CLNT_REG, A.DATE_CLNT_WITHDRAW, A.COD_MANAGER, A.COD_SECTOR, A.DES_SECTOR, A.RATING_CLI, A.COD_GROUP_EC, A.COD_BCA_INT, A.COD_AMRT_MET, A.COD_RATE_TYPE, 
    A.RATE_INT, A.DATE_ORIGIN, A.DATE_LAST_REV, A.DATE_PRX_REV, A.EXP_DATE, A.FREQ_INT_PAY, A.COD_UNI_FREQ_INT_PAY, A.FRE_REV_INT, A.COD_UNI_FRE_REV_INT, A.AMRT_TRM, A.COD_UNI_AMRT_TRM, A.INI_AM, A.CUO_AM, 
    A.CREDIT_LIM_AM, A.PREDEF_RATE_IND, A.PREDEF_RATE, A.IND_CHANNEL, A.COD_OFFI, A.DES_OFFI, A.COD_GL_GROUP, A.DES_GL_GROUP, A.ACCOUNT_CONCEPT, A.COD_PL_ACC, A.DES_PL_ACC, A.COD_BLCE_PROD, A.DES_BLCE_PROD, A.COD_BUSINESS_LINE, 
    A.DES_BUSINESS_LINE, A.IND_POOL, A.EXP_TYPE, A.EXP_FAMILY, A.COU_CAR_OFF, A.COD_CONV, A.DES_CONV, A.ID_ECO_GRO, A.COU_ECO_GRO, A.DES_ECO_GRO, A.IND_MUL_LAT, A.DES_MUL_LAT, A.COD_EXEC_CTO, A.COD_COVID_PORT, A.DATE_DISB, A.CARD_NUMBER, 
    A.FIELD1_CTO, A.FIELD2_CTO, A.FIELD3_CTO, A.FIELD4_CTO, A.FIELD5_CTO, A.FIELD6_CTO, A.FIELD7_CTO, A.FIELD8_CTO, A.FIELD9_CTO, A.FIELD10_CTO, 
    A.FIELD1_CLI, A.FIELD2_CLI, A.FIELD3_CLI, A.FIELD4_CLI, A.FIELD5_CLI, A.FIELD6_CLI, A.FIELD7_CLI, A.FIELD8_CLI, A.FIELD9_CLI, A.FIELD10_CLI   */
) X 
GROUP BY X.DATA_DATE, X.COD_CONT, X.IDF_CTO, X.COD_VALUE, X.COD_ACCO_CENT, X.COD_EXPENSE, X.COD_BLCE_STATUS, X.COD_CURRENCY, X.COD_ENTITY, X.COD_PRODUCT, X.COD_SUBPRODUCT, X.COD_INFO_SOURCE, X.COD_TYP_FEE, X.IDF_CLI, 
X.TYP_DOC_ID, X.NUM_DOC_ID, X.NOM_NAME, X.NOM_LASTN, X.COD_RES_COUNT, X.COD_TYP_CLNT, X.COD_COND_CLNT, X.COD_ENG, X.VAL_SEX, X.COD_SEGMENT, X.DES_SEGMENT, X.COD_SUBSEGMENT, X.IND_EMPL_GRUP, X.DATE_CLNT_REG, 
X.DATE_CLNT_WITHDRAW, X.COD_MANAGER, X.COD_SECTOR, X.DES_SECTOR, X.RATING_CLI, X.COD_GROUP_EC, X.COD_BCA_INT, X.COD_AMRT_MET, X.COD_RATE_TYPE, X.RATE_INT, X.DATE_ORIGIN, X.DATE_LAST_REV, 
X.DATE_PRX_REV, X.EXP_DATE, X.FREQ_INT_PAY, X.COD_UNI_FREQ_INT_PAY, X.FRE_REV_INT, X.COD_UNI_FRE_REV_INT, X.AMRT_TRM, X.COD_UNI_AMRT_TRM, X.INI_AM, X.CUO_AM, X.CREDIT_LIM_AM, X.PREDEF_RATE_IND, X.PREDEF_RATE, 
X.IND_CHANNEL, X.COD_OFFI, X.DES_OFFI, X.COD_GL_GROUP, X.DES_GL_GROUP, X.ACCOUNT_CONCEPT, X.COD_PL_ACC, X.DES_PL_ACC, X.COD_BLCE_PROD, X.DES_BLCE_PROD, X.COD_BUSINESS_LINE, X.DES_BUSINESS_LINE, X.IND_POOL, X.EXP_TYPE, X.EXP_FAMILY,
X.COU_CAR_OFF, X.COD_CONV, X.DES_CONV, X.ID_ECO_GRO, X.COU_ECO_GRO, X.DES_ECO_GRO, X.IND_MUL_LAT, X.DES_MUL_LAT, X.COD_EXEC_CTO, X.COD_COVID_PORT, X.DATE_DISB, X.CARD_NUMBER, 
X.FIELD1_CTO, X.FIELD2_CTO, X.FIELD3_CTO, X.FIELD4_CTO, X.FIELD5_CTO, X.FIELD6_CTO, X.FIELD7_CTO, X.FIELD8_CTO, X.FIELD9_CTO, X.FIELD10_CTO, 
X.FIELD1_CLI, X.FIELD2_CLI, X.FIELD3_CLI, X.FIELD4_CLI, X.FIELD5_CLI, X.FIELD6_CLI, X.FIELD7_CLI, X.FIELD8_CLI, X.FIELD9_CLI, X.FIELD10_CLI;

--- código para saldo medios de partidas conciliatorias ---

DROP TABLE IF EXISTS MIS_TMP_LOAD_AVGBAL_CONC;
CREATE TABLE MIS_TMP_LOAD_AVGBAL_CONC
(COD_GL_GROUP STRING, COD_BLCE_STATUS STRING,
COD_ENTITY STRING, COD_CURRENCY STRING, COD_ACCO_CENT STRING, COD_INFO_SOURCE STRING, COD_BLCE_PROD STRING, DES_BLCE_PROD STRING,
COD_PL_ACC STRING, DES_PL_ACC STRING, COD_BUSINESS_LINE STRING, DES_BUSINESS_LINE STRING,
AVGBAL_CAP DECIMAL(30,10), AVGBAL_TOT_RPT DECIMAL(30,10),
COD_CONT STRING);

INSERT INTO MIS_TMP_LOAD_AVGBAL_CONC
    SELECT COD_GL_GROUP, COD_BLCE_STATUS, COD_ENTITY, COD_CURRENCY, COD_ACCO_CENT, 'A' AS COD_INFO_SOURCE, COD_BLCE_PROD, DES_BLCE_PROD,
COD_PL_ACC, DES_PL_ACC, COD_BUSINESS_LINE, DES_BUSINESS_LINE, 
    CAST((SUM(EOPBAL_CAP)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1)) AS DECIMAL(30,10))AS AVGBAL_CAP,
  CAST((SUM(EOPBAL_TOT_RPT)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1))AS DECIMAL(30,10)) AS AVGBAL_TOT_RPT,
    COD_CONT
    FROM MIS_DM_BALANCE_RESULT
    WHERE Year(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) =  Year(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND Month(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = Month(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND DATA_DATE <= '${var:periodo}'
    AND COD_PL_ACC = 'NO_PYG'
    AND COD_CONT IN ('RCCL','RCBA','RCIN','RCLI','CTBP','RCRP')
    GROUP BY COD_GL_GROUP, COD_BLCE_STATUS, COD_ENTITY, COD_CURRENCY, COD_ACCO_CENT, COD_BLCE_PROD, DES_BLCE_PROD,
COD_PL_ACC, DES_PL_ACC, COD_BUSINESS_LINE, DES_BUSINESS_LINE, COD_CONT;

DROP TABLE IF EXISTS MIS_TMP_BALANCE_RESULT;
CREATE TABLE MIS_TMP_BALANCE_RESULT AS
SELECT * FROM MIS_DM_BALANCE_RESULT
WHERE DATA_DATE = '${var:periodo}';

ALTER TABLE MIS_DM_BALANCE_RESULT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

INSERT INTO MIS_DM_BALANCE_RESULT
(COD_CONT,IDF_CTO,COD_ACCO_CENT,COD_OFFI,COD_NAR,COD_EXPENSE,COD_BLCE_STATUS,COD_CURRENCY,COD_ENTITY,COD_PRODUCT,COD_SUBPRODUCT,
COD_INFO_SOURCE,COD_TYP_FEE,IDF_CLI,TYP_DOC_ID,NUM_DOC_ID,NOM_NAME,NOM_LASTN,COD_RES_COUNT,COD_TYP_CLNT,COD_COND_CLNT,COD_ENG,VAL_SEX,COD_SEGMENT,DES_SEGMENT,COD_SUBSEGMENT,DES_SUBSEGMENT,IND_EMPL_GRUP,
DATE_CLNT_REG,DATE_CLNT_WITHDRAW,COD_MANAGER,DES_MANAGER,COD_SECTOR,DES_SECTOR,RATING_CLI,COD_GROUP_EC,COD_BCA_INT,COD_AMRT_MET,COD_RATE_TYPE,RATE_INT,DATE_ORIGIN,DATE_LAST_REV,DATE_PRX_REV,EXP_DATE,
FREQ_INT_PAY,COD_UNI_FREQ_INT_PAY,FRE_REV_INT,COD_UNI_FRE_REV_INT,AMRT_TRM,COD_UNI_AMRT_TRM,INI_AM,CUO_AM,CREDIT_LIM_AM,PREDEF_RATE_IND,PREDEF_RATE,IND_CHANNEL,COD_SELLER,DES_SELLER,
COD_GL_GROUP,DES_GL_GROUP,ACCOUNT_CONCEPT,COD_PL_ACC,DES_PL_ACC,COD_BLCE_PROD,DES_BLCE_PROD,COD_BUSINESS_LINE,DES_BUSINESS_LINE,IND_POOL,
EOPBAL_TOT,EOPBAL_CAP,EOPBAL_INT,AVGBAL_TOT,AVGBAL_CAP,AVGBAL_INT,PL,FTP,FTP_RESULT,
PL_TOT,EOPBAL_TOT_RPT,AVGBAL_TOT_RPT,PL_TOT_RPT,PL_RPT,FTP_RESULT_RPT,AVGBAL_TOT_YTD,PL_YTD,FTP_RESULT_YTD,PL_TOT_YTD,AVGBAL_TOT_YTD_RPT,PL_YTD_RPT,FTP_RESULT_YTD_RPT,PL_TOT_YTD_RPT,DES_OFFI,EXP_TYPE,EXP_FAMILY,COD_VALUE, COU_CAR_OFF, COD_CONV, DES_CONV, ID_ECO_GRO, COU_ECO_GRO, DES_ECO_GRO, IND_MUL_LAT, DES_MUL_LAT, COD_EXEC_CTO, COD_COVID_PORT, DATE_DISB, FIELD1_CTO, FIELD2_CTO, FIELD3_CTO, FIELD4_CTO, FIELD5_CTO, FIELD6_CTO, FIELD7_CTO, FIELD8_CTO, FIELD9_CTO, FIELD10_CTO, FIELD1_CLI, FIELD2_CLI, FIELD3_CLI, FIELD4_CLI, FIELD5_CLI, FIELD6_CLI, FIELD7_CLI, FIELD8_CLI, FIELD9_CLI, FIELD10_CLI)
PARTITION (DATA_DATE)
SELECT ISNULL(a.COD_CONT,b.COD_CONT) AS COD_CONT,IDF_CTO,ISNULL(a.COD_ACCO_CENT,b.COD_ACCO_CENT) AS COD_ACCO_CENT,COD_OFFI,COD_NAR,COD_EXPENSE,ISNULL(a.COD_BLCE_STATUS,b.COD_BLCE_STATUS) AS COD_BLCE_STATUS,ISNULL(a.COD_CURRENCY,b.COD_CURRENCY) AS COD_CURRENCY,ISNULL(a.COD_ENTITY,b.COD_ENTITY) AS COD_ENTITY,COD_PRODUCT,COD_SUBPRODUCT,
a.COD_INFO_SOURCE,COD_TYP_FEE,IDF_CLI,TYP_DOC_ID,NUM_DOC_ID,NOM_NAME,NOM_LASTN,COD_RES_COUNT,COD_TYP_CLNT,COD_COND_CLNT,COD_ENG,VAL_SEX,COD_SEGMENT,DES_SEGMENT,COD_SUBSEGMENT,DES_SUBSEGMENT,IND_EMPL_GRUP,
DATE_CLNT_REG,DATE_CLNT_WITHDRAW,COD_MANAGER,DES_MANAGER,COD_SECTOR,DES_SECTOR,RATING_CLI,COD_GROUP_EC,COD_BCA_INT,COD_AMRT_MET,COD_RATE_TYPE,RATE_INT,DATE_ORIGIN,DATE_LAST_REV,DATE_PRX_REV,EXP_DATE,
FREQ_INT_PAY,COD_UNI_FREQ_INT_PAY,FRE_REV_INT,COD_UNI_FRE_REV_INT,AMRT_TRM,COD_UNI_AMRT_TRM,INI_AM,CUO_AM,CREDIT_LIM_AM,PREDEF_RATE_IND,PREDEF_RATE,IND_CHANNEL,COD_SELLER,DES_SELLER,
ISNULL(a.COD_GL_GROUP,b.COD_GL_GROUP) AS COD_GL_GROUP,DES_GL_GROUP,ACCOUNT_CONCEPT,ISNULL(a.COD_PL_ACC,b.COD_PL_ACC) AS COD_PL_ACC,ISNULL(a.DES_PL_ACC,b.DES_PL_ACC) AS DES_PL_ACC,ISNULL(a.COD_BLCE_PROD,b.COD_BLCE_PROD) AS COD_BLCE_PROD,ISNULL(a.DES_BLCE_PROD,b.DES_BLCE_PROD) AS DES_BLCE_PROD,ISNULL(a.COD_BUSINESS_LINE,b.COD_BUSINESS_LINE) AS COD_BUSINESS_LINE,ISNULL(a.DES_BUSINESS_LINE,b.DES_BUSINESS_LINE) AS DES_BUSINESS_LINE,IND_POOL,
ISNULL(EOPBAL_TOT,0) AS EOPBAL_TOT,ISNULL(EOPBAL_CAP,0) AS EOPBAL_CAP,EOPBAL_INT,AVGBAL_TOT,CAST(CASE WHEN CAST(b.AVGBAL_CAP AS DECIMAL(30,2)) IS NOT NULL THEN b.AVGBAL_CAP ELSE a.AVGBAL_CAP END AS DECIMAL(30,2)) AS AVGBAL_CAP,AVGBAL_INT,PL,FTP,FTP_RESULT,
PL_TOT,EOPBAL_TOT_RPT, CAST(CASE WHEN b.AVGBAL_TOT_RPT IS NOT NULL THEN CAST(b.AVGBAL_TOT_RPT AS DECIMAL(30,2)) ELSE a.AVGBAL_TOT_RPT END AS DECIMAL(30,2)) AS AVGBAL_TOT_RPT,PL_TOT_RPT,PL_RPT,FTP_RESULT_RPT,AVGBAL_TOT_YTD,PL_YTD,FTP_RESULT_YTD,PL_TOT_YTD,AVGBAL_TOT_YTD_RPT,PL_YTD_RPT,FTP_RESULT_YTD_RPT,PL_TOT_YTD_RPT,DES_OFFI,EXP_TYPE,EXP_FAMILY,COD_VALUE, COU_CAR_OFF, COD_CONV, DES_CONV, ID_ECO_GRO, COU_ECO_GRO, DES_ECO_GRO, IND_MUL_LAT, DES_MUL_LAT, COD_EXEC_CTO, COD_COVID_PORT, DATE_DISB, FIELD1_CTO, FIELD2_CTO, FIELD3_CTO, FIELD4_CTO, FIELD5_CTO, FIELD6_CTO, FIELD7_CTO, FIELD8_CTO, FIELD9_CTO, FIELD10_CTO, FIELD1_CLI, FIELD2_CLI, FIELD3_CLI, FIELD4_CLI, FIELD5_CLI, FIELD6_CLI, FIELD7_CLI, FIELD8_CLI, FIELD9_CLI, FIELD10_CLI, DATA_DATE
FROM MIS_TMP_BALANCE_RESULT a 
LEFT JOIN MIS_TMP_LOAD_AVGBAL_CONC b
on a.COD_GL_GROUP = b.COD_GL_GROUP AND a.COD_CONT = b.COD_CONT AND a.COD_BLCE_STATUS = b.COD_BLCE_STATUS AND a.COD_ENTITY = b.COD_ENTITY AND a.COD_CURRENCY = b.COD_CURRENCY AND ISNULL(a.COD_ACCO_CENT,'0') = ISNULL(b.COD_ACCO_CENT,'0')
WHERE DATA_DATE = '${var:periodo}'
;

------------- Validaciones de cierre -------------

--- Creación de tabla temporal para almacenar resultados ---
DROP TABLE IF EXISTS MIS_TMP_CLOSING_VALIDATION;
CREATE TABLE MIS_TMP_CLOSING_VALIDATION
(COD_VALID STRING, VALIDATION_FIELD STRING);

DROP TABLE IF EXISTS MIS_TMP_COD_VALIDATION;
CREATE TABLE MIS_TMP_COD_VALIDATION
(COD_VALID STRING, DESCRIPTION STRING);

--- Inserción de códigos de validación de cierre ---
INSERT INTO MIS_TMP_COD_VALIDATION VALUES ('001', 'Combinación Producto de Balance, Estado de Balance y Moneda sin Parametrizar en Tabla de Métodos de TTI');
INSERT INTO MIS_TMP_COD_VALIDATION VALUES ('002', 'Producto de Balance sin Parametrizar en Jerarquía de Producto a Último Nivel');
INSERT INTO MIS_TMP_COD_VALIDATION VALUES ('003', 'Cuenta P&G sin Parametrizar en Jerarquía de Cuenta a Último Nivel');

--COMPUTE INCREMENTAL STATS MIS_DM_BALANCE_RESULT partition (data_date = '${var:periodo}');

-------------------- Verificación de Productos Balance a los que no se calculó TTI --------------------
INSERT INTO MIS_TMP_CLOSING_VALIDATION (COD_VALID, VALIDATION_FIELD)
SELECT '001' AS COD_VALID, CONCAT(COD_BLCE_PROD, " |", COD_BLCE_STATUS, "| ", COD_CURRENCY) AS CAMPOS 
FROM 
    (SELECT DISTINCT SALIDA_DM.COD_BLCE_PROD, SALIDA_DM.COD_BLCE_STATUS , SALIDA_DM.COD_CURRENCY
    FROM
        (SELECT DM.COD_BLCE_PROD, DM.COD_BLCE_STATUS, DM.COD_CURRENCY 
        FROM MIS_DM_BALANCE_RESULT DM
        WHERE DM.DATA_DATE='${var:periodo}' AND DM.IND_POOL IS NULL) SALIDA_DM
    LEFT JOIN 
        MIS_PAR_TTI_ENG TTI_ENG  
        ON TTI_ENG.COD_BLCE_PROD=SALIDA_DM.COD_BLCE_PROD AND TTI_ENG.COD_BLCE_STATUS=SALIDA_DM.COD_BLCE_STATUS AND TTI_ENG.COD_CURRENCY=SALIDA_DM.COD_CURRENCY
    WHERE TTI_ENG.COD_BLCE_PROD IS NULL) AS VALIDATION_TTI;

-------------------- Verificación de Producto Balance a último Nivel de Jerarquía --------------------
INSERT INTO MIS_TMP_CLOSING_VALIDATION (COD_VALID, VALIDATION_FIELD)
SELECT '002' AS COD_VALID, VALIDATION_BLCE_PROD.COD_BLCE_PROD
FROM
    (SELECT DISTINCT(SALIDA_DM.COD_BLCE_PROD) COD_BLCE_PROD
    FROM
        (SELECT DM.COD_BLCE_PROD 
        FROM MIS_DM_BALANCE_RESULT DM
        WHERE DM.DATA_DATE='${var:periodo}') SALIDA_DM
    LEFT JOIN
        MIS_HIERARCHY_BLCE_PROD PROD
        ON SALIDA_DM.COD_BLCE_PROD = PROD.COD_LEVEL_08
    WHERE PROD.COD_LEVEL_06 IS NULL) AS VALIDATION_BLCE_PROD; 

-------------------- Verificación de Cuenta P&G a último Nivel de Jerarquía --------------------
INSERT INTO MIS_TMP_CLOSING_VALIDATION (COD_VALID, VALIDATION_FIELD)
SELECT '003' AS COD_VALID, VALIDATION_PL_ACC.COD_PL_ACC
FROM
    (SELECT DISTINCT(SALIDA_DM.COD_PL_ACC) COD_PL_ACC
    FROM
        (SELECT DM.* 
        FROM MIS_DM_BALANCE_RESULT DM
        WHERE DM.DATA_DATE='${var:periodo}') SALIDA_DM
    LEFT JOIN
        MIS_HIERARCHY_PL_ACC ACC
        ON SALIDA_DM.COD_PL_ACC = ACC.COD_LEVEL_08
    WHERE ACC.COD_LEVEL_10 IS NULL) AS VALIDATION_PL_ACC; 

-------------------- Llenado de la tabla final de validaciones de cierre --------------------

--COMPUTE STATS MIS_TMP_COD_VALIDATION;
--COMPUTE STATS MIS_TMP_CLOSING_VALIDATION;

TRUNCATE TABLE MIS_VAL_CLOSE;
INSERT INTO MIS_VAL_CLOSE
SELECT COD.DESCRIPTION, VAL.VALIDATION_FIELD
FROM MIS_TMP_CLOSING_VALIDATION VAL
INNER JOIN MIS_TMP_COD_VALIDATION COD
ON VAL.COD_VALID = COD.COD_VALID;

TRUNCATE TABLE MIS_VAL_CLOSE_DUP;

insert into mis_val_close_dup
select 'MIS_PAR_REL_CAF_OPER', cod_entity, cod_product, cod_subproduct, cod_currency, cod_blce_status, cod_value, 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cast(num as int) from(
select cod_entity, cod_product, cod_subproduct, cod_currency, cod_blce_status, cod_value, count(*) as num from mis_par_rel_caf_oper
group by cod_entity, cod_product, cod_subproduct, cod_currency, cod_blce_status, cod_value
having count(*) > 1
)a;

insert into mis_val_close_dup
select 'MIS_PAR_REL_CAF_ACC', cod_entity, 'N/A', 'N/A', cod_currency, 'N/A', 'N/A', cod_gl, 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cast(num as int) from(
select cod_entity, cod_currency, cod_gl, count(*) as num from mis_par_rel_caf_acc
group by cod_entity, cod_currency, cod_gl
having count(*) > 1
)a;

insert into mis_val_close_dup
select 'MIS_PAR_REL_BP_ACC', cod_entity, 'N/A', 'N/A', cod_currency, 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cod_gl_group, 'N/A', cast(num as int) from(
select cod_entity, cod_currency, cod_gl_group, count(*) as num from mis_par_rel_bp_acc
group by cod_entity, cod_currency, cod_gl_group
having count(*) > 1
)a;

insert into mis_val_close_dup
select 'MIS_PAR_REL_BP_OPER', cod_entity, cod_product, cod_subproduct, cod_currency, 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cod_gl_group, 'N/A', cast(num as int) from(
select cod_entity, cod_product, cod_subproduct, cod_currency, cod_gl_group, count(*) as num from mis_par_rel_bp_oper
group by cod_entity, cod_product, cod_subproduct, cod_currency, cod_gl_group
having count(*) > 1
)a;

insert into mis_val_close_dup
select 'MIS_PAR_REL_PL_ACC', cod_entity, 'N/A', 'N/A', cod_currency, 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cod_gl_group, 'N/A', cast(num as int) from(
select cod_entity, cod_currency, cod_gl_group, count(*) as num from mis_par_rel_pl_acc
group by cod_entity, cod_currency, cod_gl_group
having count(*) > 1
)a;

insert into mis_val_close_dup
select 'MIS_PAR_REL_BL_ACC', cod_entity, 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cod_gl_group, 'N/A', cast(num as int) from(
select cod_entity, cod_gl_group, count(*) as num from mis_par_rel_bl_acc
group by cod_entity, cod_gl_group
having count(*) > 1
)a;

insert into mis_val_close_dup
select 'MIS_PAR_REL_BL_OPER', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', 'N/A', cod_typ_clnt, 'N/A', cod_blce_prod, cast(num as int) from(
select cod_typ_clnt, cod_blce_prod, count(*) as num from mis_par_rel_bl_oper
group by cod_typ_clnt, cod_blce_prod
having count(*) > 1
)a;


----Eliminación de tablas temporales
--TRUNCATE TABLE IF EXISTS MIS_TMP_DM_BALANCE_RESULT;
--DROP TABLE IF EXISTS MIS_TMP_DM_BALANCE_RESULT;
--TRUNCATE TABLE IF EXISTS MIS_TMP_DM_BALANCE_DT;
--DROP TABLE IF EXISTS MIS_TMP_DM_BALANCE_DT;