--------------------------------------------------------------- MIS_APR_ASSETS ------------------------------------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};

----Carga de tablas load
TRUNCATE TABLE IF EXISTS MIS_LOAD_CAINFOPER; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/CAINFOPER.CSV' INTO TABLE MIS_LOAD_CAINFOPER;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INT_OPE; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/INT_OPE.CSV' INTO TABLE MIS_LOAD_INT_OPE;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INVERSIONES; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/INVERSIONES.CSV' INTO TABLE MIS_LOAD_INVERSIONES;
TRUNCATE TABLE IF EXISTS MIS_LOAD_INFO_TRABAJO; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/INFO_TRABAJO.CSV' INTO TABLE MIS_LOAD_INFO_TRABAJO;
TRUNCATE TABLE IF EXISTS MIS_LOAD_LISTA_MOV; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/LISTA_MOV.CSV' INTO TABLE MIS_LOAD_LISTA_MOV;
TRUNCATE TABLE IF EXISTS MIS_LOAD_TARENTE; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/TARENTE.CSV' INTO TABLE MIS_LOAD_TARENTE;
TRUNCATE TABLE IF EXISTS MIS_LOAD_TCS; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/TCS.CSV' INTO TABLE MIS_LOAD_TCS;
TRUNCATE TABLE IF EXISTS MIS_LOAD_LCS; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/LCS.CSV' INTO TABLE MIS_LOAD_LCS;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MV_A2; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/MV_A2.CSV' INTO TABLE MIS_LOAD_MV_A2;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MV_BANX; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/MV_BANX.CSV' INTO TABLE MIS_LOAD_MV_BANX;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MV_MC; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/MV_MC.CSV' INTO TABLE MIS_LOAD_MV_MC;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MV_ONE; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/MV_ONE.CSV' INTO TABLE MIS_LOAD_MV_ONE;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MV_A1; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/MV_A1.CSV' INTO TABLE MIS_LOAD_MV_A1;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MV_DEBT; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/MV_DEBT.CSV' INTO TABLE MIS_LOAD_MV_DEBT;
TRUNCATE TABLE IF EXISTS MIS_LOAD_TARJETAS_ENTREGADAS; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/TARJETAS_ENTREGADAS.CSV' INTO TABLE MIS_LOAD_TARJETAS_ENTREGADAS;
TRUNCATE TABLE IF EXISTS MIS_LOAD_TARJETAS_SUBPRODUCTO; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/TARJETAS_SUBPRODUCTO.CSV' INTO TABLE MIS_LOAD_TARJETAS_SUBPRODUCTO;

----Tarjetas Adicionales
TRUNCATE TABLE IF EXISTS MIS_LOAD_TARJETAS_ADICIONALES; 
LOAD DATA INPATH '${var:ruta_fuentes_activos}/TarjetasAdicionales.csv' INTO TABLE MIS_LOAD_TARJETAS_ADICIONALES;

--- Limpieza de partición ----
ALTER TABLE MIS_APR_ASSETS
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

--- Tabla temporal que une los MV de activos ---
TRUNCATE TABLE IF EXISTS MIS_TMP_LOAD_MV_ASS;
DROP TABLE IF EXISTS MIS_TMP_LOAD_MV_ASS;
CREATE TABLE MIS_TMP_LOAD_MV_ASS AS 
SELECT * FROM MIS_LOAD_MV_A2 UNION ALL 
SELECT * FROM MIS_LOAD_MV_BANX UNION ALL 
SELECT * FROM MIS_LOAD_MV_MC UNION ALL 
SELECT * FROM MIS_LOAD_MV_ONE UNION ALL 
SELECT * FROM MIS_LOAD_MV_A1 UNION ALL 
SELECT * FROM MIS_LOAD_MV_DEBT;

--COMPUTE INCREMENTAL STATS MIS_TMP_LOAD_MV_ASS;

----Aprovisionamiento de Activos Capital
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PREST' AS COD_CONT, TRIM(a.OPERACION_CTA_CLIENTE) AS IDF_CTO, NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    CASE TRIM(a.ESTATUS_OPER) 
        WHEN 'VIGENTE' THEN '1'
        WHEN 'VENCIDO' THEN '2'
        WHEN 'COBRO JUDICIAL' THEN '3' 
        WHEN 'NON ACCRUAL' THEN '4'    --Non-Accrual sólo aplica para intereses, por tanto la cartera se carga como saldo vencido
    END AS COD_BLCE_STATUS, 'CAP' AS COD_VALUE, 
    CASE TRIM(a.MONEDA) 
        WHEN '0-COLON' THEN 'CRC'
        WHEN '1-DOLAR' THEN 'USD' 
        END AS COD_CURRENCY, 
    IF(TRIM(a.EMPRESA) LIKE '%1', '4', '') AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), TRIM(a.T_OPERACION)) AS COD_PRODUCT, TRIM(SPLIT_PART(a.DESTINO_CREDITO, '-', 1)) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    a.SALDO_ACTUAL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL, 
    'CAINFOPER' AS COD_INFO_SOURCE 
FROM MIS_LOAD_CAINFOPER a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.OPERACION_CTA_CLIENTE);

----Aprovisionamiento de Activos Intereses
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PREST' AS COD_CONT, TRIM(a.OPERACION_CTA_CLIENTE) AS IDF_CTO, NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    CASE TRIM(a.ESTATUS_OPER) 
        WHEN 'VIGENTE' THEN '1'
        WHEN 'VENCIDO' THEN '2'
        WHEN 'COBRO JUDICIAL' THEN '3' 
        WHEN 'NON ACCRUAL' THEN '4' 
    END AS COD_BLCE_STATUS, 'INT' AS COD_VALUE, 
    CASE TRIM(a.MONEDA) 
        WHEN '0-COLON' THEN 'CRC'
        WHEN '1-DOLAR' THEN 'USD' 
    END AS COD_CURRENCY, 
    IF(TRIM(a.EMPRESA) LIKE '%1', '4', '') AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), TRIM(a.T_OPERACION)) AS COD_PRODUCT, TRIM(SPLIT_PART(a.DESTINO_CREDITO, '-', 1)) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    a.MONTO_INT AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL, 
    'CAINFOPER' AS COD_INFO_SOURCE 
FROM MIS_LOAD_CAINFOPER a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.OPERACION_CTA_CLIENTE);


--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='CAINFOPER');

----Aprovisionamiento de Activos Contrato
INSERT INTO MIS_APR_CONTRACT_DT
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='CAINFOPER') 
SELECT
    TRIM(a.OPERACION_CTA_CLIENTE) AS IDF_CTO, IF(TRIM(a.EMPRESA) LIKE '%1', '4', '') AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), TRIM(a.T_OPERACION)) AS COD_PRODUCT, TRIM(SPLIT_PART(a.DESTINO_CREDITO, '-', 1)) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CASE TRIM(a.MONEDA) 
        WHEN '0-COLON' THEN 'CRC'
        WHEN '1-DOLAR' THEN 'USD' 
    END AS COD_CURRENCY, 
    TRIM(a.ENTE_COBIS) AS IDF_CLI, NULL AS COD_ACCO_CENT, CAST(a.OFICINA_ORIGIN AS string) AS COD_OFFI,
    CAST(a.DIAS_BASE AS string) AS COD_BCA_INT, a.DIST_PAGO AS COD_AMRT_MET, 
    CASE  
        WHEN TRIM(a.TTASA) IN ('ATAFID', 'ATAFIC') AND PREV.COD_RATE_TYPE ='V' AND TRIM(a.SENALIZACION) = 'TRMPOLIDES' THEN 'V'
        WHEN TRIM(a.TTASA) IN ('ATAFID', 'ATAFIC') THEN 'F' 
        WHEN UPPER(TRIM(a.T_CAMBIO_TASA)) = 'PERIODICO' THEN 'V'
        WHEN UPPER(TRIM(a.T_CAMBIO_TASA)) = 'NO REVISA' THEN 'F'
        WHEN UPPER(TRIM(a.T_CAMBIO_TASA)) = 'ESCALONADA' 
        AND TRIM(a.FECHA_ULT_R) <> '' THEN 'V'
        WHEN UPPER(TRIM(a.T_CAMBIO_TASA)) = 'ESCALONADA' 
        AND (TRIM(a.FECHA_ULT_R) = '' OR TO_TIMESTAMP(a.FECHA_ULT_R,  'dd/MM/yyyy') < TO_TIMESTAMP(a.F_DESEMBOLSO,  'dd/MM/yyyy')) THEN 'F'
        ELSE 'V' END AS COD_RATE_TYPE, 
    CAST(ROUND(a.TASA/100, 10) AS decimal(30, 10)) AS RATE_INT,
    FROM_TIMESTAMP(TO_TIMESTAMP(a.F_VALOR, 'dd/MM/yyyy'), 'yyyyMMdd') AS DATE_ORIGIN,
    CONCAT(SPLIT_PART(a.FECHA_ULT_R, '/', 3), SPLIT_PART(a.FECHA_ULT_R, '/', 2), SPLIT_PART(a.FECHA_ULT_R, '/', 1)) AS DATE_LAST_REV, 
    CASE WHEN a.FECHA_ULT_R = a.FPROX_REAJ AND TRIM(a.FECHA_ULT_R) != '' THEN
        FROM_TIMESTAMP(ADD_MONTHS(TO_TIMESTAMP(a.FECHA_ULT_R, 'dd/MM/yyyy'), a.PERIODO_REAJ), 'yyyyMMdd')
    ELSE CONCAT(SPLIT_PART(a.FPROX_REAJ, '/', 3), SPLIT_PART(a.FPROX_REAJ, '/', 2), SPLIT_PART(a.FPROX_REAJ, '/', 1)) END AS DATE_PRX_REV, 
    CONCAT(SPLIT_PART(a.F_VECTO_OP, '/', 3), SPLIT_PART(a.F_VECTO_OP, '/', 2), SPLIT_PART(a.F_VECTO_OP, '/', 1)) AS EXP_DATE,
    NULL AS FREQ_INT_PAY, a.FREQ_INT AS COD_UNI_FREQ_INT_PAY, a.PERIODO_REAJ AS FRE_REV_INT, 'M' AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, a.FREQ_CAP AS COD_UNI_AMRT_TRM, a.MONTO_INICIAL AS INI_AM, a.CUOTA AS CUO_AM,
    a.MONTO_APROBADO_LCR AS CREDIT_LIM_AM, NULL AS PREDEF_RATE_IND, CAST(ROUND(a.SPREAD_INT/100, 10) AS decimal(30, 10)) AS PREDEF_RATE, 
    NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV, 
    TRIM(a.OFICIAL) AS COD_EXEC_CTO, IF(UPPER(TRIM(a.SENALIZACION)) LIKE '%COVID%', 'Y', 'N') AS COD_COVID_PORT, 
    FROM_TIMESTAMP(TO_TIMESTAMP(a.F_DESEMBOLSO, 'dd/MM/yyyy'), 'yyyyMMdd') AS DATE_DISB, 
    NULL AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, NULL AS COD_PROG_CARD, NULL AS DES_PROG_CARD
FROM MIS_LOAD_CAINFOPER a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.OPERACION_CTA_CLIENTE)
LEFT JOIN (
    SELECT TMP.IDF_CTO, MIN(TMP.COD_RATE_TYPE) COD_RATE_TYPE 
    FROM MIS_APR_CONTRACT_DT TMP 
    WHERE TMP.DATA_DATE = FROM_TIMESTAMP(DATE_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1), 'yyyyMMdd') AND TMP.COD_ENTITY='4' 
    GROUP BY TMP.IDF_CTO) PREV
ON TRIM(a.OPERACION_CTA_CLIENTE) = PREV.IDF_CTO 
;

----Aprovisionamiento de Activos Resultados para Cartera
INSERT INTO MIS_APR_ASSETS
PARTITION (DATA_DATE='${var:periodo}')
--Se agrupan los saldos de la cartera para consolidar los resultados por contrato del dia de ejecucion, y acumularlos con los resultados del día anterior
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, MAX(a.COD_SUBPRODUCT) AS COD_SUBPRODUCT, a.COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CAST(ROUND(SUM(a.PL), 10) AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    SELECT 'PREST' AS COD_CONT, TRIM(a.OPERACION) AS IDF_CTO, 
        RPAD(TRIM(a.CUENTA_CONTABLE), 16, '0') AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        TRIM(A.ESTADO) AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE, 
        CASE 
            WHEN TRIM(a.CUENTA_CONTABLE) != '' THEN 'CRC'
            WHEN TRIM(a.MONEDA) = '0' THEN 'CRC'
            WHEN TRIM(a.MONEDA) = '1' THEN 'USD'
            END AS COD_CURRENCY, '4' AS COD_ENTITY, 
        COALESCE(TRIM(SPE.COD_PRODUCT), TRIM(a.TIPO_DE_PRODUCTO)) AS COD_PRODUCT, '' AS COD_SUBPRODUCT, 
        NULL AS COD_ACT_TYPE, 
        IF(TRIM(a.CUENTA_CONTABLE) != '', a.MONTO_MN * -1, a.MONTO * -1) AS PL, 'INT_OPE' AS COD_INFO_SOURCE 
    FROM MIS_LOAD_INT_OPE a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = TRIM(a.OPERACION)
    WHERE TRIM(a.TIPO_DE_TRANSACCION) IN ('PRV', '*PRV')
    AND TRIM(a.ESTADO_TRANSACCION) = 'CON'
    AND TRIM(a.CONCEPTO) = 'INT'
    AND TRIM(a.ESTADO) IN ('1', '2') 
    UNION ALL 
    --Intereses por devengar de la cartera registrados el dia anterior
    SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
        a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
        a.PL, a.COD_INFO_SOURCE
    FROM MIS_APR_ASSETS a
    WHERE a.COD_VALUE = 'RSL' AND a.COD_INFO_SOURCE = 'INT_OPE' AND  
        DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) > 1 AND 
        TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd') = DAYS_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1) 
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE; 


----Aprovisionamiento de Inversiones capital
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
    CAST(SUM(a.EOPBAL_CAP) AS decimal(30, 10)) AS EOPBAL_CAP, CAST(SUM(a.EOPBAL_INT) AS decimal(30, 10)) AS EOPBAL_INT, 
    CAST(SUM(a.AVGBAL_CAP) AS decimal(30, 10)) AS AVGBAL_CAP, CAST(SUM(a.AVGBAL_INT) AS decimal(30, 10)) AS AVGBAL_INT, 
    CAST(SUM(a.PL) * -1 AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    SELECT 'PREST' AS COD_CONT, CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS IDF_CTO, 
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '1' AS COD_BLCE_STATUS, 'CAP' AS COD_VALUE,
        CASE TRIM(a.MONEDA)
            WHEN '1' THEN 'CRC'
            WHEN '2' THEN 'USD'
            END AS COD_CURRENCY,
        CASE TRIM(a.HOMOLOGACION) 
            WHEN 'Banco' THEN '4'
            WHEN 'Trading Book Banco' THEN '4'
            WHEN 'Davivienda Corredora de Seguros' THEN '9'
            WHEN 'Davivienda  Seguros' THEN '21'
            END AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(TRIM(a.TIPO), IF(TRIM(a.HOMOLOGACION)='Trading Book Banco', '_TB', ''))) AS COD_PRODUCT, 
        CONCAT(TRIM(a.EMISOR), IF(TRIM(a.EMISOR)='G', CONCAT('_', STRLEFT(TRIM(a.CIA), 3)), ''), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS COD_SUBPRODUCT, 
        NULL AS COD_ACT_TYPE, 
        CASE TRIM(a.TIPO)
            WHEN 'RTFIJ' THEN a.COSTO
            WHEN 'RECO' THEN a.VALOR_MERCADO
            WHEN 'FOINV' THEN a.VALOR_MERCADO
            END AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
        'INVERSIONES' AS COD_INFO_SOURCE
    FROM MIS_LOAD_INVERSIONES a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', ''))
    WHERE UPPER(TRIM(a.TIPO)) NOT IN ('COMPRANOLIQ', 'VENTANOLIQ') AND TRIM(a.HOMOLOGACION) IN ('Banco', 'Trading Book Banco')
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE;

----Aprovisionamiento de Inversiones intereses
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE,
    CAST(SUM(a.EOPBAL_CAP) AS decimal(30, 10)) AS EOPBAL_CAP, CAST(SUM(a.EOPBAL_INT) AS decimal(30, 10)) AS EOPBAL_INT, 
    CAST(SUM(a.AVGBAL_CAP) AS decimal(30, 10)) AS AVGBAL_CAP, CAST(SUM(a.AVGBAL_INT) AS decimal(30, 10)) AS AVGBAL_INT, 
    CAST(SUM(a.PL) * -1 AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM ( 
    SELECT 'PREST' AS COD_CONT, CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS IDF_CTO, 
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '1' AS COD_BLCE_STATUS, 'INT' AS COD_VALUE,
        CASE TRIM(a.MONEDA)
            WHEN '1' THEN 'CRC'
            WHEN '2' THEN 'USD'
            END AS COD_CURRENCY,
        CASE TRIM(a.HOMOLOGACION) 
            WHEN 'Banco' THEN '4'
            WHEN 'Trading Book Banco' THEN '4'
            WHEN 'Davivienda Corredora de Seguros' THEN '9'
            WHEN 'Davivienda  Seguros' THEN '21'
            END AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(TRIM(a.TIPO), IF(TRIM(a.HOMOLOGACION)='Trading Book Banco', '_TB', ''))) AS COD_PRODUCT, 
        CONCAT(TRIM(a.EMISOR), IF(TRIM(a.EMISOR)='G', CONCAT('_', STRLEFT(TRIM(a.CIA), 3)), ''), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS COD_SUBPRODUCT, 
        NULL AS COD_ACT_TYPE, 
        a.INTERESES AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
        'INVERSIONES' AS COD_INFO_SOURCE
    FROM MIS_LOAD_INVERSIONES a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', ''))
    WHERE UPPER(TRIM(a.TIPO)) NOT IN ('COMPRANOLIQ', 'VENTANOLIQ') AND TRIM(a.HOMOLOGACION) IN ('Banco', 'Trading Book Banco')
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE;

----Aprovisionamiento de Inversiones Primas y Descuentos
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}')
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
    CAST(SUM(a.EOPBAL_CAP) AS decimal(30, 10)) AS EOPBAL_CAP, CAST(SUM(a.EOPBAL_INT) AS decimal(30, 10)) AS EOPBAL_INT, 
    CAST(SUM(a.AVGBAL_CAP) AS decimal(30, 10)) AS AVGBAL_CAP, CAST(SUM(a.AVGBAL_INT) AS decimal(30, 10)) AS AVGBAL_INT, 
    CAST(SUM(a.PL) * -1 AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM ( 
    SELECT 'PREST' AS COD_CONT, CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS IDF_CTO, 
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '1' AS COD_BLCE_STATUS, IF(a.PRIMAS_ACUMULADAS < 0, 'PRI', 'DES') AS COD_VALUE,
        CASE TRIM(a.MONEDA)
            WHEN '1' THEN 'CRC'
            WHEN '2' THEN 'USD'
            END AS COD_CURRENCY,
        CASE TRIM(a.HOMOLOGACION) 
            WHEN 'Banco' THEN '4'
            WHEN 'Trading Book Banco' THEN '4'
            WHEN 'Davivienda Corredora de Seguros' THEN '9'
            WHEN 'Davivienda  Seguros' THEN '21'
            END AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(TRIM(a.TIPO), IF(TRIM(a.HOMOLOGACION)='Trading Book Banco', '_TB', ''))) AS COD_PRODUCT, 
        CONCAT(TRIM(a.EMISOR), IF(TRIM(a.EMISOR)='G', CONCAT('_', STRLEFT(TRIM(a.CIA), 3)), ''), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS COD_SUBPRODUCT, 
        NULL AS COD_ACT_TYPE, 
        a.PRIMAS_ACUMULADAS AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
        'INVERSIONES' AS COD_INFO_SOURCE
    FROM MIS_LOAD_INVERSIONES a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', ''))
    WHERE UPPER(TRIM(a.TIPO)) NOT IN ('COMPRANOLIQ', 'VENTANOLIQ') AND TRIM(a.HOMOLOGACION) IN ('Banco', 'Trading Book Banco') AND TRIM(a.TIPO) != 'RECO' 
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE;

----Aprovisionamiento de Inversiones ORI
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE,
    CAST(SUM(a.EOPBAL_CAP) AS decimal(30, 10)) AS EOPBAL_CAP, CAST(SUM(a.EOPBAL_INT) AS decimal(30, 10)) AS EOPBAL_INT, 
    CAST(SUM(a.AVGBAL_CAP) AS decimal(30, 10)) AS AVGBAL_CAP, CAST(SUM(a.AVGBAL_INT) AS decimal(30, 10)) AS AVGBAL_INT, 
    CAST(SUM(a.PL) * -1 AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    SELECT 'PREST' AS COD_CONT, CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS IDF_CTO, 
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '1' AS COD_BLCE_STATUS, 'ORI' AS COD_VALUE,
        CASE TRIM(a.MONEDA)
            WHEN '1' THEN 'CRC'
            WHEN '2' THEN 'USD'
            END AS COD_CURRENCY,
        CASE TRIM(a.HOMOLOGACION) 
            WHEN 'Banco' THEN '4'
            WHEN 'Trading Book Banco' THEN '4'
            WHEN 'Davivienda Corredora de Seguros' THEN '9'
            WHEN 'Davivienda  Seguros' THEN '21'
            END AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(TRIM(a.TIPO), IF(TRIM(a.HOMOLOGACION)='Trading Book Banco', '_TB', ''))) AS COD_PRODUCT, 
        CONCAT(TRIM(a.EMISOR), IF(TRIM(a.EMISOR)='G', CONCAT('_', STRLEFT(TRIM(a.CIA), 3)), ''), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS COD_SUBPRODUCT, 
        NULL AS COD_ACT_TYPE, 
        a.DIFERENCIA AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
        'INVERSIONES' AS COD_INFO_SOURCE
    FROM MIS_LOAD_INVERSIONES a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', ''))
    WHERE UPPER(TRIM(a.TIPO)) NOT IN ('COMPRANOLIQ', 'VENTANOLIQ') AND TRIM(a.HOMOLOGACION) IN ('Banco', 'Trading Book Banco')
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE;


--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='INVERSIONES');

----Aprovisionamiento de Contratos Inversiones
INSERT INTO MIS_APR_CONTRACT_DT 
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='INVERSIONES') 
SELECT IDF_CTO, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_CURRENCY, 
    IDF_CLI, COD_ACCO_CENT, COD_OFFI, COD_BCA_INT, COD_AMRT_MET, 
    COD_RATE_TYPE, MAX(RATE_INT), MIN(DATE_ORIGIN), DATE_LAST_REV, DATE_PRX_REV, MAX(EXP_DATE), 
    FREQ_INT_PAY, COD_UNI_FREQ_INT_PAY, FRE_REV_INT, COD_UNI_FRE_REV_INT, AMRT_TRM, COD_UNI_AMRT_TRM, 
    MAX(INI_AM), CUO_AM, CREDIT_LIM_AM, PREDEF_RATE_IND, PREDEF_RATE, IND_CHANNEL, COD_TYP_LIC,
    COU_CAR_OFF, COD_CONV, COD_EXEC_CTO, COD_COVID_PORT, DATE_DISB,
    CARD_NUMBER, FIELD1_CTO, FIELD2_CTO, FIELD3_CTO, FIELD4_CTO, 
    FIELD5_CTO, FIELD6_CTO, FIELD7_CTO, FIELD8_CTO, FIELD9_CTO, FIELD10_CTO, NULL AS COD_PROG_CARD, NULL AS DES_PROG_CARD
FROM (
SELECT CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS IDF_CTO,
    CASE TRIM(a.HOMOLOGACION) 
        WHEN 'Banco' THEN '4'
        WHEN 'Trading Book Banco' THEN '4'
        WHEN 'Davivienda Corredora de Seguros' THEN '9'
        WHEN 'Davivienda  Seguros' THEN '21'
        END AS COD_ENTITY,
    COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(TRIM(a.TIPO), IF(TRIM(a.HOMOLOGACION)='Trading Book Banco', '_TB', ''))) AS COD_PRODUCT, 
    CONCAT(TRIM(a.EMISOR), IF(TRIM(a.EMISOR)='G', CONCAT('_', STRLEFT(TRIM(a.CIA), 3)), ''), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', '')) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 
    CASE TRIM(a.MONEDA)
        WHEN '1' THEN 'CRC'
        WHEN '2' THEN 'USD'
        END AS COD_CURRENCY,
    TRIM(a.EMISOR) AS IDF_CLI,
    NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_BCA_INT, NULL AS COD_AMRT_MET, 
    NULL AS COD_RATE_TYPE, CAST((ROUND(a.T_FACIAL/100, 10)) AS decimal(30, 10)) AS RATE_INT,
    (FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA_COMPRA, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV,
    (FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA_VENCIMIENTO, 'dd/MM/yyyy'), 'yyyyMMdd')) AS EXP_DATE,
    1 AS FREQ_INT_PAY, 'D' AS COD_UNI_FREQ_INT_PAY, NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT, NULL AS AMRT_TRM, NULL AS COD_UNI_AMRT_TRM,
    (a.FACIAL) AS INI_AM, NULL AS CUO_AM, NULL AS CREDIT_LIM_AM, NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, 
    NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV, 
    NULL AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, 
    FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA_COMPRA, 'dd/MM/yyyy'), 'yyyyMMdd') AS DATE_DISB,
    NULL AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO 
FROM MIS_LOAD_INVERSIONES a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = CONCAT(TRIM(a.OPERACION), IF(TRIM(a.GARANTIA)!='' OR a.DETGARANTIA IS NOT NULL, '_G', ''))
WHERE UPPER(TRIM(a.TIPO)) NOT IN ('COMPRANOLIQ', 'VENTANOLIQ') AND TRIM(a.HOMOLOGACION) IN ('Banco', 'Trading Book Banco')
) INV
GROUP BY IDF_CTO, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_CURRENCY, 
    IDF_CLI, COD_ACCO_CENT, COD_OFFI, COD_BCA_INT, COD_AMRT_MET, 
    COD_RATE_TYPE, DATE_LAST_REV, DATE_PRX_REV, 
    FREQ_INT_PAY, COD_UNI_FREQ_INT_PAY, FRE_REV_INT, COD_UNI_FRE_REV_INT, AMRT_TRM, COD_UNI_AMRT_TRM, 
    CUO_AM, CREDIT_LIM_AM, PREDEF_RATE_IND, PREDEF_RATE, IND_CHANNEL, COD_TYP_LIC, COU_CAR_OFF, COD_CONV, 
    COD_EXEC_CTO, COD_COVID_PORT, DATE_DISB,
    CARD_NUMBER, FIELD1_CTO, FIELD2_CTO, FIELD3_CTO, FIELD4_CTO, 
    FIELD5_CTO, FIELD6_CTO, FIELD7_CTO, FIELD8_CTO, FIELD9_CTO, FIELD10_CTO;


----Aprovisionamiento de Tarjetas Capital
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PREST' AS COD_CONT, 
    TRIM(a.TA_ID_OPERACION) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL,
    NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    CASE 
        WHEN TRIM(a.TA_INDICA_INTRA_EXTRA) != '' THEN '1' 
        WHEN TRIM(a.TA_ESTADO_OP) = '1' THEN '1'
        WHEN TRIM(a.TA_ESTADO_OP) IN ('2', '3', '4') THEN '2' 
        WHEN TRIM(a.TA_ESTADO_OP) = '5' THEN '3' END AS COD_BLCE_STATUS, 
    'CAP' AS COD_VALUE, 
    CASE TRIM(a.TA_TMONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' 
        END AS COD_CURRENCY, '4' AS COD_ENTITY,
    COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(UPPER(TRIM(b.NOMBRE_BIN)), IF(TRIM(a.TA_INDICA_INTRA_EXTRA)!='', CONCAT('_', TRIM(a.TA_INDICA_INTRA_EXTRA)), ''))) AS COD_PRODUCT, 
    UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    CAST(
        CASE 
            WHEN TRIM(a.TA_INDICA_INTRA_EXTRA)='' AND (a.TA_SALDO_PRINCIPAL - a.TA_SALDO_PRODUCTO) < 0 THEN 0
            WHEN TRIM(a.TA_INDICA_INTRA_EXTRA)='' AND (a.TA_SALDO_PRINCIPAL - a.TA_SALDO_PRODUCTO) >= 0 THEN (a.TA_SALDO_PRINCIPAL - a.TA_SALDO_PRODUCTO)
            ELSE a.TA_SALDO_PRINCIPAL 
            END AS decimal(30, 10)) AS EOPBAL_CAP, 
    NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'TCS' AS COD_INFO_SOURCE
FROM MIS_LOAD_TCS a
LEFT JOIN MIS_LOAD_INFO_TRABAJO b 
ON STRLEFT(TRIM(a.TA_NUM_TARJETA_TITULAR), 6) = TRIM(b.BIN)
LEFT JOIN MIS_LOAD_LCS c 
ON STRRIGHT(TRIM(a.TA_ID_LINEA), 14) = STRRIGHT(TRIM(c.ID_LINEA), 14)
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.TA_ID_OPERACION)
WHERE TRIM(c.ESTADO_TARJETA) NOT IN  ('02', '07', '17', '22') 
    OR (TRIM(c.ESTADO_TARJETA) = '02' AND TRIM(c.EXPRESS_DIGITAL) = '1' AND (a.TA_SALDO_PRINCIPAL-a.TA_SALDO_PRODUCTO) > 0); 

----Aprovisionamiento de Tarjetas Intereses
INSERT INTO MIS_APR_ASSETS 
PARTITION (DATA_DATE='${var:periodo}') 
SELECT 'PREST' AS COD_CONT, 
    TRIM(a.TA_ID_OPERACION) AS IDF_CTO, 
    NULL AS COD_GL, NULL AS DES_GL,
    NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    CASE 
        WHEN TRIM(a.TA_INDICA_INTRA_EXTRA) != '' THEN '1' 
        WHEN TRIM(a.TA_ESTADO_OP) = '1' THEN '1'
        WHEN TRIM(a.TA_ESTADO_OP) IN ('2', '3', '4') THEN '2' 
        WHEN TRIM(a.TA_ESTADO_OP) = '5' THEN '3' END AS COD_BLCE_STATUS, 
    'INT' AS COD_VALUE, 
    CASE TRIM(a.TA_TMONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' 
        END AS COD_CURRENCY, '4' AS COD_ENTITY,
    COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(UPPER(TRIM(b.NOMBRE_BIN)), IF(TRIM(a.TA_INDICA_INTRA_EXTRA)!='', CONCAT('_', TRIM(a.TA_INDICA_INTRA_EXTRA)), ''))) AS COD_PRODUCT, 
    UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
    a.TA_SALDO_PRODUCTO AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, NULL AS PL,
    'TCS' AS COD_INFO_SOURCE
FROM MIS_LOAD_TCS a
LEFT JOIN MIS_LOAD_INFO_TRABAJO b 
ON STRLEFT(TRIM(a.TA_NUM_TARJETA_TITULAR), 6) = TRIM(b.BIN)
LEFT JOIN MIS_LOAD_LCS c 
ON STRRIGHT(TRIM(a.TA_ID_LINEA), 14) = STRRIGHT(TRIM(c.ID_LINEA), 14)
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.TA_ID_OPERACION)
WHERE TRIM(a.TA_INDICA_INTRA_EXTRA)='' AND 
    (TRIM(c.ESTADO_TARJETA) NOT IN  ('02', '07', '17', '22') 
    OR (TRIM(c.ESTADO_TARJETA) = '02' AND TRIM(c.EXPRESS_DIGITAL) = '1' AND (a.TA_SALDO_PRINCIPAL-a.TA_SALDO_PRODUCTO) > 0))
; 

----Aprovisionamiento de Tarjetas Resultados
INSERT INTO MIS_APR_ASSETS
PARTITION (DATA_DATE='${var:periodo}')
--Se agrupan los saldos para consolidar los resultados por contrato del dia de ejecucion, y acumularlos con los resultados del día anterior
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CAST(ROUND(SUM(a.PL), 10) AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    --Intereses por tarjeta registrados en el dia de ejecucion
    SELECT 'PREST' AS COD_CONT, IFNULL(TRIM(d.TA_ID_OPERACION), TRIM(a.TARJETA)) AS IDF_CTO, NULL AS COD_GL, NULL AS DES_GL, --TODO
        NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,'1' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE, 
        CASE TRIM(a.MONEDA)
            WHEN 'CO' THEN 'CRC'
            WHEN 'DO' THEN 'USD' 
            END AS COD_CURRENCY, '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), UPPER(TRIM(b.NOMBRE_BIN))) AS COD_PRODUCT, UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT, 
        NULL AS COD_ACT_TYPE, 
        CAST((a.MONTO * c.SIGNO * -1) AS DECIMAL(30,10)) AS PL, 'MV' AS COD_INFO_SOURCE
    FROM MIS_TMP_LOAD_MV_ASS a
    LEFT JOIN MIS_LOAD_INFO_TRABAJO b 
    ON STRLEFT(TRIM(a.TARJETA), 6) = TRIM(b.BIN)
    LEFT JOIN MIS_LOAD_TCS d
    ON TRIM(a.TARJETA) = TRIM(d.TA_NUM_TARJETA_TITULAR) AND TRIM(d.TA_INDICA_INTRA_EXTRA) = ''
    AND CASE TRIM(a.MONEDA)
        WHEN 'CO' THEN 'CRC'
        WHEN 'DO' THEN 'USD' 
        END =
        CASE TRIM(d.TA_TMONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' 
        END
    INNER JOIN MIS_LOAD_LISTA_MOV c
    ON TRIM(a.MOVIMIENTO) = TRIM(c.COD) AND TRIM(c.DESC_INCCOM_CBO) = 'Intereses Banda'
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = IFNULL(TRIM(d.TA_ID_OPERACION), TRIM(a.TARJETA)) 
    UNION ALL
    --Intereses por tarjeta registrados en el dia anterior
    SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
        a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
        a.PL, a.COD_INFO_SOURCE
    FROM MIS_APR_ASSETS a
    WHERE a.COD_VALUE = 'RSL' AND a.COD_INFO_SOURCE = 'MV' AND  
        DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) > 1 AND 
        TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd') = DAYS_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1) 
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE; 


---- Aprovisionamiento de Tarjetas Adicionales
INSERT INTO MIS_APR_ASSETS
(COD_CURRENCY, COD_VALUE, EOPBAL_CAP, EOPBAL_INT, AVGBAL_CAP, AVGBAL_INT, PL, COD_BLCE_STATUS, COD_ENTITY, IDF_CTO, COD_PRODUCT, COD_SUBPRODUCT, COD_INFO_SOURCE)
PARTITION (DATA_DATE)
SELECT 
    'CRC' AS COD_CURRENCY, 'CAP' AS COD_VALUE, CAST(0 AS DECIMAL(30,10)) AS EOPBAL_CAP, CAST(0 AS DECIMAL(30,10)) AS EOPBAL_INT,
    CAST(0 AS DECIMAL(30,10)) AS  AVGBAL_CAP, CAST(0 AS DECIMAL(30,10)) AS AVGBAL_INT, CAST(0 AS DECIMAL(30,10)) AS PL, 
    '1' AS COD_BLCE_STATUS, '4' AS COD_ENTITY, CONCAT(a.CUENTA_TARJETA, 'A') AS IDF_CTO, UPPER(TRIM(b.NOMBRE_BIN)) AS COD_PRODUCT, 
    '' AS COD_SUBPRODUCT, 'VPSPLAST' AS COD_INFO_SOURCE, 
    '${var:periodo}' AS DATA_DATE
FROM MIS_LOAD_TARJETAS_ADICIONALES a
LEFT JOIN MIS_LOAD_INFO_TRABAJO b
ON STRLEFT(TRIM(a.TARJETA), 6) = TRIM(b.BIN)
;
----UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT

INSERT INTO MIS_APR_CONTRACT_DT
(IDF_CTO, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_CURRENCY, INI_AM, COD_EXEC_CTO, DATE_DISB, CARD_NUMBER, DES_PROG_CARD)
PARTITION (DATA_DATE, COD_INFO_SOURCE)
SELECT 
     CONCAT(a.CUENTA_TARJETA, 'A') AS IDF_CTO, '4' AS COD_ENTITY, UPPER(TRIM(b.NOMBRE_BIN)) AS COD_PRODUCT, '' AS COD_SUBPRODUCT,
     'CRC' AS COD_CURRENCY, a.MONTO AS INI_AM, a.ENTE_TC AS COD_EXEC_CTO, a.FECHA AS DATE_DISB, a.TARJETA AS CARD_NUMBER, 
     a.PROGRAMA AS DES_PROG_CARD, '${var:periodo}' AS DATA_DATE, 'VPSPLAST' AS COD_INFO_SOURCE
FROM MIS_LOAD_TARJETAS_ADICIONALES a
LEFT JOIN MIS_LOAD_INFO_TRABAJO b
ON STRLEFT(TRIM(a.TARJETA), 6) = TRIM(b.BIN)
;
--- 

--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='TCS');

----Aprovisionamiento de Contratos Tarjetas
INSERT INTO MIS_APR_CONTRACT_DT
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='TCS') 
SELECT 
    TRIM(a.TA_ID_OPERACION) AS IDF_CTO, 
    '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), CONCAT(UPPER(TRIM(b.NOMBRE_BIN)), IF(TRIM(a.TA_INDICA_INTRA_EXTRA)!='', CONCAT('_', TRIM(a.TA_INDICA_INTRA_EXTRA)), ''))) AS COD_PRODUCT, UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 
    CASE TRIM(a.TA_TMONEDA) 
        WHEN '1' THEN 'CRC' 
        WHEN '2' THEN 'USD' 
        END AS COD_CURRENCY, 
    TRIM(d.EN_ENTE) AS IDF_CLI, NULL AS COD_ACCO_CENT, IFNULL(TRIM(e.UBICACION), TRIM(f.CANAL_DE_VENTA)) AS COD_OFFI,
    NULL AS COD_BCA_INT, 'FRANCES' AS COD_AMRT_MET, 'F' AS COD_RATE_TYPE,
    CAST(ROUND(a.TA_TASA_INT_VIG/100, 10) AS decimal(30, 10)) AS RATE_INT, 
    ISNULL(FROM_TIMESTAMP(TO_TIMESTAMP(a.ta_fecha_formaliza, 'dd/MM/yyyy'), 'yyyyMMdd'),FROM_TIMESTAMP(TO_TIMESTAMP(c.FECHA_FORMALIZACION, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV, 
    FROM_TIMESTAMP(TO_TIMESTAMP(a.TA_FECHA_VENCE, 'dd/MM/yyyy'), 'yyyyMMdd') AS EXP_DATE,
    NULL AS FREQ_INT_PAY, 'M' AS COD_UNI_FREQ_INT_PAY, 
    NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, 'M' AS COD_UNI_AMRT_TRM,   
    CAST(IF(f.TARJETA IS NOT NULL, f.MONTO, a.TA_MONTO_DESEM) AS decimal(30, 10)) AS INI_AM, NULL AS CUO_AM, c.MONTO_AUTORIZADO AS CREDIT_LIM_AM, 
    NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, e.CANAL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV, 
    IFNULL(TRIM(e.COD_EJEC), TRIM(f.USUARIO)) AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, 
    IFNULL(FROM_TIMESTAMP(TO_TIMESTAMP(e.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd'), FROM_TIMESTAMP(TO_TIMESTAMP(f.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_DISB,
    TRIM(a.TA_NUM_TARJETA_TITULAR) AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, le.COD_PROG_CARD, le.DES_PROG_CARD
FROM MIS_LOAD_TCS a 
LEFT JOIN MIS_LOAD_INFO_TRABAJO b 
ON STRLEFT(TRIM(a.TA_NUM_TARJETA_TITULAR), 6) = TRIM(b.BIN)
LEFT JOIN MIS_LOAD_LCS c 
ON STRRIGHT(TRIM(a.TA_ID_LINEA), 14) = STRRIGHT(TRIM(c.ID_LINEA), 14)
LEFT JOIN MIS_LOAD_TARENTE d 
ON TRIM(a.TA_NUM_TARJETA_TITULAR) = TRIM(d.TA_CODIGO)
LEFT JOIN MIS_LOAD_TARJETAS_ENTREGADAS e
ON TRIM(a.TA_NUM_TARJETA_TITULAR)=TRIM(e.TC) AND trim(a.TA_INDICA_INTRA_EXTRA)='' and TRIM(a.TA_TMONEDA)='1' AND TRIM(e.CUENTA_TC) =  STRRIGHT(a.TA_ID_OPERACION,13)
LEFT JOIN (
    SELECT TMP.TARJETA, TMP.CUENTA_TCR, TMP.FECHA, MIN(TMP.USUARIO) USUARIO,  MIN(TMP.CANAL_DE_VENTA) CANAL_DE_VENTA, TMP.PLAN2, IF(TMP.MONTO = TMP.DOLARIZA, 'USD', 'CRC') MONEDA, SUM(MONTO) MONTO
    FROM MIS_LOAD_TARJETAS_SUBPRODUCTO TMP
    GROUP BY TMP.TARJETA, TMP.CUENTA_TCR, TMP.FECHA, TMP.PLAN2, IF(TMP.MONTO = TMP.DOLARIZA, 'USD', 'CRC')
) f
ON TRIM(a.TA_NUM_TARJETA_TITULAR)=TRIM(f.TARJETA) AND TRIM(f.CUENTA_TCR) = STRRIGHT(a.TA_ID_OPERACION,13) AND trim(a.TA_INDICA_INTRA_EXTRA) = STRLEFT(UPPER(TRIM(f.PLAN2)), 1) 
     AND a.TA_FECHA_FORMALIZA = f.FECHA AND f.MONEDA = CASE TRIM(a.TA_TMONEDA) WHEN '1' THEN 'CRC' WHEN '2' THEN 'USD' END
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.TA_ID_OPERACION)
LEFT JOIN MIS_PAR_REL_PROG_CARD le
ON STRLEFT(TRIM(a.TA_NUM_TARJETA_TITULAR), 8) = TRIM(le.BIN)
;  


--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='TARENTE');

--- Inserción de tarjetas no encontradas en el TCS ---
INSERT INTO MIS_APR_CONTRACT_DT
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='TARENTE') 
SELECT 
    TRIM(a.TA_CODIGO) AS IDF_CTO, '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), UPPER(TRIM(b.NOMBRE_BIN))) AS COD_PRODUCT, UPPER(TRIM(b.PRODUCTO)) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 'CRC' AS COD_CURRENCY, 
    TRIM(a.EN_ENTE) AS IDF_CLI, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    NULL AS COD_BCA_INT, NULL AS COD_AMRT_MET, NULL AS COD_RATE_TYPE,
    NULL AS RATE_INT, FROM_TIMESTAMP(TO_TIMESTAMP(e.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd') AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV, NULL AS EXP_DATE,
    NULL AS FREQ_INT_PAY, NULL AS COD_UNI_FREQ_INT_PAY, 
    NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, NULL AS COD_UNI_AMRT_TRM,   
    NULL AS INI_AM, NULL AS CUO_AM, NULL AS CREDIT_LIM_AM, 
    NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV,
    NULL AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, 
    FROM_TIMESTAMP(TO_TIMESTAMP(e.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd') AS DATE_DISB, TRIM(a.TA_CODIGO) AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, le.COD_PROG_CARD, le.DES_PROG_CARD
FROM MIS_LOAD_TARENTE a
LEFT JOIN MIS_LOAD_INFO_TRABAJO b 
ON STRLEFT(TRIM(a.TA_CODIGO), 6) = TRIM(b.BIN)
LEFT JOIN (SELECT DISTINCT TA_NUM_TARJETA_TITULAR FROM MIS_LOAD_TCS) c
ON TRIM(a.TA_CODIGO) = TRIM(c.TA_NUM_TARJETA_TITULAR) 
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.TA_CODIGO)
LEFT JOIN MIS_LOAD_TARJETAS_ENTREGADAS e
ON TRIM(a.TA_CODIGO) = TRIM(e.TC)
LEFT JOIN MIS_PAR_REL_PROG_CARD le
ON STRLEFT(TRIM(a.TA_CODIGO), 8) = TRIM(le.BIN)
WHERE c.TA_NUM_TARJETA_TITULAR IS NULL;

--- Crear partición en APR si no existe ---
ALTER TABLE MIS_APR_ASSETS ADD IF NOT EXISTS PARTITION (DATA_DATE='${var:periodo}');