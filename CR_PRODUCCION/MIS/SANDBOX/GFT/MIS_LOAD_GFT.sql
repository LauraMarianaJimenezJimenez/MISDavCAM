--------------------------------------------------------------- MIS_APR_GFT ---------------------------------------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

TRUNCATE TABLE IF EXISTS MIS_LOAD_INTRADAY; 
LOAD DATA INPATH '${var:ruta_fuentes_rof}/INTRADAY.CSV' INTO TABLE MIS_LOAD_INTRADAY;
TRUNCATE TABLE IF EXISTS MIS_LOAD_BROKERAGE; 
LOAD DATA INPATH '${var:ruta_fuentes_rof}/BROKERAGE.CSV' INTO TABLE MIS_LOAD_BROKERAGE;
TRUNCATE TABLE IF EXISTS MIS_LOAD_MAN_TRAN; 
LOAD DATA INPATH '${var:ruta_fuentes_rof}/MAN_TRAN.CSV' INTO TABLE MIS_LOAD_MAN_TRAN;

--- Limpieza de partición ----
ALTER TABLE MIS_APR_GFT 
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

--- Aprovisionamiento de ROF por Intraday ---
INSERT INTO MIS_APR_GFT
PARTITION (DATA_DATE='${var:periodo}')
--Se agrupan los saldos para consolidar los resultados por contrato del dia de ejecucion, y acumularlos con los resultados del día anterior
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CAST(ROUND(SUM(a.PL), 10) AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    --ROF para línea de Negocio
    SELECT 'ROF' AS COD_CONT, TRIM(a.SECUENCIAL) AS IDF_CTO,
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE,
        'CRC' AS COD_CURRENCY, 
        '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), 'INTRADAY') AS COD_PRODUCT, TRIM(a.CLIENT_TYPE1) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
        CAST(-1 * IFNULL(a.CM, 0) AS decimal(30, 10)) AS PL,
        'INTRADAY' AS COD_INFO_SOURCE
    FROM MIS_LOAD_INTRADAY a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = TRIM(a.SECUENCIAL)
    WHERE IFNULL(a.CM, 0) != 0 
    UNION ALL 
    --ROF para Tesorería
    SELECT 'ROF' AS COD_CONT, TRIM(a.SECUENCIAL) AS IDF_CTO,
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE,
        'CRC' AS COD_CURRENCY, 
        '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), 'INTRADAY') AS COD_PRODUCT, 'GBM' AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
        CAST(-1 * IFNULL(a.GM, 0) AS decimal(30, 10)) AS PL,
        'INTRADAY' AS COD_INFO_SOURCE
    FROM MIS_LOAD_INTRADAY a
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = TRIM(a.SECUENCIAL)
    WHERE IFNULL(a.GM, 0) != 0
    UNION ALL 
    --ROF registrado hasta el dÍa anterior
    SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
        a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
        a.PL, a.COD_INFO_SOURCE
    FROM MIS_APR_GFT a
    WHERE a.COD_VALUE = 'RSL' AND a.COD_INFO_SOURCE = 'INTRADAY' AND 
        DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) > 1 AND 
        TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd') = DAYS_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1) 
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE; 


--- Aprovisionamiento de ROF por Brokerage ---
INSERT INTO MIS_APR_GFT
PARTITION (DATA_DATE='${var:periodo}')
--Se agrupan los saldos para consolidar los resultados por contrato del dia de ejecucion, y acumularlos con los resultados del día anterior
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CAST(ROUND(SUM(a.PL), 10) AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    --ROF para línea de Negocio
    SELECT 'ROF' AS COD_CONT, TRIM(a.SECUENCIAL) AS IDF_CTO,
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE,
        'CRC' AS COD_CURRENCY,
        '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), 'BROKERAGE') AS COD_PRODUCT, TRIM(a.CLIENT_TYPE) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
        CAST((IFNULL(a.BROK_LOB, 0) * 0.25) AS decimal(30, 10)) AS PL,
        'BROKERAGE' AS COD_INFO_SOURCE
    FROM MIS_LOAD_BROKERAGE a 
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = TRIM(a.SECUENCIAL)
    WHERE IFNULL(a.BROK_LOB, 0) != 0 
    UNION ALL 
    --ROF para Tesorería
    SELECT 'ROF' AS COD_CONT, TRIM(a.SECUENCIAL) AS IDF_CTO,
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE,
        'CRC' AS COD_CURRENCY,
        '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), 'BROKERAGE') AS COD_PRODUCT, 'GBM' AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
        CAST((IFNULL(a.BROK_GM, 0) * 0.25) AS decimal(30, 10)) AS PL,
        'BROKERAGE' AS COD_INFO_SOURCE
    FROM MIS_LOAD_BROKERAGE a 
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = TRIM(a.SECUENCIAL)
    WHERE IFNULL(a.BROK_GM, 0) != 0
    UNION ALL 
    --ROF registrado hasta el día anterior
    SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
        a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
        a.PL, a.COD_INFO_SOURCE
    FROM MIS_APR_GFT a
    WHERE a.COD_VALUE = 'RSL' AND a.COD_INFO_SOURCE = 'BROKERAGE' AND 
        DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) > 1 AND 
        TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd') = DAYS_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1) 
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE; 


--- Aprovisionamiento de ROF por Manual Transactions Colones ---
INSERT INTO MIS_APR_GFT
PARTITION (DATA_DATE='${var:periodo}')
--Se agrupan los saldos para consolidar los resultados por contrato del dia de ejecucion, y acumularlos con los resultados del día anterior
SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE,
    NULL AS EOPBAL_CAP, NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CAST(ROUND(SUM(a.PL), 10) AS decimal(30, 10)) AS PL, a.COD_INFO_SOURCE
FROM (
    --ROF para línea de Negocio
    SELECT 'ROF' AS COD_CONT, CONCAT('MT_', TRIM(a.ENTE)) AS IDF_CTO,
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE, 'USD' AS COD_CURRENCY,
        '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), 'MAN_TRAN') AS COD_PRODUCT, TRIM(a.CLIENT_TYPE) AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
        CAST(IFNULL(a.PL_CM_DOL * -1, 0) AS decimal(30, 10)) AS PL,
        'MAN_TRAN' AS COD_INFO_SOURCE
    FROM MIS_LOAD_MAN_TRAN a 
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = CONCAT('MT_', TRIM(a.ENTE))
    WHERE IFNULL(a.PL_CM_DOL, 0) != 0 
    UNION ALL 
    --ROF para Tesorería
     SELECT 'ROF' AS COD_CONT, CONCAT('MT_', TRIM(a.ENTE)) AS IDF_CTO,
        NULL AS COD_GL, NULL AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
        '0' AS COD_BLCE_STATUS, 'RSL' AS COD_VALUE, 'USD' AS COD_CURRENCY,
        '4' AS COD_ENTITY,
        COALESCE(TRIM(SPE.COD_PRODUCT), 'MAN_TRAN') AS COD_PRODUCT, 'GBM' AS COD_SUBPRODUCT, NULL AS COD_ACT_TYPE, 
        CAST(IFNULL(a.PL_GBM_DOL * -1, 0) AS decimal(30, 10)) AS PL,
        'MAN_TRAN' AS COD_INFO_SOURCE
    FROM MIS_LOAD_MAN_TRAN a 
    LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
    ON TRIM(SPE.IDF_CTO) = CONCAT('MT_', TRIM(a.ENTE))
    WHERE IFNULL(a.PL_GBM_DOL, 0) != 0
    UNION ALL 
    --ROF registrado hasta el día anterior
    SELECT a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
        a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, 
        a.PL, a.COD_INFO_SOURCE
    FROM MIS_APR_GFT a
    WHERE a.COD_VALUE = 'RSL' AND a.COD_INFO_SOURCE = 'MAN_TRAN' AND  
        DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) > 1 AND 
        TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd') = DAYS_SUB(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'), 1) 
) AS a 
GROUP BY a.COD_CONT, a.IDF_CTO, a.COD_GL, a.DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, a.COD_BLCE_STATUS, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACT_TYPE, a.COD_INFO_SOURCE; 


---- Aprovisionamiento de contratos ----

--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT 
DROP IF EXISTS PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='INTRADAY');

INSERT INTO MIS_APR_CONTRACT_DT 
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='INTRADAY') 
SELECT 
    TRIM(a.SECUENCIAL) AS IDF_CTO, '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), 'INTRADAY') AS COD_PRODUCT, MAX(TRIM(a.CLIENT_TYPE1)) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 'CRC' AS COD_CURRENCY, 
    MAX(TRIM(a.CLIENTE)) AS IDF_CLI, NULL AS COD_ACCO_CENT, MAX(TRIM(a.SUC_ORIGEN)) AS COD_OFFI,
    NULL AS COD_BCA_INT, NULL AS COD_AMRT_MET, NULL AS COD_RATE_TYPE,
    NULL AS RATE_INT, MAX(FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV, NULL AS EXP_DATE,
    NULL AS FREQ_INT_PAY, NULL AS COD_UNI_FREQ_INT_PAY, 
    NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, NULL AS COD_UNI_AMRT_TRM,   
    NULL AS INI_AM, NULL AS CUO_AM, NULL AS CREDIT_LIM_AM, 
    NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV, 
    NULL AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, 
    MAX(FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_DISB, 
    NULL AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, NULL AS COD_PROG_CARD, NULL AS DES_PROG_CARD
FROM MIS_LOAD_INTRADAY a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.SECUENCIAL)
WHERE (a.CM != 0 OR a.GM != 0)
    AND TRIM(a.SECUENCIAL) NOT IN (SELECT DISTINCT IDF_CTO FROM MIS_APR_CONTRACT_DT WHERE DATA_DATE='${var:periodo}' AND COD_INFO_SOURCE = 'ESTADO_PORTAFOLIO_100')
GROUP BY TRIM(a.SECUENCIAL), COALESCE(TRIM(SPE.COD_PRODUCT), 'INTRADAY');

--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT 
DROP IF EXISTS PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='BROKERAGE');

INSERT INTO MIS_APR_CONTRACT_DT 
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='BROKERAGE') 
SELECT 
    TRIM(a.SECUENCIAL) AS IDF_CTO, '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), 'BROKERAGE') AS COD_PRODUCT, MAX(TRIM(a.CLIENT_TYPE)) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 'CRC' AS COD_CURRENCY, 
    MAX(TRIM(a.CLIENTE)) AS IDF_CLI, NULL AS COD_ACCO_CENT, MAX(TRIM(a.SUC_ORIGEN)) AS COD_OFFI,
    NULL AS COD_BCA_INT, NULL AS COD_AMRT_MET, NULL AS COD_RATE_TYPE,
    NULL AS RATE_INT, MAX(FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV, NULL AS EXP_DATE,
    NULL AS FREQ_INT_PAY, NULL AS COD_UNI_FREQ_INT_PAY, 
    NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, NULL AS COD_UNI_AMRT_TRM,   
    NULL AS INI_AM, NULL AS CUO_AM, NULL AS CREDIT_LIM_AM, 
    NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV, 
    NULL AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, 
    MAX(FROM_TIMESTAMP(TO_TIMESTAMP(a.FECHA, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_DISB, 
    NULL AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, NULL AS COD_PROG_CARD, NULL AS DES_PROG_CARD
FROM MIS_LOAD_BROKERAGE a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = TRIM(a.SECUENCIAL) 
WHERE (a.BROK_LOB != 0 OR a.BROK_GM != 0) 
    AND TRIM(a.SECUENCIAL) NOT IN (SELECT DISTINCT IDF_CTO FROM MIS_APR_CONTRACT_DT WHERE DATA_DATE='${var:periodo}' AND COD_INFO_SOURCE IN ('INTRADAY','ESTADO_PORTAFOLIO_100'))
GROUP BY TRIM(a.SECUENCIAL), COALESCE(TRIM(SPE.COD_PRODUCT), 'BROKERAGE');

--- Limpieza de partición ----
ALTER TABLE MIS_APR_CONTRACT_DT 
DROP IF EXISTS PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='MAN_TRAN');

INSERT INTO MIS_APR_CONTRACT_DT 
PARTITION (DATA_DATE='${var:periodo}', COD_INFO_SOURCE='MAN_TRAN') 
SELECT 
    CONCAT('MT_', TRIM(a.ENTE)) AS IDF_CTO, '4' AS COD_ENTITY, 
    COALESCE(TRIM(SPE.COD_PRODUCT), 'MAN_TRAN') AS COD_PRODUCT, MAX(TRIM(a.CLIENT_TYPE)) AS COD_SUBPRODUCT, 
    NULL AS COD_ACT_TYPE, 'USD' AS COD_CURRENCY, 
    MAX(TRIM(a.ENTE)) AS IDF_CLI, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI,
    NULL AS COD_BCA_INT, NULL AS COD_AMRT_MET, NULL AS COD_RATE_TYPE,
    NULL AS RATE_INT, MAX(FROM_TIMESTAMP(TO_TIMESTAMP(a.TRADE_DATE, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_ORIGIN,
    NULL AS DATE_LAST_REV, NULL AS DATE_PRX_REV, NULL AS EXP_DATE,
    NULL AS FREQ_INT_PAY, NULL AS COD_UNI_FREQ_INT_PAY, 
    NULL AS FRE_REV_INT, NULL AS COD_UNI_FRE_REV_INT,
    NULL AS AMRT_TRM, NULL AS COD_UNI_AMRT_TRM,   
    NULL AS INI_AM, NULL AS CUO_AM, NULL AS CREDIT_LIM_AM, 
    NULL AS PREDEF_RATE_IND, NULL AS PREDEF_RATE, NULL AS IND_CHANNEL, NULL AS COD_TYP_LIC, 
    NULL AS COU_CAR_OFF, NULL AS COD_CONV, 
    NULL AS COD_EXEC_CTO, NULL AS COD_COVID_PORT, 
    MAX(FROM_TIMESTAMP(TO_TIMESTAMP(a.TRADE_DATE, 'dd/MM/yyyy'), 'yyyyMMdd')) AS DATE_DISB, 
    NULL AS CARD_NUMBER, NULL AS FIELD1_CTO, NULL AS FIELD2_CTO, NULL AS FIELD3_CTO, NULL AS FIELD4_CTO, 
    NULL AS FIELD5_CTO, NULL AS FIELD6_CTO, NULL AS FIELD7_CTO, NULL AS FIELD8_CTO, 
    NULL AS FIELD9_CTO, NULL AS FIELD10_CTO, NULL AS COD_PROG_CARD, NULL AS DES_PROG_CARD
FROM MIS_LOAD_MAN_TRAN a
LEFT JOIN MIS_PAR_REL_PROD_SPE SPE 
ON TRIM(SPE.IDF_CTO) = CONCAT('MT_', TRIM(a.ENTE)) 
WHERE (a.PL_CM_DOL != 0 OR a.PL_GBM_DOL != 0) 
GROUP BY TRIM(a.ENTE), COALESCE(TRIM(SPE.COD_PRODUCT), 'MAN_TRAN');

--- Crear partición en APR si no existe ---
ALTER TABLE MIS_APR_GFT ADD IF NOT EXISTS PARTITION (DATA_DATE='${var:periodo}');