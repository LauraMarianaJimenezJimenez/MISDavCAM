--------------------------------------------------------------- MIS_APR_ACCOUNTING ---------------------------------------------------------------

--- Seleccion de Base de datos de Ejecución ---
USE ${var:base_datos};

--- Eliminacion y Carga diaria de la tabla GLMST ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_GLMST; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/GLMST.CSV' INTO TABLE MIS_LOAD_GLMST;

--- Eliminacion y Carga diaria de la tabla GLBLN ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_GLBLN; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/GLBLN.CSV' INTO TABLE MIS_LOAD_GLBLN;

--- Eliminacion y Carga diaria de la tabla TRANS ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_TRANS; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/TRANS.CSV' INTO TABLE MIS_LOAD_TRANS;

TRUNCATE TABLE MIS_PAR_CAT_ACCO_CENT;

LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/CCDSC.CSV' INTO TABLE MIS_PAR_CAT_ACCO_CENT;

--COMPUTE STATS MIS_LOAD_GLMST;

--- Creacion de Tabla Temporal para extraer valores usados de la fuente GLMST y eliminar duplicados ---
DROP TABLE IF EXISTS MIS_TMP_GLMST;
CREATE TABLE MIS_TMP_GLMST AS 
SELECT a.GLMBNK, a.GLMCCY, a.GLMGLN, MAX(a.GLMDSC) AS GLMDSC
FROM MIS_LOAD_GLMST a 
GROUP BY a.GLMBNK, a.GLMCCY, a.GLMGLN;

TRUNCATE TABLE IF EXISTS MIS_PAR_CAT_CAF;
INSERT INTO MIS_PAR_CAT_CAF
SELECT DISTINCT a.GLBBNK AS COD_ENTITY, a.GLBCCY AS COD_CURRENCY, TRIM(a.GLBGLN) AS COD_GL_GROUP, REPLACE(TRIM(b.GLMDSC),'.',' ') AS DES_GL_GROUP, CASE strleft(TRIM(a.GLBGLN),1) WHEN '1' THEN 'A' WHEN '2' THEN 'P' WHEN '3' THEN 'RG' WHEN '4' THEN 'RI' ELSE 'FB' END AS ACCOUNT_CONCEPT
FROM MIS_LOAD_GLBLN a
LEFT JOIN MIS_TMP_GLMST b
ON a.GLBGLN = b.GLMGLN AND a.GLBBNK = b.GLMBNK AND a.GLBCCY = b.GLMCCY
;

--- Limpieza de partición ----
ALTER TABLE MIS_APR_ACCOUNTING
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

--COMPUTE STATS MIS_LOAD_GLBLN;
--COMPUTE STATS MIS_TMP_GLMST;

--- Aprovisionamiento de la informacion de Balance en la tabla definitiva ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.GLBGLN AS COD_GL, TRIM(b.GLMDSC) AS DES_GL, NULL AS COD_ACCO_CENT, a.GLBBRN AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, a.GLBCCY AS COD_CURRENCY, LPAD(a.GLBBNK,2,'0') AS COD_ENTITY, 
    CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN CAST(a.GLBBBL + a.GLBJAB AS DECIMAL(30,10))
        WHEN  2 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB AS DECIMAL(30,10))
        WHEN  3 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB AS DECIMAL(30,10))
        WHEN  4 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB AS DECIMAL(30,10))
        WHEN  5 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB AS DECIMAL(30,10))
        WHEN  6 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB AS DECIMAL(30,10))
        WHEN  7 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB AS DECIMAL(30,10))
        WHEN  8 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB AS DECIMAL(30,10))
        WHEN  9 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB AS DECIMAL(30,10))
        WHEN 10 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB + a.GLBOCB AS DECIMAL(30,10))
        WHEN 11 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB + a.GLBOCB + a.GLBNOB AS DECIMAL(30,10))
        WHEN 12 THEN CAST(a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB + a.GLBOCB + a.GLBNOB + a.GLBDEB AS DECIMAL(30,10))
    END AS decimal(30, 10)) AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN a.GLBJAV
        WHEN  2 THEN a.GLBFEV
        WHEN  3 THEN a.GLBMAV
        WHEN  4 THEN a.GLBAPV
        WHEN  5 THEN a.GLBMYV
        WHEN  6 THEN a.GLBJUV
        WHEN  7 THEN a.GLBJLV 
        WHEN  8 THEN a.GLBAUV
        WHEN  9 THEN a.GLBSEV
        WHEN 10 THEN a.GLBOCV
        WHEN 11 THEN a.GLBNOV
        WHEN 12 THEN a.GLBDEV
    END AS decimal(30, 10)) AS AVGBAL_CAP, NULL AVGBAL_INT, NULL AS PL, 'GLBLN' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_GLBLN a
	WHERE a.GLBBNK <> '02' AND STRLEFT(a.GLBGLN, 1) NOT IN ('3', '4')) a 
LEFT JOIN MIS_TMP_GLMST b
ON a.GLBGLN = b.GLMGLN AND a.GLBBNK = b.GLMBNK AND a.GLBCCY = b.GLMCCY; 



--- Aprovisionamiento de Información de P&G (Ingresos) en la tabla definitiva ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.GLBGLN AS COD_GL, TRIM(b.GLMDSC) AS DES_GL, NULL AS COD_ACCO_CENT, a.GLBBRN AS COD_OFFI, NULL AS COD_NAR, 
	NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, LPAD(a.GLBBNK,2,'0') AS COD_ENTITY, NULL AS EOPBAL_CAP, 
	NULL AS EOPBAL_INT, NULL AVGBAL_CAP, NULL AVGBAL_INT, 
	CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
		WHEN  1 THEN a.GLBJAX --Saldos contravalorados
		WHEN  2 THEN a.GLBFEX
		WHEN  3 THEN a.GLBMAX
		WHEN  4 THEN a.GLBAPX
		WHEN  5 THEN a.GLBMYX
		WHEN  6 THEN a.GLBJUX
		WHEN  7 THEN a.GLBJLX
		WHEN  8 THEN a.GLBAUX
		WHEN  9 THEN a.GLBSEX
		WHEN 10 THEN a.GLBOCX
		WHEN 11 THEN a.GLBNOX
		WHEN 12 THEN a.GLBDEX
    END AS decimal(30, 10)) AS PL, 'GLBLN' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_GLBLN a
	WHERE a.GLBBNK <> '02' AND STRLEFT(a.GLBGLN, 1) IN ('3', '4') AND STRLEFT(a.GLBGLN, 2) NOT IN ('35')) a 
LEFT JOIN MIS_TMP_GLMST b
ON a.GLBGLN = b.GLMGLN AND a.GLBBNK = b.GLMBNK AND a.GLBCCY = b.GLMCCY; 

--COMPUTE STATS MIS_LOAD_TRANS;

--- Aprovisionamiento de Información de P&G (Egresos) en la tabla definitiva ---
INSERT INTO MIS_APR_ACCOUNTING 
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.TRAGLN AS COD_GL, TRIM(b.GLMDSC) AS DES_GL, CASE WHEN STRLEFT(a.TRAGLN, 5) = '35050' AND TRACCN = 0 THEN CASE WHEN TRABRN = '0' THEN '10000' WHEN TRABRN = '2' THEN '21020' WHEN TRABRN = '4' THEN '21040' WHEN TRABRN = '5' THEN '21030' WHEN TRABRN = '6' THEN '21050' WHEN TRABRN = '7' THEN '21060' WHEN TRABRN = '8' THEN '10500' ELSE CAST(a.TRACCN AS string) END ELSE CAST(a.TRACCN AS string) END AS COD_ACCO_CENT, a.TRABRN AS COD_OFFI, a.TRANAR AS COD_NAR, 
	NULL AS COD_BLCE_STATUS, a.TRACCY AS COD_CURRENCY, LPAD(a.TRABNK,2,'0') AS COD_ENTITY, NULL AS EOPBAL_CAP, 
	NULL AS EOPBAL_INT, NULL AVGBAL_CAP, NULL AVGBAL_INT, CAST(a.TOT_TRAAMT AS decimal(30, 10)) AS PL, 'TRANS' COD_INFO_SOURCE 
FROM (
	SELECT a.TRABNK, a.TRACCY, a.TRAGLN, a.TRABRN, a.TRANAR, a.TRACCN, SUM(CASE WHEN a.TRADCC IN ('5') THEN a.TRAAMT * -1 ELSE a.TRAAMT END) AS TOT_TRAAMT
	FROM MIS_LOAD_TRANS a
	WHERE a.TRABNK <> '02' AND STRLEFT(a.TRAGLN, 2)='35' AND 
		CAST(STRRIGHT(CAST(YEAR(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) AS string), 3) AS int) = a.TRAVDY AND MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) = a.TRAVDM
	GROUP BY a.TRABNK, a.TRACCY, a.TRAGLN, a.TRABRN, a.TRANAR, a.TRACCN) a
LEFT JOIN MIS_TMP_GLMST b
ON a.TRAGLN = b.GLMGLN AND a.TRABNK = b.GLMBNK AND a.TRACCY = b.GLMCCY; 


--- Llenado de la tabla de Tasas de Cambio ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_RTRNS; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/RTRNS.CSV' INTO TABLE MIS_LOAD_RTRNS;

--- Llenado de la tabla de Tasas de Cambio a través de la trabla creada anteriormente para cargar ---

ALTER TABLE MIS_PAR_EXCH_RATE
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}'); 

INSERT INTO TABLE MIS_PAR_EXCH_RATE PARTITION (DATA_DATE)
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'TC_FOTO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2);


/*
INSERT INTO TABLE MIS_PAR_EXCH_RATE PARTITION (DATA_DATE)
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'TC_FOTO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2)
AND a.RTRCCY = 'USD' AND a.RTRBNK = '01'
UNION ALL
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'TC_PROMEDIO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2)
AND a.RTRCCY = 'USD' AND a.RTRBNK = '01'
UNION ALL
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'PPTO_FOTO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2)
AND a.RTRCCY = 'USD' AND a.RTRBNK = '01' 
UNION ALL
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'PPTO_PROMEDIO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2)
AND a.RTRCCY = 'USD' AND a.RTRBNK = '01' 
UNION ALL
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'REG_FOTO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2)
AND a.RTRCCY = 'USD' AND a.RTRBNK = '01' 
UNION ALL
SELECT a.RTRBNK AS COD_ENTITY, a.RTRCCY AS COD_CURRENCY, a.RTREXR AS EXCH_RATE, 'REG_PROMEDIO' as COD_CONT, CONCAT(CONCAT('2', LPAD(CAST(a.RTRRDY AS string), 3, '0')), LPAD(CAST(a.RTRRDM AS string), 2, '0'), LPAD(CAST(a.RTRRDD  AS string), 2, '0')) AS DATA_DATE
FROM MIS_LOAD_RTRNS a
WHERE a.RTRRDY = CAST(SUBSTR('${var:periodo}',3,2) AS SMALLINT)
AND LPAD(CAST(a.RTRRDM AS string), 2, '0') = SUBSTR('${var:periodo}',5,2)
AND LPAD(CAST(a.RTRRDD AS string), 2, '0') = SUBSTR('${var:periodo}',7,2)
AND a.RTRCCY = 'USD' AND a.RTRBNK = '01' 
;
*/

--COMPUTE STATS MIS_PAR_EXCH_RATE;

INSERT INTO MIS_PAR_EXCH_RATE PARTITION (DATA_DATE)
SELECT PRIOR.COD_ENTITY, PRIOR.COD_CURRENCY, PRIOR.EXCH_RATE, 'TC_FOTO' AS COD_CONT, '${var:periodo}' AS DATA_DATE
FROM 
(SELECT A.COD_ENTITY, A.COD_CURRENCY, A.EXCH_RATE, A.DATA_DATE
FROM MIS_PAR_EXCH_RATE A
INNER JOIN 
(SELECT MAX(DATA_DATE) AS DATA_DATE 
FROM MIS_PAR_EXCH_RATE 
WHERE DATA_DATE < '${var:periodo}') B
ON A.DATA_DATE = B.DATA_DATE) PRIOR
LEFT JOIN 
(SELECT DISTINCT COD_ENTITY, COD_CURRENCY 
FROM MIS_PAR_EXCH_RATE 
WHERE DATA_DATE =  '${var:periodo}') TODAY
ON PRIOR.COD_ENTITY = TODAY.COD_ENTITY AND PRIOR.COD_CURRENCY = TODAY.COD_CURRENCY
WHERE TODAY.COD_CURRENCY IS NULL;


--- Elimincación de la tabla temporal GLMST ---
--TRUNCATE TABLE IF EXISTS MIS_TMP_GLMST;
--DROP TABLE IF EXISTS MIS_TMP_GLMST;