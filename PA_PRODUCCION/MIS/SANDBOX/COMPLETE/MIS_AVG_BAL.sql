--------------------------------------------------------------- Motor de Saldos Medios y Arrastre de Muertos ----------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

--COMPUTE STATS MIS_APR_${var:tabla};
--COMPUTE STATS MIS_APR_CONTRACT_DT;

------------ Arrastre de Muertos ------------
INSERT INTO MIS_APR_${var:tabla}
PARTITION (DATA_DATE='${var:periodo}')
    SELECT A.COD_CONT, A.IDF_CTO, A.COD_GL, A.DES_GL, A.COD_ACCO_CENT, A.COD_OFFI, A.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, A.EOPBAL_CAP, A.EOPBAL_INT,
A.AVGBAL_CAP, A.AVGBAL_INT, CASE WHEN C.IDF_CTO IS NULL THEN A.PL1 ELSE 0 END AS PL, 
CONCAT(A.COD_INFO_SOURCE,IF(STRRIGHT(A.COD_INFO_SOURCE, 2)!='_M', '_M', ''))
FROM
(SELECT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, 0 AS EOPBAL_CAP, 0 AS EOPBAL_INT,
0 AS AVGBAL_CAP, 0 AS AVGBAL_INT, MAX(PL) AS PL1, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE --STRRIGHT(COD_INFO_SOURCE,2) <> '_M' AND 
YEAR(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = YEAR(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))
AND (MONTH(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))
AND TO_TIMESTAMP(DATA_DATE, 'yyyyMMdd') = DATE_SUB(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'), 1))
--AND DATA_DATE < '${var:periodo}')
GROUP BY COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_INFO_SOURCE) A
LEFT JOIN
(SELECT DISTINCT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE DATA_DATE = '${var:periodo}') B
ON A.IDF_CTO = B.IDF_CTO AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_VALUE = B.COD_VALUE AND A.COD_PRODUCT = B.COD_PRODUCT AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_CONT = B.COD_CONT AND ISNULL(A.COD_ACCO_CENT,'0') = ISNULL(B.COD_ACCO_CENT,'0')
AND ISNULL(A.COD_ACT_TYPE,'0') = ISNULL(B.COD_ACT_TYPE,'0')
LEFT JOIN (SELECT * FROM MIS_APR_${var:tabla} WHERE DATA_DATE = '${var:periodo}') C
ON A.IDF_CTO = C.IDF_CTO AND A.COD_VALUE = C.COD_VALUE
WHERE B.IDF_CTO IS NULL
ORDER BY IDF_CTO ASC
;
/*
INSERT INTO MIS_APR_${var:tabla}
PARTITION (DATA_DATE='${var:periodo}')
SELECT A.COD_CONT, A.IDF_CTO, A.COD_GL, A.DES_GL, A.COD_ACCO_CENT, A.COD_OFFI, A.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, A.EOPBAL_CAP, A.EOPBAL_INT,
A.AVGBAL_CAP, A.AVGBAL_INT, 0 AS PL1, CONCAT(A.COD_INFO_SOURCE,IF(STRRIGHT(A.COD_INFO_SOURCE, 2)!='_M', '_M', ''))
FROM
(SELECT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, 0 AS EOPBAL_CAP, 0 AS EOPBAL_INT,
0 AS AVGBAL_CAP, 0 AS AVGBAL_INT, 0 AS PL1, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE (TO_TIMESTAMP(DATA_DATE,'yyyyMMdd') = DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1))
GROUP BY COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, 
COD_ACT_TYPE, COD_INFO_SOURCE) A
LEFT JOIN
(SELECT DISTINCT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE DATA_DATE = '${var:periodo}') B
ON A.IDF_CTO = B.IDF_CTO AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_VALUE = B.COD_VALUE AND A.COD_PRODUCT = B.COD_PRODUCT AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_CONT = B.COD_CONT
WHERE B.IDF_CTO IS NULL
ORDER BY IDF_CTO ASC
;
*/
------------ Modificaci칩n APR_Contract_DT ------------
INSERT INTO MIS_APR_CONTRACT_DT PARTITION(DATA_DATE, COD_INFO_SOURCE)
    SELECT DISTINCT DT_ARR.IDF_CTO_ARR, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_CURRENCY, IDF_CLI, COD_ACCO_CENT, COD_OFFI, COD_BCA_INT, COD_AMRT_MET, COD_RATE_TYPE, RATE_INT, DATE_ORIGIN, DATE_LAST_REV, DATE_PRX_REV, EXP_DATE, FREQ_INT_PAY, COD_UNI_FREQ_INT_PAY, FRE_REV_INT, COD_UNI_FRE_REV_INT, AMRT_TRM, COD_UNI_AMRT_TRM, INI_AM, CUO_AM, CREDIT_LIM_AM,
    PREDEF_RATE_IND, PREDEF_RATE, IND_CHANNEL, COD_TYP_LIC, COD_SELLER, DES_SELLER, COU_CAR_OFF, COD_CONV, COD_EXEC_CTO, COD_COVID_PORT, DATE_DISB, CARD_NUMBER, COD_PROG_CARD, DES_PROG_CARD, '${var:periodo}' AS DATA_DATE, COD_INFO_SOURCE 
    FROM MIS_APR_CONTRACT_DT DT 
    INNER JOIN 
        (SELECT ARR.FEC_MAX, ARR.IDF_CTO AS IDF_CTO_ARR FROM 
            (SELECT ANT.*  FROM 
                (SELECT MAX(DATA_DATE) AS FEC_MAX,IDF_CTO
                FROM MIS_APR_CONTRACT_DT 
                WHERE IDF_CTO <> '0' AND
                /*YEAR(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = YEAR(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
                AND*/ ((MONTH(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
                AND DATA_DATE < '${var:periodo}') OR (TO_TIMESTAMP(DATA_DATE,'yyyyMMdd') = 
                DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1)))
                GROUP BY IDF_CTO)  AS ANT 
                LEFT JOIN 
                (SELECT IDF_CTO AS IDF_CTO2
                FROM MIS_APR_CONTRACT_DT 
                WHERE DATA_DATE = '${var:periodo}') AS NUE 
                ON ANT.IDF_CTO = NUE.IDF_CTO2 WHERE NUE.IDF_CTO2 is NULL) ARR 
            INNER JOIN 
            (SELECT IDF_CTO,COD_PRODUCT, COD_SUBPRODUCT 
            FROM MIS_APR_${var:tabla} 
            WHERE DATA_DATE = '${var:periodo}'
            GROUP BY IDF_CTO,COD_PRODUCT, COD_SUBPRODUCT) AS B 
            ON B.IDF_CTO = ARR.IDF_CTO) AS DT_ARR 
    ON DT_ARR.IDF_CTO_ARR = DT.IDF_CTO AND DT_ARR.FEC_MAX = DT.DATA_DATE;


------------ Tabla para traer siempre el producto cuando esta vivo el contrato ------
DROP TABLE IF EXISTS MIS_TMP_LAST_${var:tabla};
CREATE TABLE MIS_TMP_LAST_${var:tabla} AS
SELECT IDF_CTO, MAX(DATA_DATE) AS DATA_DATE FROM MIS_APR_${var:tabla} 
WHERE STRLEFT(DATA_DATE,6) = STRLEFT('${var:periodo}',6) and DATA_DATE <= '${var:periodo}' AND COD_INFO_SOURCE NOT LIKE '%_M'
AND COD_VALUE IN ('CAP','INT')
GROUP BY IDF_CTO;

------------ Creaci칩n Tabla Temporal Saldos Medios ------------
DROP TABLE IF EXISTS MIS_TMP_LOAD_AVGBAL_${var:tabla};
CREATE TABLE MIS_TMP_LOAD_AVGBAL_${var:tabla}
(IDF_CTO STRING, COD_VALUE STRING, COD_INFO_SOURCE STRING,
AVGBAL_CAP DECIMAL(30,10), AVGBAL_INT DECIMAL(30,10),
COD_CONT STRING);


------------ C치lculo de Saldos Medios ------------
INSERT INTO MIS_TMP_LOAD_AVGBAL_${var:tabla}
    SELECT IDF_CTO, /*COD_BLCE_STATUS,*/ COD_VALUE, /*COD_PRODUCT, COD_SUBPRODUCT,*/ 'A' AS COD_INFO_SOURCE,
    CAST((SUM(EOPBAL_CAP)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1))AS DECIMAL(30,10)) AS AVGBAL_CAP,
    CAST((SUM(EOPBAL_INT)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1)) AS DECIMAL(30,10))AS AVGBAL_INT,
    COD_CONT
    FROM MIS_APR_${var:tabla}
    WHERE Year(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) =  Year(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND Month(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = Month(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND DATA_DATE <= '${var:periodo}'
    AND COD_VALUE <> 'RSL'  
    GROUP BY IDF_CTO, /*COD_BLCE_STATUS,*/ COD_VALUE, /*COD_PRODUCT, COD_SUBPRODUCT,*/ COD_CONT;


------------ Mapeamos el saldo medio siempre en el ultimo producto vivo ---------------
DROP TABLE IF EXISTS MIS_TMP_AVGBAL_${var:tabla};
CREATE TABLE MIS_TMP_AVGBAL_${var:tabla} AS
SELECT A.IDF_CTO, A.COD_VALUE, A.COD_BLCE_STATUS, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, 
CAST(SUM(B.AVGBAL_CAP) AS DECIMAL(11,2)) AS AVGBAL_CAP, CAST(SUM(B.AVGBAL_INT) AS DECIMAL(11,2)) AS AVGBAL_INT
FROM(
SELECT A.DATA_DATE, A.IDF_CTO, A.COD_VALUE, A.COD_BLCE_STATUS, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE
FROM MIS_APR_${var:tabla} A
INNER JOIN MIS_TMP_LAST_${var:tabla} B
ON A.IDF_CTO = B.IDF_CTO AND A.DATA_DATE = B.DATA_DATE
WHERE STRLEFT(A.DATA_DATE,6) = STRLEFT('${var:periodo}',6) and A.DATA_DATE <= '${var:periodo}' AND COD_INFO_SOURCE NOT LIKE '%_M'
AND A.COD_VALUE IN ('CAP','INT')) A
LEFT JOIN MIS_TMP_LOAD_AVGBAL_${var:tabla} AS B  
ON A.IDF_CTO = B.IDF_CTO AND A.COD_VALUE = B.COD_VALUE
GROUP BY A.IDF_CTO, A.COD_VALUE, A.COD_BLCE_STATUS, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE
;

------------ Inserci칩n en la tabla APR_ASSETS ------------
TRUNCATE TABLE IF EXISTS MIS_APR_${var:tabla}_TMP_LOAD;
DROP TABLE IF EXISTS MIS_APR_${var:tabla}_TMP_LOAD;

CREATE TABLE MIS_APR_${var:tabla}_TMP_LOAD AS
SELECT * FROM MIS_APR_${var:tabla}
WHERE DATA_DATE = '${var:periodo}';

--COMPUTE STATS MIS_APR_${var:tabla}_TMP_LOAD;

ALTER TABLE MIS_APR_${var:tabla}
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

INSERT INTO MIS_APR_${var:tabla} PARTITION(DATA_DATE)
SELECT A.COD_CONT, A.IDF_CTO, A.COD_GL, NULL, A.COD_ACCO_CENT, A.COD_OFFI, A.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, A.EOPBAL_CAP, 
A.EOPBAL_INT, ISNULL(B.AVGBAL_CAP,0), ISNULL(B.AVGBAL_INT,0), A.PL, A.COD_INFO_SOURCE, A.DATA_DATE
FROM MIS_APR_${var:tabla}_TMP_LOAD AS A
LEFT JOIN MIS_TMP_AVGBAL_${var:tabla} AS B   
ON (A.IDF_CTO = B.IDF_CTO AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_PRODUCT = B.COD_PRODUCT 
AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_ACT_TYPE = B.COD_ACT_TYPE AND A.COD_VALUE = B.COD_VALUE)  
WHERE (A.DATA_DATE = '${var:periodo}');


------------ Limpiar las Tablas Temporales ------------
--TRUNCATE TABLE MIS_TMP_LOAD_AVGBAL_${var:tabla};
--DROP TABLE MIS_TMP_LOAD_AVGBAL_${var:tabla};

/*
------------ Inserci칩n en tabl칩n para c치lculo de SM Mensual ------------
SELECT 'INSERCION SALDO MEDIO';
----Tabla temporal con la informaci칩n punta del mes
DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_EOPBAL_TBL;
CREATE TABLE MIS_TMP_${var:tabla}_EOPBAL_TBL AS 
SELECT * FROM MIS_TBL_AVGBAL WHERE DATA_DATE = SUBSTR('${var:periodo}', 1, 6);


ALTER TABLE MIS_TBL_AVGBAL
DROP IF EXISTS PARTITION (DATA_DATE = SUBSTR('${var:periodo}', 1, 6));

----Cruce con APR_ASSETS para los saldos nuevos, respetando los existentes para capital
INSERT INTO MIS_TBL_AVGBAL
PARTITION (DATA_DATE = SUBSTR('${var:periodo}', 1, 6))
SELECT ISNULL(A.IDF_CTO, B.IDF_CTO) IDF_CTO, ISNULL(A.COD_CONT, B.COD_CONT) COD_CONT, ISNULL(A.COD_ENTITY, B.COD_ENTITY) COD_ENTITY, 
ISNULL(A.COD_PRODUCT, B.COD_PRODUCT) COD_PRODUCT, ISNULL(A.COD_SUBPRODUCT, B.COD_SUBPRODUCT) COD_SUBPRODUCT, 
ISNULL(A.COD_OFFI, B.COD_OFFI) COD_OFFI, ISNULL(A.COD_BLCE_STATUS, B.COD_BLCE_STATUS) COD_BLCE_STATUS, 
ISNULL(A.COD_VALUE, B.COD_VALUE) COD_VALUE, ISNULL(A.COD_CURRENCY, B.COD_CURRENCY) COD_CURRENCY,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '01', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_1), B.EOPBAL_CAP_1) EOPBAL_CAP_1,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '02', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_2), B.EOPBAL_CAP_2) EOPBAL_CAP_2,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '03', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_3), B.EOPBAL_CAP_3) EOPBAL_CAP_3,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '04', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_4), B.EOPBAL_CAP_4) EOPBAL_CAP_4,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '05', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_5), B.EOPBAL_CAP_5) EOPBAL_CAP_5,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '06', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_6), B.EOPBAL_CAP_6) EOPBAL_CAP_6,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '07', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_7), B.EOPBAL_CAP_7) EOPBAL_CAP_7,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '08', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_8), B.EOPBAL_CAP_8) EOPBAL_CAP_8,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '09', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_9), B.EOPBAL_CAP_9) EOPBAL_CAP_9,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '10', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_10), B.EOPBAL_CAP_10) EOPBAL_CAP_10,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '11', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_11), B.EOPBAL_CAP_11) EOPBAL_CAP_11,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '12', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_12), B.EOPBAL_CAP_12) EOPBAL_CAP_12,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '13', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_13), B.EOPBAL_CAP_13) EOPBAL_CAP_13,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '14', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_14), B.EOPBAL_CAP_14) EOPBAL_CAP_14,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '15', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_15), B.EOPBAL_CAP_15) EOPBAL_CAP_15,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '16', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_16), B.EOPBAL_CAP_16) EOPBAL_CAP_16,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '17', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_17), B.EOPBAL_CAP_17) EOPBAL_CAP_17,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '18', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_18), B.EOPBAL_CAP_18) EOPBAL_CAP_18,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '19', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_19), B.EOPBAL_CAP_19) EOPBAL_CAP_19,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '20', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_20), B.EOPBAL_CAP_20) EOPBAL_CAP_20,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '21', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_21), B.EOPBAL_CAP_21) EOPBAL_CAP_21,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '22', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_22), B.EOPBAL_CAP_22) EOPBAL_CAP_22,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '23', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_23), B.EOPBAL_CAP_23) EOPBAL_CAP_23,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '24', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_24), B.EOPBAL_CAP_24) EOPBAL_CAP_24,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '25', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_25), B.EOPBAL_CAP_25) EOPBAL_CAP_25,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '26', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_26), B.EOPBAL_CAP_26) EOPBAL_CAP_26,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '27', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_27), B.EOPBAL_CAP_27) EOPBAL_CAP_27,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '28', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_28), B.EOPBAL_CAP_28) EOPBAL_CAP_28,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '29', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_29), B.EOPBAL_CAP_29) EOPBAL_CAP_29,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '30', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_30), B.EOPBAL_CAP_30) EOPBAL_CAP_30,
IF(SUBSTR(A.DATA_DATE, 7, 2) = '31', ISNULL(A.EOPBAL_CAP, B.EOPBAL_CAP_31), B.EOPBAL_CAP_31) EOPBAL_CAP_31,
A.COD_INFO_SOURCE
FROM (
    SELECT * FROM MIS_APR_${var:tabla}
    WHERE DATA_DATE = '${var:periodo}' AND COD_VALUE != 'RSL') A
FULL JOIN (SELECT * FROM MIS_TMP_${var:tabla}_EOPBAL_TBL) B
ON SUBSTR(A.DATA_DATE, 1, 6) = B.DATA_DATE AND A.IDF_CTO = B.IDF_CTO AND A.COD_VALUE = B.COD_VALUE AND A.COD_PRODUCT = B.COD_PRODUCT AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_CURRENCY = B.COD_CURRENCY AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_ENTITY = B.COD_ENTITY
;
*/

----Borrado de tablas temporales
TRUNCATE TABLE IF EXISTS MIS_TMP_${var:tabla}_EOPBAL_TBL;
DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_EOPBAL_TBL;