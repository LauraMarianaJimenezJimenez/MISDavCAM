----------------------------------------------------------- MOTOR DE TTI -----------------------------------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

--COMPUTE STATS MIS_DWH_${var:tabla}_M;
COMPUTE INCREMENTAL STATS MIS_DWH_${var:tabla} partition (data_date = '${var:periodo}');
/*
DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_DIA_M;
CREATE TABLE MIS_TMP_${var:tabla}_DIA_M AS
SELECT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, 
COD_SUBPRODUCT, CAST(AVG(FTP1) AS decimal(30, 6)) FTP1, MIN(COD_METHOD1) AS COD_METHOD1, CAST(AVG(FTP2) AS decimal(30, 6)) FTP2, MIN(COD_METHOD2) AS COD_METHOD2, IND_POOL, COD_INFO_SOURCE
FROM MIS_DWH_${var:tabla}
WHERE DATA_DATE = '${var:periodo}'
AND IND_POOL = 'N'
AND (FTP1 <> 0 OR FTP2 <> 0)
AND COD_VALUE <> 'RSL'
GROUP BY COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, 
COD_SUBPRODUCT, IND_POOL, COD_INFO_SOURCE
;
*/
---Cálculo del ftp con promedio ponderado---
TRUNCATE TABLE IF EXISTS MIS_TMP_${var:tabla}_DIA_M;
DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_DIA_M;
CREATE TABLE MIS_TMP_${var:tabla}_DIA_M AS
SELECT COD_CONT, IDF_CTO,/* COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI,*/
    COD_VALUE, COD_CURRENCY, COD_ENTITY,/* COD_ACT_TYPE,*/
    CASE WHEN SUM(EOPBAL_CAP) = 0 THEN 0 ELSE SUM(FTP1_MUL)/SUM(EOPBAL_CAP) END AS FTP1, 
    CASE WHEN SUM(EOPBAL_CAP) = 0 THEN 0 ELSE SUM(FTP2_MUL)/SUM(EOPBAL_CAP) END AS FTP2,
    IND_POOL, COD_INFO_SOURCE
FROM(   
SELECT a.DATA_DATE, COD_CONT, a.IDF_CTO, COD_GL, DES_GL, a.COD_ACCO_CENT, a.COD_OFFI, 
    a.COD_VALUE, a.COD_CURRENCY, a.COD_ENTITY, a.COD_ACT_TYPE, SUM(b.EOPBAL_CAP) AS EOPBAL_CAP, 
    CASE WHEN ISNULL(ENG.COD_BCA_INT,ENG2.COD_BCA_INT) IN (4,5) AND (DAY(LAST_DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))) = 28 AND DAY(TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd')) = 28)
         THEN SUM(b.EOPBAL_CAP) * SUM(FTP1) * 3
    ELSE SUM(b.EOPBAL_CAP) * SUM(FTP1) END AS FTP1_MUL, 
    CASE WHEN ISNULL(ENG.COD_BCA_INT,ENG2.COD_BCA_INT) IN (4,5) AND (DAY(LAST_DAY(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))) = 28 AND DAY(TO_TIMESTAMP(a.DATA_DATE, 'yyyyMMdd')) = 28)
         THEN SUM(b.EOPBAL_CAP) * SUM(FTP2) * 3
    ELSE SUM(b.EOPBAL_CAP) * SUM(FTP2) END AS FTP2_MUL,
    IND_POOL, a.COD_INFO_SOURCE
FROM MIS_DWH_${var:tabla} a
LEFT JOIN (SELECT * FROM MIS_APR_CONTRACT_DT WHERE DATA_DATE = '${var:periodo}') DT 
ON a.DATA_DATE=DT.DATA_DATE AND a.IDF_CTO=DT.IDF_CTO AND a.COD_ENTITY=DT.COD_ENTITY 
LEFT JOIN MIS_APR_CLIENT_DT CLI 
ON CLI.DATA_DATE = DT.DATA_DATE AND CLI.IDF_CLI = DT.IDF_CLI
LEFT JOIN (SELECT DISTINCT COD_BLCE_PROD, COD_BLCE_STATUS, COD_CURRENCY, COD_BUSINESS_LINE, COD_SEGMENT, COD_AMRT_MET, COD_BCA_INT FROM MIS_PAR_TTI_ENG) ENG
ON a.COD_BLCE_PROD = ENG.COD_BLCE_PROD AND a.COD_BLCE_STATUS = ENG.COD_BLCE_STATUS AND a.COD_CURRENCY = ENG.COD_CURRENCY 
    AND IF(TRIM(ENG.COD_BUSINESS_LINE)='', '', a.COD_BUSINESS_LINE) = TRIM(ENG.COD_BUSINESS_LINE)
    AND IF(TRIM(ENG.COD_SEGMENT)='', '', CLI.COD_SEGMENT) = TRIM(ENG.COD_SEGMENT)
    AND (IF(TRIM(DT.COD_AMRT_MET) IS NULL OR TRIM(DT.COD_AMRT_MET) = '', 'NA', TRIM(DT.COD_AMRT_MET))=
    IF(TRIM(ENG.COD_AMRT_MET) IS NULL OR TRIM(ENG.COD_AMRT_MET) = '', 'NA', TRIM(ENG.COD_AMRT_MET)))
LEFT JOIN (SELECT DISTINCT COD_BLCE_PROD, COD_BLCE_STATUS, COD_CURRENCY, COD_BUSINESS_LINE, COD_SEGMENT, COD_AMRT_MET, COD_BCA_INT FROM MIS_PAR_TTI_ENG WHERE TRIM(COD_AMRT_MET) = '') ENG2
ON a.COD_BLCE_PROD = ENG2.COD_BLCE_PROD AND a.COD_BLCE_STATUS = ENG2.COD_BLCE_STATUS AND a.COD_CURRENCY = ENG2.COD_CURRENCY 
    AND IF(TRIM(ENG2.COD_BUSINESS_LINE)='', '', a.COD_BUSINESS_LINE) = TRIM(ENG2.COD_BUSINESS_LINE)
    AND IF(TRIM(ENG2.COD_SEGMENT)='', '', CLI.COD_SEGMENT) = TRIM(ENG2.COD_SEGMENT)
LEFT JOIN (SELECT DATA_DATE, IDF_CTO, COD_VALUE, SUM(EOPBAL_CAP) AS EOPBAL_CAP FROM MIS_DWH_${var:tabla}
WHERE SUBSTR(DATA_DATE, 1, 6) = SUBSTR('${var:periodo}', 1, 6) AND IND_POOL IS NULL AND COD_VALUE <> 'RSL'
GROUP BY DATA_DATE, IDF_CTO, COD_VALUE
) b
ON a.DATA_DATE = b.DATA_DATE AND a.IDF_CTO = b.IDF_CTO AND a.COD_VALUE = b.COD_VALUE
WHERE SUBSTR(a.DATA_DATE, 1, 6) = SUBSTR('${var:periodo}', 1, 6)
    AND IND_POOL = 'N' AND a.COD_VALUE <> 'RSL' AND (FTP1 <> 0 OR FTP2 <> 0)
GROUP BY a.DATA_DATE, COD_CONT, a.IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI,
    COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_ACT_TYPE, IND_POOL, COD_INFO_SOURCE, ENG.COD_BCA_INT, ENG2.COD_BCA_INT
)A
GROUP BY COD_CONT, IDF_CTO,/* COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI,*/
    COD_VALUE, COD_CURRENCY, COD_ENTITY,/* COD_ACT_TYPE,*/ IND_POOL, COD_INFO_SOURCE
;

----Cálculo del FTP RESULT 
DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_RES_M;
CREATE TABLE MIS_TMP_${var:tabla}_RES_M AS
SELECT A.COD_CONT, A.IDF_CTO, B.COD_GL, B.DES_GL, B.COD_ACCO_CENT, B.COD_OFFI, B.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, 
B.COD_PRODUCT, B.COD_SUBPRODUCT, B.COD_ACT_TYPE, B.EOPBAL_CAP, B.EOPBAL_INT, B.AVGBAL_CAP, B.AVGBAL_INT, B.PL, B.COD_GL_GROUP, B.DES_GL_GROUP, 
B.ACCOUNT_CONCEPT, B.COD_PL_ACC, B.DES_PL_ACC, B.COD_BLCE_PROD, B.DES_BLCE_PROD, B.COD_BUSINESS_LINE, B.DES_BUSINESS_LINE, B.COD_METHOD1, A.FTP1, B.COD_METHOD2, A.FTP2, B.FTP_RESULT, A.IND_POOL, B.DATA_DATE, B.COD_INFO_SOURCE
FROM MIS_TMP_${var:tabla}_DIA_M A
LEFT JOIN (SELECT * FROM MIS_DWH_${var:tabla} WHERE DATA_DATE = '${var:periodo}' AND IND_POOL = 'N') B
ON A.IDF_CTO = B.IDF_CTO AND A.COD_VALUE = B.COD_VALUE AND A.COD_INFO_SOURCE = B.COD_INFO_SOURCE
; 

----Eliminación de tablas temporales 
--TRUNCATE TABLE IF EXISTS MIS_TMP_${var:tabla}_FTP_M;
--DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_FTP_M;

----Actualización final del FTP y FTP_RESULT en tabla DWH_${var:tabla}_M
ALTER TABLE MIS_DWH_${var:tabla}_M DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='ENG TTI');
ALTER TABLE MIS_DWH_${var:tabla}_M DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='ENG LIQ');
ALTER TABLE MIS_DWH_${var:tabla}_M DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='ENG PEAJE');
ALTER TABLE MIS_DWH_${var:tabla}_M DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='ENG ENC');
ALTER TABLE MIS_DWH_${var:tabla}_M DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}', COD_INFO_SOURCE='ENG POR');

--COMPUTE STATS MIS_TMP_${var:tabla}_RES_M;

INSERT INTO MIS_DWH_${var:tabla}_M PARTITION (DATA_DATE, COD_INFO_SOURCE)
SELECT TMP.COD_CONT, TMP.IDF_CTO, TMP.COD_GL, TMP.DES_GL, TMP.COD_ACCO_CENT, TMP.COD_OFFI, TMP.COD_BLCE_STATUS, TMP.COD_VALUE, TMP.COD_CURRENCY, TMP.COD_ENTITY, TMP.COD_PRODUCT, TMP.COD_SUBPRODUCT, TMP.COD_ACT_TYPE, CAST(0 AS DECIMAL(30,10)), CAST(0 AS DECIMAL(30,10)), CAST(0 AS DECIMAL(30,10)), 
    CAST(0 AS DECIMAL(30,10)), CAST(0 AS DECIMAL(30,10)), 
    TMP.COD_GL_GROUP, TMP.DES_GL_GROUP, TMP.ACCOUNT_CONCEPT, TMP.COD_PL_ACC, TMP.DES_PL_ACC, 
    TMP.COD_BLCE_PROD, TMP.DES_BLCE_PROD, 
    TMP.COD_BUSINESS_LINE, TMP.DES_BUSINESS_LINE, TMP.COD_METHOD1, CAST(TMP.FTP1 AS DECIMAL(30,10)), TMP.COD_METHOD2, CAST(TMP.FTP2 AS DECIMAL(30,10)), TMP.FTP_RESULT, TMP.IND_POOL, 
    TMP.DATA_DATE, TMP.COD_INFO_SOURCE 
FROM MIS_TMP_${var:tabla}_RES_M TMP;

----Eliminación de tablas temporales 
--TRUNCATE TABLE IF EXISTS MIS_TMP_${var:tabla}_FINAL_M;
--DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_FINAL_M;
--TRUNCATE TABLE IF EXISTS MIS_TMP_${var:tabla}_RES_M;
--DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_RES_M;

COMPUTE INCREMENTAL STATS MIS_DWH_${var:tabla}_M partition (data_date = '${var:periodo}');

----Inserción de registros por Pool de fondos
INSERT INTO MIS_DWH_${var:tabla}_M PARTITION (DATA_DATE, COD_INFO_SOURCE)
SELECT DWH.COD_CONT, DWH.IDF_CTO, DWH.COD_GL, DWH.DES_GL, DWH.COD_ACCO_CENT, DWH.COD_OFFI, DWH.COD_BLCE_STATUS, DWH.COD_VALUE, DWH.COD_CURRENCY, DWH.COD_ENTITY, DWH.COD_PRODUCT, DWH.COD_SUBPRODUCT, DWH.COD_ACT_TYPE, 0 AS EOPBAL_CAP, 0 AS EOPBAL_INT, 0 AS AVGBAL_CAP, 0 AS AVGBAL_INT, 0 AS PL, 
    DWH.COD_GL_GROUP, DWH.DES_GL_GROUP, DWH.ACCOUNT_CONCEPT, DWH.COD_PL_ACC, DWH.DES_PL_ACC, DWH.COD_BLCE_PROD, DWH.DES_BLCE_PROD, 
    'UNIDAD_FONDEO' AS COD_BUSINESS_LINE, 'UNIDAD_FONDEO' AS DES_BUSINESS_LINE, DWH.COD_METHOD1, DWH.FTP1, DWH.COD_METHOD2, DWH.FTP2,
    CAST(-1*DWH.FTP_RESULT AS decimal(30, 10)) AS FTP_RESULT, 'Y' AS IND_POOL, DWH.DATA_DATE, DWH.COD_INFO_SOURCE   
FROM MIS_DWH_${var:tabla}_M DWH 
WHERE DWH.DATA_DATE = '${var:periodo}' AND DWH.COD_VALUE <> 'RSL' AND DWH.IND_POOL = 'N' AND DWH.FTP1 IS NOT NULL;