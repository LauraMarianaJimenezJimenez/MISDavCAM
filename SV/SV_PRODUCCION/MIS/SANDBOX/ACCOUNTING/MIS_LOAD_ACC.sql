--------------------------------------------------------------- MIS_APR_ACCOUNTING ---------------------------------------------------------------

--- Seleccion de Base de datos de Ejecuci칩n ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

--- Eliminacion y Carga diaria de la tabla GLMST ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_GLMST; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/GLMST.CSV' INTO TABLE MIS_LOAD_GLMST;

--- Eliminacion y Carga diaria de la tabla GLBLN ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_GLBLN; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/GLBLN.CSV' INTO TABLE MIS_LOAD_GLBLN;

--- Eliminacion y Carga diaria de la tabla WFSALDOS ---
ALTER TABLE MIS_LOAD_WFSALDOS DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');
ALTER TABLE MIS_LOAD_WFSALDOS ADD IF NOT EXISTS PARTITION (DATA_DATE = '${var:periodo}');
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/WFSALDOS.CSV' INTO TABLE MIS_LOAD_WFSALDOS PARTITION (DATA_DATE = '${var:periodo}');

--- Llenado de la Tabla Contabilidad de Valores ---
ALTER TABLE MIS_LOAD_VALORES DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');
ALTER TABLE MIS_LOAD_VALORES ADD IF NOT EXISTS PARTITION (DATA_DATE = '${var:periodo}');
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/Carga_Manual_Valores.csv' INTO TABLE MIS_LOAD_VALORES PARTITION (DATA_DATE = '${var:periodo}');

--- Eliminacion y Carga diaria de la tabla SALDOSCON ---
TRUNCATE TABLE IF EXISTS MIS_LOAD_SALDOSCON; 
LOAD DATA INPATH '${var:ruta_fuentes_contabilidad}/SALDOSCON.CSV' INTO TABLE MIS_LOAD_SALDOSCON;

--- Creacion de Tabla Temporal para a침adir fecha a la tabla saldoscon ---
TRUNCATE TABLE IF EXISTS MIS_TMP_SALDOSCON;
DROP TABLE IF EXISTS MIS_TMP_SALDOSCON;
CREATE TABLE MIS_TMP_SALDOSCON AS 
SELECT *, '${var:periodo}' AS DATA_DATE
FROM MIS_LOAD_SALDOSCON a;

--- Creacion de Tabla Temporal para extraer valores usados de la fuente GLMST y eliminar duplicados ---
TRUNCATE TABLE IF EXISTS MIS_TMP_GLMST;
DROP TABLE IF EXISTS MIS_TMP_GLMST;
CREATE TABLE MIS_TMP_GLMST AS 
SELECT a.GLMBNK, a.GLMCCY, a.GLMGLN, MAX(a.GLMDSC) AS GLMDSC
FROM MIS_LOAD_GLMST a 
GROUP BY a.GLMBNK, a.GLMCCY, a.GLMGLN;

TRUNCATE TABLE IF EXISTS MIS_PAR_CAT_CAF;
INSERT INTO MIS_PAR_CAT_CAF
SELECT DISTINCT a.GLBBNK AS COD_ENTITY, a.GLBCCY AS COD_CURRENCY, TRIM(a.GLBGLN) AS COD_GL_GROUP, REPLACE(TRIM(b.GLMDSC),'.',' ') AS DES_GL_GROUP, CASE strleft(TRIM(a.GLBGLN),1) WHEN '1' THEN 'A' WHEN '2' THEN 'P' WHEN '3' THEN 'PT' WHEN '4' THEN 'FB' WHEN '5' THEN 'FB' WHEN '6' THEN 'RI' WHEN '7' THEN 'RG' WHEN '8' THEN 'RG' ELSE 'FB' END AS ACCOUNT_CONCEPT
FROM MIS_LOAD_GLBLN a
LEFT JOIN MIS_TMP_GLMST b
ON a.GLBGLN = b.GLMGLN AND a.GLBBNK = b.GLMBNK AND b.GLMCCY = 'USD'
UNION ALL
SELECT '04' AS COD_ENTITY, a.VALCUR AS COD_CURRENCY, a.VALGLN AS COD_GL, a.VALDSC AS DES_GL, CASE strleft(TRIM(a.VALGLN),1) WHEN '1' THEN 'A' WHEN '2' THEN 'P' WHEN '3' THEN 'PT' WHEN '4' THEN 'FB' WHEN '5' THEN 'FB' WHEN '6' THEN 'RI' WHEN '7' THEN 'RG' WHEN '8' THEN 'RG' ELSE 'FB' END AS ACCOUNT_CONCEPT
FROM MIS_LOAD_VALORES a
WHERE STRLEFT(a.VALGLN, 1) IN ('1', '2', '3', '4', '5') AND DATA_DATE = '${var:periodo}' AND LENGTH(a.VALGLN) = 16
UNION ALL
SELECT '05' AS COD_ENTITY, 'USD' AS COD_CURRENCY, RPAD(a.CON_GLN, 16, '0') AS COD_GL, a.CON_DSC AS DES_GL, CASE strleft(TRIM(a.CON_GLN),1) WHEN '1' THEN 'A' WHEN '2' THEN 'P' WHEN '3' THEN 'RG' WHEN '4' THEN 'RI' ELSE 'FB' END AS ACCOUNT_CONCEPT
FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY DATA_DATE ORDER BY CON_GLN) ORDEN FROM MIS_TMP_SALDOSCON) a
INNER JOIN (SELECT *, ROW_NUMBER() OVER (PARTITION BY DATA_DATE ORDER BY CON_GLN) ORDEN FROM MIS_TMP_SALDOSCON) b
ON a.ORDEN = b.ORDEN+1
WHERE STRLEFT(b.CON_GLN, 1) IN ('1', '2', '3', '4', '5')
AND LENGTH(b.CON_GLN) - LENGTH(a.CON_GLN) >= 0
;

--- Limpieza de partici칩n ----
ALTER TABLE MIS_APR_ACCOUNTING
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

--- Aprovisionamiento de la informacion de Balance en la tabla definitiva ---

--- Contabilidad Banco ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.WFSGLN AS COD_GL, b.GLMDSC AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, '01' AS COD_ENTITY, 
    CAST(a.WFSAMT AS DECIMAL(30,10)) AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, CAST(a.WFSAMT AS DECIMAL(30,10)) AS AVGBAL_CAP, NULL AVGBAL_INT, NULL AS PL, 'WFSALDOS' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_WFSALDOS a
	WHERE STRLEFT(a.WFSGLN, 1) NOT IN ('6', '7', '8') AND a.WFSORD = '8' AND DATA_DATE= '${var:periodo}') a 
LEFT JOIN MIS_TMP_GLMST b
ON a.WFSGLN = b.GLMGLN AND b.GLMBNK = '01' AND b.GLMCCY = 'USD';

--- Contabilidad Entidades Servicios e Inversiones ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.GLBGLN AS COD_GL, REGEXP_REPLACE(b.GLMDSC, '"', '') AS DES_GL, NULL AS COD_ACCO_CENT, a.GLBBRN AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, REGEXP_REPLACE(a.GLBBNK, '"', '') AS COD_ENTITY, 
    CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN a.GLBBBL + a.GLBJAB
        WHEN  2 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB
        WHEN  3 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB
        WHEN  4 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB
        WHEN  5 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB
        WHEN  6 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB
        WHEN  7 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB 
        WHEN  8 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB
        WHEN  9 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB
        WHEN 10 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB + a.GLBOCB
        WHEN 11 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB + a.GLBOCB + a.GLBNOB
        WHEN 12 THEN a.GLBBBL + a.GLBJAB + a.GLBFEB + a.GLBMAB + a.GLBAPB + a.GLBMYB + a.GLBJUB + a.GLBJLB + a.GLBAUB + a.GLBSEB + a.GLBOCB + a.GLBNOB + a.GLBDEB
    END AS decimal(30, 10)) AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN a.GLBJAV
        WHEN  2 THEN a.GLBFEV
        WHEN  3 THEN a.GLBMAV
        WHEN  4 THEN a.GLBAPV
        WHEN  5 THEN a.GLBMYV
        WHEN  6 THEN a.GLBJUV
        WHEN  7 THEN a.GLBJLV 
        WHEN  8 THEN a.GLBAUV
        WHEN  9 THEN a.GLBSEV
        WHEN 10 THEN a.GLBOCV
        WHEN 11 THEN a.GLBNOV
        WHEN 12 THEN a.GLBDEV
    END AS decimal(30, 10)) AVGBAL_CAP, NULL AVGBAL_INT, NULL AS PL, 'GLBLN' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_GLBLN a
	WHERE STRLEFT(a.GLBGLN, 1) NOT IN ('6', '7', '8') AND GLBCCY = 'USD' AND GLBBNK IN ('02','03')) a 
LEFT JOIN MIS_TMP_GLMST b
ON a.GLBGLN = b.GLMGLN AND a.GLBBNK = b.GLMBNK AND a.GLBCCY = b.GLMCCY;

--- Contabilidad Valores ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.VALGLN AS COD_GL, a.VALDSC AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, a.VALCUR AS COD_CURRENCY, '04' AS COD_ENTITY, 
    CAST(a.VALAMT AS DECIMAL(30,10)) AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, CAST(a.VALAMT AS DECIMAL(30,10)) AS AVGBAL_CAP, NULL AVGBAL_INT, NULL AS PL, 'MANUAL_VALORES' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_VALORES a
	WHERE STRLEFT(a.VALGLN, 1) IN ('1', '2', '3', '4', '5') AND DATA_DATE = '${var:periodo}' AND LENGTH(a.VALGLN) = 16) a;

--- Contabilidad Seguros ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, RPAD(a.CON_GLN, 16, '0') AS COD_GL, a.CON_DSC AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, '05' AS COD_ENTITY, 
    CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN a.CON_JAN
        WHEN  2 THEN a.CON_FEB
        WHEN  3 THEN a.CON_MAR
        WHEN  4 THEN a.CON_APR
        WHEN  5 THEN a.CON_MAY
        WHEN  6 THEN a.CON_JUN
        WHEN  7 THEN a.CON_JUL
        WHEN  8 THEN a.CON_AUG
        WHEN  9 THEN a.CON_SEP
        WHEN 10 THEN a.CON_OCT
        WHEN 11 THEN a.CON_NOV
        WHEN 12 THEN a.CON_DEC
    END AS decimal(30, 10)) AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, 
    CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN a.CON_JAN
        WHEN  2 THEN a.CON_FEB
        WHEN  3 THEN a.CON_MAR
        WHEN  4 THEN a.CON_APR
        WHEN  5 THEN a.CON_MAY
        WHEN  6 THEN a.CON_JUN
        WHEN  7 THEN a.CON_JUL
        WHEN  8 THEN a.CON_AUG
        WHEN  9 THEN a.CON_SEP
        WHEN 10 THEN a.CON_OCT
        WHEN 11 THEN a.CON_NOV
        WHEN 12 THEN a.CON_DEC
    END AS decimal(30, 10)) AS AVGBAL_CAP, 
    NULL AS AVGBAL_INT, NULL AS PL, 'SALDOSCON' COD_INFO_SOURCE 
FROM (
	SELECT b.*
	FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY DATA_DATE ORDER BY CON_GLN) ORDEN FROM MIS_TMP_SALDOSCON) a
	INNER JOIN (SELECT *, ROW_NUMBER() OVER (PARTITION BY DATA_DATE ORDER BY CON_GLN) ORDEN FROM MIS_TMP_SALDOSCON) b
	ON a.ORDEN = b.ORDEN+1
	WHERE STRLEFT(b.CON_GLN, 1) IN ('1', '2', '3', '4', '5')
	AND LENGTH(b.CON_GLN) - LENGTH(a.CON_GLN) >= 0 
	) a;

--- Aprovisionamiento de Informaci칩n de P&G (Ingresos) en la tabla definitiva ---

--- Contabilidad Banco ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.WFSGLN AS COD_GL, b.GLMDSC AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, '01' AS COD_ENTITY, 
    NULL AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AVGBAL_INT, CASE WHEN SUBSTR('${var:periodo}',5,2) = '01' THEN CAST(IFNULL(a.WFSAMT,0) AS DECIMAL(30,10)) ELSE CAST(((IFNULL(a.WFSAMT,0)-IFNULL(c.WFSAMT,0))) AS DECIMAL(30,10)) END AS PL, 'WFSALDOS' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_WFSALDOS a
	WHERE STRLEFT(a.WFSGLN, 1) IN ('6', '7', '8') AND a.WFSORD = '8' AND DATA_DATE = '${var:periodo}') a 
LEFT JOIN MIS_TMP_GLMST b
ON a.WFSGLN = b.GLMGLN AND b.GLMBNK = '01' AND b.GLMCCY = 'USD'
LEFT JOIN 
(
	SELECT a.*
	FROM MIS_LOAD_WFSALDOS a
	WHERE STRLEFT(a.WFSGLN, 1) IN ('6', '7', '8') AND a.WFSORD = '8' AND TO_TIMESTAMP(DATA_DATE,'yyyyMMdd') = DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1)) c
	ON a.WFSGLN = c.WFSGLN;

--- Contabilidad Entidades 02 y 03 ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.GLBGLN AS COD_GL, REGEXP_REPLACE(b.GLMDSC, '"', '') AS DES_GL, NULL AS COD_ACCO_CENT, a.GLBBRN AS COD_OFFI, NULL AS COD_NAR, 
	NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, REGEXP_REPLACE(a.GLBBNK, '"', '') AS COD_ENTITY, NULL AS EOPBAL_CAP, 
	NULL AS EOPBAL_INT, NULL AVGBAL_CAP, NULL AVGBAL_INT, 
	CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
		WHEN  1 THEN a.GLBJAX --Saldos contravalorados
		WHEN  2 THEN a.GLBFEX
		WHEN  3 THEN a.GLBMAX
		WHEN  4 THEN a.GLBAPX
		WHEN  5 THEN a.GLBMYX
		WHEN  6 THEN a.GLBJUX
		WHEN  7 THEN a.GLBJLX
		WHEN  8 THEN a.GLBAUX
		WHEN  9 THEN a.GLBSEX
		WHEN 10 THEN a.GLBOCX
		WHEN 11 THEN a.GLBNOX
		WHEN 12 THEN a.GLBDEX
    END AS decimal(30, 10)) AS PL, 'GLBLN' COD_INFO_SOURCE 
FROM (
	SELECT a.*
	FROM MIS_LOAD_GLBLN a
	WHERE (STRLEFT(a.GLBGLN, 1) IN ('4', '5') AND a.GLBBNK IN ('02','03'))) a
LEFT JOIN MIS_TMP_GLMST b
ON a.GLBGLN = b.GLMGLN AND a.GLBBNK = b.GLMBNK AND a.GLBCCY = b.GLMCCY;

--- Contabilidad Valores ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, a.VALGLN AS COD_GL, a.VALDSC AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, a.VALCUR AS COD_CURRENCY, '04' AS COD_ENTITY, 
    NULL AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AVGBAL_INT,  CASE WHEN SUBSTR('${var:periodo}',5,2) = '01' THEN CAST(IFNULL(a.VALAMT,0) AS DECIMAL(30,10)) ELSE  CAST(((IFNULL(a.VALAMT,0)-IFNULL(c.VALAMT,0))) AS DECIMAL(30,10)) END AS PL, 'MANUAL_VALORES' COD_INFO_SOURCE
FROM (
	SELECT a.*
	FROM MIS_LOAD_VALORES a
	WHERE STRLEFT(a.VALGLN, 1) IN ('4', '5') AND DATA_DATE = '${var:periodo}' AND LENGTH(a.VALGLN) = 16) a 
LEFT JOIN 
(
	SELECT a.*
	FROM MIS_LOAD_VALORES a
	WHERE STRLEFT(a.VALGLN, 1) IN ('4', '5') AND TO_TIMESTAMP(DATA_DATE,'yyyyMMdd') = DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1) AND LENGTH(a.VALGLN) = 16) c
	ON a.VALGLN = c.VALGLN;

--- Contabilidad Seguros ---
INSERT INTO MIS_APR_ACCOUNTING
PARTITION (DATA_DATE = '${var:periodo}')
SELECT 'CONT' AS COD_CONT, RPAD(a.CON_GLN, 16, '0') AS COD_GL, a.CON_DSC AS DES_GL, NULL AS COD_ACCO_CENT, NULL AS COD_OFFI, NULL AS COD_NAR,
    NULL AS COD_BLCE_STATUS, 'USD' AS COD_CURRENCY, '05' AS COD_ENTITY, 
    NULL AS EOPBAL_CAP,
    NULL AS EOPBAL_INT, NULL AS AVGBAL_CAP, NULL AS AVGBAL_INT, 
    CAST(CASE MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
        WHEN  1 THEN a.CON_JAN
        WHEN  2 THEN a.CON_FEB - a.CON_JAN
        WHEN  3 THEN a.CON_MAR - a.CON_FEB
        WHEN  4 THEN a.CON_APR - a.CON_MAR
        WHEN  5 THEN a.CON_MAY - a.CON_APR
        WHEN  6 THEN a.CON_JUN - a.CON_MAY
        WHEN  7 THEN a.CON_JUL - a.CON_JUN
        WHEN  8 THEN a.CON_AUG - a.CON_JUL
        WHEN  9 THEN a.CON_SEP - a.CON_AUG
        WHEN 10 THEN a.CON_OCT - a.CON_SEP
        WHEN 11 THEN a.CON_NOV - a.CON_OCT
        WHEN 12 THEN a.CON_DEC - a.CON_NOV
    END AS decimal(30, 10)) AS PL, 'SALDOSCON' COD_INFO_SOURCE 
FROM (
	SELECT b.*
	FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY DATA_DATE ORDER BY CON_GLN) ORDEN FROM MIS_TMP_SALDOSCON) a
	INNER JOIN (SELECT *, ROW_NUMBER() OVER (PARTITION BY DATA_DATE ORDER BY CON_GLN) ORDEN FROM MIS_TMP_SALDOSCON) b
	ON a.ORDEN = b.ORDEN+1
	WHERE STRLEFT(b.CON_GLN, 1) IN ('4', '5')
	AND LENGTH(b.CON_GLN) - LENGTH(a.CON_GLN) >= 0 
	) a;

--- Elimincaci칩n de la tabla temporal GLMST ---
TRUNCATE TABLE IF EXISTS MIS_TMP_GLMST;
DROP TABLE IF EXISTS MIS_TMP_GLMST;