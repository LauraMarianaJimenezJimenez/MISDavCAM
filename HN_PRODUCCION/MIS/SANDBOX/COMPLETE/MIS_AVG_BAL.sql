--------------------------------------------------------------- Motor de Saldos Medios y Arrastre de Muertos ------------------------------

--- Comando que apunta a la base de datos apropiada ---
USE ${var:base_datos};
SET DECIMAL_V2=FALSE;

COMPUTE INCREMENTAL STATS MIS_APR_${var:tabla} partition (data_date = '${var:periodo}');
COMPUTE INCREMENTAL STATS MIS_APR_CONTRACT_DT partition (data_date = '${var:periodo}');

INSERT INTO MIS_APR_${var:tabla}
PARTITION (DATA_DATE='${var:periodo}')
SELECT A.COD_CONT, CASE WHEN A.COD_SUBPRODUCT LIKE '%INT%' AND STRRIGHT(A.IDF_CTO,1) <> 'I' THEN CONCAT(A.IDF_CTO,'I') ELSE A.IDF_CTO END AS IDF_CTO, A.COD_GL, A.DES_GL, A.COD_ACCO_CENT, A.COD_OFFI, A.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, A.EOPBAL_CAP, A.EOPBAL_INT,
A.AVGBAL_CAP, A.AVGBAL_INT, CASE WHEN C.IDF_CTO IS NULL THEN CAST(A.PL1 AS DECIMAL(11,2)) ELSE 0 END AS PL, 
CONCAT(A.COD_INFO_SOURCE,IF(STRRIGHT(A.COD_INFO_SOURCE, 2)!='_M', '_M', ''))
FROM
(SELECT A.COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, 0 AS EOPBAL_CAP, 0 AS EOPBAL_INT,
0 AS AVGBAL_CAP, 0 AS AVGBAL_INT, CASE WHEN A.COD_CURRENCY = 'HNL' THEN MAX(PL) ELSE MAX(PL)/EXCH_RATE END AS PL1, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla} A
LEFT JOIN MIS_PAR_EXCH_RATE EXC
ON EXC.DATA_DATE = '${var:periodo}' AND A.COD_CURRENCY = EXC.COD_CURRENCY AND EXC.COD_CONT = 'TC_PROMEDIO'
AND IF(ISNULL(TRIM(EXC.COD_ENTITY),'') = '' ,'1',A.COD_ENTITY) = IF(ISNULL(TRIM(EXC.COD_ENTITY),'') = '','1',EXC.COD_ENTITY)
WHERE --STRRIGHT(COD_INFO_SOURCE,2) <> '_M' AND
/*YEAR(TO_TIMESTAMP(A.DATA_DATE,'yyyyMMdd')) = YEAR(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))
AND*/ (MONTH(TO_TIMESTAMP(A.DATA_DATE,'yyyyMMdd')) = MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd'))
AND TO_TIMESTAMP(A.DATA_DATE, 'yyyyMMdd') = DATE_SUB(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'), 1))
GROUP BY COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, A.COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_INFO_SOURCE, EXCH_RATE) A
LEFT JOIN
(SELECT DISTINCT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE DATA_DATE = '${var:periodo}') B
ON A.IDF_CTO = B.IDF_CTO AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_VALUE = B.COD_VALUE AND STRLEFT(A.COD_PRODUCT, 6) = STRLEFT(B.COD_PRODUCT, 6) AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_CONT = B.COD_CONT AND ISNULL(A.COD_ACCO_CENT,'0') = ISNULL(B.COD_ACCO_CENT,'0')
LEFT JOIN (SELECT * FROM MIS_APR_${var:tabla} WHERE DATA_DATE = '${var:periodo}') C
ON A.IDF_CTO = C.IDF_CTO AND A.COD_VALUE = C.COD_VALUE
WHERE B.IDF_CTO IS NULL
ORDER BY IDF_CTO ASC
;
/*
INSERT INTO MIS_APR_${var:tabla}
PARTITION (DATA_DATE='${var:periodo}')
SELECT A.COD_CONT, CASE WHEN A.COD_SUBPRODUCT LIKE '%INT%' AND STRRIGHT(A.IDF_CTO,1) <> 'I' THEN CONCAT(A.IDF_CTO,'I') ELSE A.IDF_CTO END AS IDF_CTO, A.COD_GL, A.DES_GL, A.COD_ACCO_CENT, A.COD_OFFI, A.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, A.EOPBAL_CAP, A.EOPBAL_INT,
A.AVGBAL_CAP, A.AVGBAL_INT, A.PL1, CONCAT(A.COD_INFO_SOURCE,IF(STRRIGHT(A.COD_INFO_SOURCE, 2)!='_M', '_M', ''))
FROM
(SELECT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, 0 AS EOPBAL_CAP, 0 AS EOPBAL_INT,
0 AS AVGBAL_CAP, 0 AS AVGBAL_INT, 0 AS PL1, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE (TO_TIMESTAMP(DATA_DATE,'yyyyMMdd') = DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1))
GROUP BY COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, 
COD_ACT_TYPE, COD_INFO_SOURCE) A
LEFT JOIN
(SELECT DISTINCT COD_CONT, IDF_CTO, COD_GL, DES_GL, COD_ACCO_CENT, COD_OFFI, COD_BLCE_STATUS, COD_VALUE, COD_CURRENCY, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_INFO_SOURCE
FROM MIS_APR_${var:tabla}
WHERE DATA_DATE = '${var:periodo}') B
ON A.IDF_CTO = B.IDF_CTO AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_VALUE = B.COD_VALUE AND STRLEFT(A.COD_PRODUCT, 6) = STRLEFT(B.COD_PRODUCT, 6) AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_CONT = B.COD_CONT AND ISNULL(A.COD_ACCO_CENT,'0') = ISNULL(B.COD_ACCO_CENT,'0')
WHERE B.IDF_CTO IS NULL
ORDER BY IDF_CTO ASC
;
*/
------------ Modificación APR_Contract_DT ------------
INSERT INTO MIS_APR_CONTRACT_DT PARTITION(DATA_DATE, COD_INFO_SOURCE)
    SELECT DISTINCT CASE WHEN COD_SUBPRODUCT LIKE '%INT%' AND STRRIGHT(DT_ARR.IDF_CTO_ARR,1) <> 'I' THEN CONCAT(DT_ARR.IDF_CTO_ARR,'I') ELSE DT_ARR.IDF_CTO_ARR END AS IDF_CTO, COD_ENTITY, COD_PRODUCT, COD_SUBPRODUCT, COD_ACT_TYPE, COD_CURRENCY, IDF_CLI, COD_ACCO_CENT, COD_OFFI, COD_BCA_INT, COD_AMRT_MET, COD_RATE_TYPE, RATE_INT, DATE_ORIGIN, DATE_LAST_REV, DATE_PRX_REV, EXP_DATE, FREQ_INT_PAY, COD_UNI_FREQ_INT_PAY, FRE_REV_INT, COD_UNI_FRE_REV_INT, AMRT_TRM, COD_UNI_AMRT_TRM, INI_AM, CUO_AM, CREDIT_LIM_AM, PREDEF_RATE_IND, PREDEF_RATE, IND_CHANNEL, COD_TYP_LIC, COD_SELLER, DES_SELLER, COU_CAR_OFF, COD_CONV, COD_EXEC_CTO, COD_COVID_PORT, DATE_DISB, FIELD1_CTO, FIELD2_CTO, FIELD3_CTO, FIELD4_CTO, FIELD5_CTO, FIELD6_CTO, FIELD7_CTO, FIELD8_CTO, FIELD9_CTO, FIELD10_CTO, CARD_NUMBER, COD_PROG_CARD, DES_PROG_CARD, '${var:periodo}' AS DATA_DATE, COD_INFO_SOURCE 
    FROM MIS_APR_CONTRACT_DT DT 
    INNER JOIN 
        (SELECT ARR.FEC_MAX, ARR.IDF_CTO AS IDF_CTO_ARR FROM 
            (SELECT ANT.*  FROM 
                (SELECT MAX(DATA_DATE) AS FEC_MAX,IDF_CTO
                FROM MIS_APR_CONTRACT_DT 
                WHERE /*YEAR(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = YEAR(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
                AND*/ ((MONTH(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = MONTH(TO_TIMESTAMP('${var:periodo}', 'yyyyMMdd')) 
                AND DATA_DATE < '${var:periodo}') OR (TO_TIMESTAMP(DATA_DATE,'yyyyMMdd') = 
                DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1) /*AND TO_TIMESTAMP(EXP_DATE,'yyyyMMdd') > 
                DAYS_SUB(TRUNC(DAYS_SUB(TRUNC(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'),'MM'),1),'MM'),1)*/
                ))
                GROUP BY IDF_CTO)  AS ANT  
                LEFT JOIN 
                (SELECT IDF_CTO AS IDF_CTO2
                FROM MIS_APR_CONTRACT_DT 
                WHERE DATA_DATE = '${var:periodo}') AS NUE 
                ON ANT.IDF_CTO = NUE.IDF_CTO2 WHERE NUE.IDF_CTO2 is NULL) ARR 
            INNER JOIN 
            (SELECT IDF_CTO,COD_PRODUCT, COD_SUBPRODUCT 
            FROM MIS_APR_${var:tabla} 
            WHERE DATA_DATE = '${var:periodo}'
            GROUP BY IDF_CTO,COD_PRODUCT, COD_SUBPRODUCT) AS B 
            ON B.IDF_CTO = ARR.IDF_CTO) AS DT_ARR 
    ON DT_ARR.IDF_CTO_ARR = DT.IDF_CTO AND DT_ARR.FEC_MAX = DT.DATA_DATE;


/*
------------ 1. Creación Tabla Conversión Moneda Local ------------
ALTER TABLE MIS_APR_${var:tabla}_EXCH DROP IF EXISTS PARTITION (data_date = '${var:periodo}');

INSERT INTO MIS_APR_${var:tabla}_EXCH
PARTITION (DATA_DATE='${var:periodo}')
SELECT a.IDF_CTO, a.COD_BLCE_STATUS, a.COD_VALUE, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACCO_CENT, a.COD_INFO_SOURCE,
CASE 
    WHEN a.COD_CURRENCY='HNL' THEN IFNULL(a.EOPBAL_CAP, 0)
    ELSE CAST(IFNULL(a.EOPBAL_CAP * b.EXCH_RATE, 0) AS DECIMAL(30,10)) END AS EOPBAL_CAP_EXCH,
CASE 
    WHEN a.COD_CURRENCY='HNL' THEN IFNULL(a.EOPBAL_INT, 0)
    ELSE CAST(IFNULL(a.EOPBAL_INT * b.EXCH_RATE, 0) AS DECIMAL(30,10)) END AS EOPBAL_INT_EXCH, 
NULL AVGBAL_CAP_EXCH, NULL AVGBAL_INT_EXCH,
a.COD_CONT, a.COD_ENTITY
FROM MIS_APR_${var:tabla} a
LEFT JOIN MIS_PAR_EXCH_RATE b   
ON a.DATA_DATE=b.DATA_DATE AND b.COD_CONT = 'TC_FOTO' AND a.COD_CURRENCY=b.COD_CURRENCY
AND IF(ISNULL(TRIM(b.COD_ENTITY),'') = '' ,'1',a.COD_ENTITY) = IF(ISNULL(TRIM(b.COD_ENTITY),'') = '','1',b.COD_ENTITY)
WHERE a.DATA_DATE = '${var:periodo}';

----------- 2. Creación Tabla Temporal Saldos Medios Contravalorados ------
TRUNCATE TABLE IF EXISTS MIS_TMP_AVGBAL_${var:tabla}_EXCH;
DROP TABLE IF EXISTS MIS_TMP_AVGBAL_${var:tabla}_EXCH;
CREATE TABLE MIS_TMP_AVGBAL_${var:tabla}_EXCH AS
SELECT a.IDF_CTO, a.COD_BLCE_STATUS, a.COD_VALUE, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACCO_CENT, a.COD_INFO_SOURCE,
CAST((SUM(a.EOPBAL_CAP_EXCH)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1)) AS DECIMAL(30,10)) AS AVGBAL_CAP_EXCH,
CAST((SUM(a.EOPBAL_INT_EXCH)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1)) AS DECIMAL(30,10)) AS AVGBAL_INT_EXCH,
COD_CONT, COD_ENTITY
FROM MIS_APR_${var:tabla}_EXCH a
WHERE Year(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) =  Year(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND Month(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = Month(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND a.DATA_DATE <= '21211231'
    AND a.COD_VALUE <> 'RSL'  
    GROUP BY a.IDF_CTO, a.COD_BLCE_STATUS, a.COD_VALUE, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACCO_CENT, a.COD_INFO_SOURCE, a.COD_CONT, a.COD_ENTITY;
    

------- 3. Tabla Temporal Copia Tabla Conversión Moneda Local -------
TRUNCATE TABLE IF EXISTS MIS_TMP_APR_${var:tabla}_EXCH;
DROP TABLE IF EXISTS MIS_TMP_APR_${var:tabla}_EXCH;
CREATE TABLE MIS_TMP_APR_${var:tabla}_EXCH AS
SELECT *
FROM  MIS_APR_${var:tabla}_EXCH
WHERE DATA_DATE = '${var:periodo}';


------- 4. Eliminación partición tabla Conversión Moneda Local para actualizar ---------
ALTER TABLE MIS_APR_${var:tabla}_EXCH DROP IF EXISTS PARTITION  (data_date = '${var:periodo}');


------- 5.  Actualización tabla Conversión Moneda Local con saldo medio contravalorado ---------
INSERT INTO MIS_APR_${var:tabla}_EXCH
PARTITION (DATA_DATE='${var:periodo}')
SELECT a.IDF_CTO, a.COD_BLCE_STATUS, a.COD_VALUE, a.COD_PRODUCT, a.COD_SUBPRODUCT, a.COD_ACCO_CENT, a.COD_INFO_SOURCE,
a.EOPBAL_CAP_EXCH, a.EOPBAL_INT_EXCH,b.AVGBAL_CAP_EXCH, b.AVGBAL_INT_EXCH,a.COD_CONT, a.COD_ENTITY
FROM MIS_TMP_APR_${var:tabla}_EXCH a
LEFT JOIN 
MIS_TMP_AVGBAL_${var:tabla}_EXCH b
ON a.IDF_CTO = b.IDF_CTO AND a.COD_BLCE_STATUS = b.COD_BLCE_STATUS AND a.COD_VALUE = b.COD_VALUE AND STRLEFT(a.COD_PRODUCT, 6) = STRLEFT(b.COD_PRODUCT, 6)
AND a.COD_SUBPRODUCT = b.COD_SUBPRODUCT AND ISNULL(a.COD_ACCO_CENT,'0') = ISNULL(b.COD_ACCO_CENT,'0') AND a.COD_INFO_SOURCE = b.COD_INFO_SOURCE 
AND a.COD_CONT = b.COD_CONT AND a.COD_ENTITY = b.COD_ENTITY
WHERE (A.DATA_DATE = '${var:periodo}');
*/


------------ Tabla para traer siempre el producto cuando esta vivo el contrato ------
DROP TABLE IF EXISTS MIS_TMP_LAST_${var:tabla};
CREATE TABLE MIS_TMP_LAST_${var:tabla} AS
SELECT IDF_CTO, MAX(DATA_DATE) AS DATA_DATE FROM MIS_APR_${var:tabla} 
WHERE STRLEFT(DATA_DATE,6) = STRLEFT('${var:periodo}',6) and DATA_DATE <= '${var:periodo}' AND COD_INFO_SOURCE NOT LIKE '%_M'
AND COD_VALUE IN ('CAP','INT')
GROUP BY IDF_CTO;

------------ Creación Tabla Temporal Saldos Medios ------------
DROP TABLE IF EXISTS MIS_TMP_LOAD_AVGBAL_${var:tabla};
CREATE TABLE MIS_TMP_LOAD_AVGBAL_${var:tabla}
(IDF_CTO STRING, COD_VALUE STRING, COD_INFO_SOURCE STRING,
AVGBAL_CAP DECIMAL(30,10), AVGBAL_INT DECIMAL(30,10),
COD_CONT STRING);


------------ Cálculo de Saldos Medios ------------
INSERT INTO MIS_TMP_LOAD_AVGBAL_${var:tabla}
    SELECT IDF_CTO, /*COD_BLCE_STATUS,*/ COD_VALUE, /*COD_PRODUCT, COD_SUBPRODUCT, COD_ACCO_CENT,*/ 'A' AS COD_INFO_SOURCE, 
    CAST((SUM(EOPBAL_CAP)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1))AS DECIMAL(30,10)) AS AVGBAL_CAP,
    CAST((SUM(EOPBAL_INT)/(DATEDIFF(to_timestamp('${var:periodo}','yyyyMMdd'),TRUNC(to_timestamp('${var:periodo}','yyyyMMdd'),'MM'))+1)) AS DECIMAL(30,10))AS AVGBAL_INT,
    COD_CONT
    FROM MIS_APR_${var:tabla}
    WHERE Year(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) =  Year(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND Month(TO_TIMESTAMP(DATA_DATE,'yyyyMMdd')) = Month(TO_TIMESTAMP('${var:periodo}','yyyyMMdd'))
    AND DATA_DATE <= '${var:periodo}'
    AND COD_VALUE <> 'RSL'  
    GROUP BY IDF_CTO, /*COD_BLCE_STATUS,*/ COD_VALUE, /*COD_PRODUCT, COD_SUBPRODUCT, COD_ACCO_CENT,*/ COD_CONT;


------------ Mapeamos el saldo medio siempre en el ultimo producto vivo ---------------
DROP TABLE IF EXISTS MIS_TMP_AVGBAL_${var:tabla};
CREATE TABLE MIS_TMP_AVGBAL_${var:tabla} AS
SELECT A.IDF_CTO, A.COD_VALUE, A.COD_BLCE_STATUS, A.COD_PRODUCT, A.COD_SUBPRODUCT, 
CAST(SUM(B.AVGBAL_CAP) AS DECIMAL(11,2)) AS AVGBAL_CAP, CAST(SUM(B.AVGBAL_INT) AS DECIMAL(11,2)) AS AVGBAL_INT
FROM(
SELECT A.DATA_DATE, A.IDF_CTO, A.COD_VALUE, A.COD_BLCE_STATUS, A.COD_PRODUCT, A.COD_SUBPRODUCT 
FROM MIS_APR_${var:tabla} A
INNER JOIN MIS_TMP_LAST_${var:tabla} B
ON A.IDF_CTO = B.IDF_CTO AND A.DATA_DATE = B.DATA_DATE
WHERE STRLEFT(A.DATA_DATE,6) = STRLEFT('${var:periodo}',6) and A.DATA_DATE <= '${var:periodo}' AND COD_INFO_SOURCE NOT LIKE '%_M'
AND A.COD_VALUE IN ('CAP','INT')) A
LEFT JOIN MIS_TMP_LOAD_AVGBAL_${var:tabla} AS B  
ON A.IDF_CTO = B.IDF_CTO AND A.COD_VALUE = B.COD_VALUE
GROUP BY A.IDF_CTO, A.COD_VALUE, A.COD_BLCE_STATUS, A.COD_PRODUCT, A.COD_SUBPRODUCT
;

------------ Inserción en la tabla APR_ASSETS ------------
TRUNCATE TABLE IF EXISTS MIS_APR_${var:tabla}_TMP_LOAD;
DROP TABLE IF EXISTS MIS_APR_${var:tabla}_TMP_LOAD;

CREATE TABLE MIS_APR_${var:tabla}_TMP_LOAD AS
SELECT * FROM MIS_APR_${var:tabla}
WHERE DATA_DATE = '${var:periodo}';

--COMPUTE STATS MIS_APR_${var:tabla}_TMP_LOAD;

ALTER TABLE MIS_APR_${var:tabla}
DROP IF EXISTS PARTITION (DATA_DATE = '${var:periodo}');

INSERT INTO MIS_APR_${var:tabla} PARTITION(DATA_DATE)
SELECT A.COD_CONT, A.IDF_CTO, A.COD_GL, NULL, A.COD_ACCO_CENT, A.COD_OFFI, A.COD_BLCE_STATUS, A.COD_VALUE, A.COD_CURRENCY, A.COD_ENTITY, A.COD_PRODUCT, A.COD_SUBPRODUCT, A.COD_ACT_TYPE, A.EOPBAL_CAP, 
A.EOPBAL_INT, ISNULL(B.AVGBAL_CAP,0), ISNULL(B.AVGBAL_INT,0), A.PL, A.COD_INFO_SOURCE, A.DATA_DATE
FROM MIS_APR_${var:tabla}_TMP_LOAD AS A
LEFT JOIN MIS_TMP_AVGBAL_${var:tabla} AS B  
ON (A.IDF_CTO = B.IDF_CTO AND A.COD_BLCE_STATUS = B.COD_BLCE_STATUS AND A.COD_PRODUCT = B.COD_PRODUCT AND A.COD_SUBPRODUCT = B.COD_SUBPRODUCT AND A.COD_VALUE = B.COD_VALUE)  
WHERE (A.DATA_DATE = '${var:periodo}');


------------ Limpiar las Tablas Temporales ------------
--TRUNCATE TABLE MIS_TMP_LOAD_AVGBAL_${var:tabla};
--DROP TABLE MIS_TMP_LOAD_AVGBAL_${var:tabla};

----Borrado de tablas temporales
--TRUNCATE TABLE IF EXISTS MIS_TMP_${var:tabla}_EOPBAL_TBL;
--DROP TABLE IF EXISTS MIS_TMP_${var:tabla}_EOPBAL_TBL;